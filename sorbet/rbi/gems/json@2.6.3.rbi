# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `json` gem.
# Please instead update this file by running `bin/tapioca gem json`.

class Class < ::Module
  # source://json//json/common.rb#700
  def json_creatable?; end
end

module JSON
  private

  # source://json//json/common.rb#631
  def dump(obj, anIO = T.unsafe(nil), limit = T.unsafe(nil)); end

  # source://json//json/common.rb#335
  def fast_generate(obj, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#335
  def fast_unparse(obj, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#296
  def generate(obj, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#557
  def load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://json//json/common.rb#245
  def load_file(filespec, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#256
  def load_file!(filespec, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#215
  def parse(source, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#230
  def parse!(source, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#390
  def pretty_generate(obj, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#390
  def pretty_unparse(obj, opts = T.unsafe(nil)); end

  # source://json//json/common.rb#575
  def recurse_proc(result, &proc); end

  # source://json//json/common.rb#557
  def restore(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://json//json/common.rb#296
  def unparse(obj, opts = T.unsafe(nil)); end

  class << self
    # source://json//json/common.rb#18
    def [](object, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#81
    def create_fast_state; end

    # source://json//json/common.rb#126
    def create_id; end

    # source://json//json/common.rb#120
    def create_id=(new_value); end

    # source://json//json/common.rb#91
    def create_pretty_state; end

    # source://json//json/common.rb#42
    def deep_const_get(path); end

    # source://json//json/common.rb#631
    def dump(obj, anIO = T.unsafe(nil), limit = T.unsafe(nil)); end

    # source://json//json/common.rb#596
    def dump_default_options; end

    # source://json//json/common.rb#596
    def dump_default_options=(_arg0); end

    # source://json//json/common.rb#335
    def fast_generate(obj, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#335
    def fast_unparse(obj, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#296
    def generate(obj, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#103
    def generator; end

    # source://json//json/common.rb#58
    def generator=(generator); end

    # source://json//json/common.rb#653
    def iconv(to, from, string); end

    # source://json//json/common.rb#557
    def load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://json//json/common.rb#420
    def load_default_options; end

    # source://json//json/common.rb#420
    def load_default_options=(_arg0); end

    # source://json//json/common.rb#245
    def load_file(filespec, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#256
    def load_file!(filespec, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#215
    def parse(source, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#230
    def parse!(source, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#29
    def parser; end

    # source://json//json/common.rb#32
    def parser=(parser); end

    # source://json//json/common.rb#390
    def pretty_generate(obj, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#390
    def pretty_unparse(obj, opts = T.unsafe(nil)); end

    # source://json//json/common.rb#575
    def recurse_proc(result, &proc); end

    # source://json//json/common.rb#557
    def restore(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://json//json/common.rb#108
    def state; end

    # source://json//json/common.rb#108
    def state=(_arg0); end

    # source://json//json/common.rb#296
    def unparse(obj, opts = T.unsafe(nil)); end
  end
end

# source://json//json/common.rb#114
JSON::CREATE_ID_TLS_KEY = T.let(T.unsafe(nil), String)

# source://json//json/common.rb#111
JSON::DEFAULT_CREATE_ID = T.let(T.unsafe(nil), String)

class JSON::GenericObject < ::OpenStruct
  # source://json//json/generic_object.rb#63
  def as_json(*_arg0); end

  # source://json//json/generic_object.rb#47
  def to_hash; end

  # source://json//json/generic_object.rb#67
  def to_json(*a); end

  # source://json//json/generic_object.rb#59
  def |(other); end

  class << self
    # source://json//json/generic_object.rb#41
    def dump(obj, *args); end

    # source://json//json/generic_object.rb#21
    def from_hash(object); end

    # source://json//json/generic_object.rb#13
    def json_creatable=(_arg0); end

    # source://json//json/generic_object.rb#9
    def json_creatable?; end

    # source://json//json/generic_object.rb#15
    def json_create(data); end

    # source://json//json/generic_object.rb#36
    def load(source, proc = T.unsafe(nil), opts = T.unsafe(nil)); end
  end
end

class JSON::JSONError < ::StandardError
  class << self
    # source://json//json/common.rb#138
    def wrap(exception); end
  end
end

# source://json//json/common.rb#35
JSON::Parser = JSON::Ext::Parser

# source://json//json/common.rb#73
JSON::State = JSON::Ext::Generator::State

# source://json//json/common.rb#159
JSON::UnparserError = JSON::GeneratorError

module Kernel
  private

  # source://json//json/common.rb#685
  def JSON(object, *args); end

  # source://json//json/common.rb#663
  def j(*objs); end

  # source://json//json/common.rb#672
  def jj(*objs); end
end
