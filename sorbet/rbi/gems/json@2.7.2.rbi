# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `json` gem.
# Please instead update this file by running `bin/tapioca gem json`.


# source://json//lib/json/common.rb#690
class Class < ::Module
  # source://json//lib/json/common.rb#695
  def json_creatable?; end
end

# source://json//lib/json/version.rb#2
module JSON
  private

  # source://json//lib/json/common.rb#615
  def dump(obj, anIO = T.unsafe(nil), limit = T.unsafe(nil), kwargs = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#329
  def fast_generate(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#329
  def fast_unparse(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#300
  def generate(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#541
  def load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#249
  def load_file(filespec, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#260
  def load_file!(filespec, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#643
  def merge_dump_options(opts, strict: T.unsafe(nil)); end

  # source://json//lib/json/common.rb#219
  def parse(source, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#234
  def parse!(source, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#374
  def pretty_generate(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#374
  def pretty_unparse(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#559
  def recurse_proc(result, &proc); end

  # source://json//lib/json/common.rb#541
  def restore(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#300
  def unparse(obj, opts = T.unsafe(nil)); end

  class << self
    # source://json//lib/json/common.rb#22
    def [](object, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#85
    def create_fast_state; end

    # source://json//lib/json/common.rb#130
    def create_id; end

    # source://json//lib/json/common.rb#124
    def create_id=(new_value); end

    # source://json//lib/json/common.rb#95
    def create_pretty_state; end

    # source://json//lib/json/common.rb#46
    def deep_const_get(path); end

    # source://json//lib/json/common.rb#615
    def dump(obj, anIO = T.unsafe(nil), limit = T.unsafe(nil), kwargs = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#580
    def dump_default_options; end

    # source://json//lib/json/common.rb#580
    def dump_default_options=(_arg0); end

    # source://json//lib/json/common.rb#329
    def fast_generate(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#329
    def fast_unparse(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#300
    def generate(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#107
    def generator; end

    # source://json//lib/json/common.rb#62
    def generator=(generator); end

    # source://json//lib/json/common.rb#639
    def iconv(to, from, string); end

    # source://json//lib/json/common.rb#541
    def load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#404
    def load_default_options; end

    # source://json//lib/json/common.rb#404
    def load_default_options=(_arg0); end

    # source://json//lib/json/common.rb#249
    def load_file(filespec, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#260
    def load_file!(filespec, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#219
    def parse(source, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#234
    def parse!(source, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#33
    def parser; end

    # source://json//lib/json/common.rb#36
    def parser=(parser); end

    # source://json//lib/json/common.rb#374
    def pretty_generate(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#374
    def pretty_unparse(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#559
    def recurse_proc(result, &proc); end

    # source://json//lib/json/common.rb#541
    def restore(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#112
    def state; end

    # source://json//lib/json/common.rb#112
    def state=(_arg0); end

    # source://json//lib/json/common.rb#300
    def unparse(obj, opts = T.unsafe(nil)); end

    private

    # source://json//lib/json/common.rb#643
    def merge_dump_options(opts, strict: T.unsafe(nil)); end
  end
end

# source://json//lib/json/common.rb#118
JSON::CREATE_ID_TLS_KEY = T.let(T.unsafe(nil), String)

# source://json//lib/json/common.rb#115
JSON::DEFAULT_CREATE_ID = T.let(T.unsafe(nil), String)

# source://json//lib/json/generic_object.rb#9
class JSON::GenericObject < ::OpenStruct
  # source://json//lib/json/generic_object.rb#67
  def as_json(*_arg0); end

  # source://json//lib/json/generic_object.rb#51
  def to_hash; end

  # source://json//lib/json/generic_object.rb#71
  def to_json(*a); end

  # source://json//lib/json/generic_object.rb#63
  def |(other); end

  class << self
    # source://json//lib/json/generic_object.rb#45
    def dump(obj, *args); end

    # source://json//lib/json/generic_object.rb#25
    def from_hash(object); end

    # source://json//lib/json/generic_object.rb#17
    def json_creatable=(_arg0); end

    # source://json//lib/json/generic_object.rb#13
    def json_creatable?; end

    # source://json//lib/json/generic_object.rb#19
    def json_create(data); end

    # source://json//lib/json/generic_object.rb#40
    def load(source, proc = T.unsafe(nil), opts = T.unsafe(nil)); end
  end
end

# source://json//lib/json/common.rb#141
class JSON::JSONError < ::StandardError
  class << self
    # source://json//lib/json/common.rb#142
    def wrap(exception); end
  end
end

# source://json//lib/json/common.rb#7
JSON::NOT_SET = T.let(T.unsafe(nil), Object)

# source://json//lib/json/common.rb#39
JSON::Parser = JSON::Ext::Parser

# source://json//lib/json/common.rb#77
JSON::State = JSON::Ext::Generator::State

# source://json//lib/json/common.rb#163
JSON::UnparserError = JSON::GeneratorError

# source://json//lib/json/common.rb#653
module Kernel
  private

  # source://json//lib/json/common.rb#680
  def JSON(object, *args); end

  # source://json//lib/json/common.rb#658
  def j(*objs); end

  # source://json//lib/json/common.rb#667
  def jj(*objs); end
end
