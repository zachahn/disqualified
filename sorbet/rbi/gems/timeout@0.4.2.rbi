# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `timeout` gem.
# Please instead update this file by running `bin/tapioca gem timeout`.


# source://timeout//lib/timeout.rb#21
module Timeout
  private

  # source://timeout//lib/timeout.rb#166
  def timeout(sec, klass = T.unsafe(nil), message = T.unsafe(nil), &block); end

  class << self
    # source://timeout//lib/timeout.rb#124
    def ensure_timeout_thread_created; end

    # source://timeout//lib/timeout.rb#166
    def timeout(sec, klass = T.unsafe(nil), message = T.unsafe(nil), &block); end

    private

    # source://timeout//lib/timeout.rb#94
    def create_timeout_thread; end
  end
end

# source://timeout//lib/timeout.rb#47
Timeout::CONDVAR = T.let(T.unsafe(nil), Thread::ConditionVariable)

# source://timeout//lib/timeout.rb#33
class Timeout::Error < ::RuntimeError
  class << self
    # source://timeout//lib/timeout.rb#34
    def handle_timeout(message); end
  end
end

# source://timeout//lib/timeout.rb#26
class Timeout::ExitException < ::Exception
  # source://timeout//lib/timeout.rb#27
  def exception(*_arg0); end
end

# source://timeout//lib/timeout.rb#136
Timeout::GET_TIME = T.let(T.unsafe(nil), Method)

# source://timeout//lib/timeout.rb#48
Timeout::QUEUE = T.let(T.unsafe(nil), Thread::Queue)

# source://timeout//lib/timeout.rb#49
Timeout::QUEUE_MUTEX = T.let(T.unsafe(nil), Thread::Mutex)

# source://timeout//lib/timeout.rb#54
class Timeout::Request
  # source://timeout//lib/timeout.rb#57
  def initialize(thread, timeout, exception_class, message); end

  # source://timeout//lib/timeout.rb#55
  def deadline; end

  # source://timeout//lib/timeout.rb#67
  def done?; end

  # source://timeout//lib/timeout.rb#73
  def expired?(now); end

  # source://timeout//lib/timeout.rb#86
  def finished; end

  # source://timeout//lib/timeout.rb#77
  def interrupt; end
end

# source://timeout//lib/timeout.rb#50
Timeout::TIMEOUT_THREAD_MUTEX = T.let(T.unsafe(nil), Thread::Mutex)

# source://timeout//lib/timeout.rb#23
Timeout::VERSION = T.let(T.unsafe(nil), String)
