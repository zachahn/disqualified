# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `language_server-protocol` gem.
# Please instead update this file by running `bin/tapioca gem language_server-protocol`.

# source://language_server-protocol//lib/language_server/protocol/version.rb#1
module LanguageServer; end

# source://language_server-protocol//lib/language_server/protocol/version.rb#2
module LanguageServer::Protocol; end

# source://language_server-protocol//lib/language_server/protocol/constant.rb#3
module LanguageServer::Protocol::Constant; end

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#14
module LanguageServer::Protocol::Constant::CodeActionKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#18
LanguageServer::Protocol::Constant::CodeActionKind::EMPTY = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#22
LanguageServer::Protocol::Constant::CodeActionKind::QUICK_FIX = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#26
LanguageServer::Protocol::Constant::CodeActionKind::REFACTOR = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#38
LanguageServer::Protocol::Constant::CodeActionKind::REFACTOR_EXTRACT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#49
LanguageServer::Protocol::Constant::CodeActionKind::REFACTOR_INLINE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#62
LanguageServer::Protocol::Constant::CodeActionKind::REFACTOR_REWRITE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#68
LanguageServer::Protocol::Constant::CodeActionKind::SOURCE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#81
LanguageServer::Protocol::Constant::CodeActionKind::SOURCE_FIX_ALL = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_kind.rb#73
LanguageServer::Protocol::Constant::CodeActionKind::SOURCE_ORGANIZE_IMPORTS = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_trigger_kind.rb#7
module LanguageServer::Protocol::Constant::CodeActionTriggerKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_trigger_kind.rb#18
LanguageServer::Protocol::Constant::CodeActionTriggerKind::AUTOMATIC = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/code_action_trigger_kind.rb#11
LanguageServer::Protocol::Constant::CodeActionTriggerKind::INVOKED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#7
module LanguageServer::Protocol::Constant::CompletionItemKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#14
LanguageServer::Protocol::Constant::CompletionItemKind::CLASS = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#23
LanguageServer::Protocol::Constant::CompletionItemKind::COLOR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#28
LanguageServer::Protocol::Constant::CompletionItemKind::CONSTANT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#11
LanguageServer::Protocol::Constant::CompletionItemKind::CONSTRUCTOR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#20
LanguageServer::Protocol::Constant::CompletionItemKind::ENUM = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#27
LanguageServer::Protocol::Constant::CompletionItemKind::ENUM_MEMBER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#30
LanguageServer::Protocol::Constant::CompletionItemKind::EVENT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#12
LanguageServer::Protocol::Constant::CompletionItemKind::FIELD = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#24
LanguageServer::Protocol::Constant::CompletionItemKind::FILE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#26
LanguageServer::Protocol::Constant::CompletionItemKind::FOLDER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#10
LanguageServer::Protocol::Constant::CompletionItemKind::FUNCTION = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#15
LanguageServer::Protocol::Constant::CompletionItemKind::INTERFACE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#21
LanguageServer::Protocol::Constant::CompletionItemKind::KEYWORD = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#9
LanguageServer::Protocol::Constant::CompletionItemKind::METHOD = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#16
LanguageServer::Protocol::Constant::CompletionItemKind::MODULE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#31
LanguageServer::Protocol::Constant::CompletionItemKind::OPERATOR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#17
LanguageServer::Protocol::Constant::CompletionItemKind::PROPERTY = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#25
LanguageServer::Protocol::Constant::CompletionItemKind::REFERENCE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#22
LanguageServer::Protocol::Constant::CompletionItemKind::SNIPPET = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#29
LanguageServer::Protocol::Constant::CompletionItemKind::STRUCT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#8
LanguageServer::Protocol::Constant::CompletionItemKind::TEXT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#32
LanguageServer::Protocol::Constant::CompletionItemKind::TYPE_PARAMETER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#18
LanguageServer::Protocol::Constant::CompletionItemKind::UNIT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#19
LanguageServer::Protocol::Constant::CompletionItemKind::VALUE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_kind.rb#13
LanguageServer::Protocol::Constant::CompletionItemKind::VARIABLE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_tag.rb#8
module LanguageServer::Protocol::Constant::CompletionItemTag; end

# source://language_server-protocol//lib/language_server/protocol/constant/completion_item_tag.rb#12
LanguageServer::Protocol::Constant::CompletionItemTag::DEPRECATED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_trigger_kind.rb#7
module LanguageServer::Protocol::Constant::CompletionTriggerKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/completion_trigger_kind.rb#12
LanguageServer::Protocol::Constant::CompletionTriggerKind::INVOKED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_trigger_kind.rb#18
LanguageServer::Protocol::Constant::CompletionTriggerKind::TRIGGER_CHARACTER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/completion_trigger_kind.rb#22
LanguageServer::Protocol::Constant::CompletionTriggerKind::TRIGGER_FOR_INCOMPLETE_COMPLETIONS = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_severity.rb#4
module LanguageServer::Protocol::Constant::DiagnosticSeverity; end

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_severity.rb#8
LanguageServer::Protocol::Constant::DiagnosticSeverity::ERROR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_severity.rb#20
LanguageServer::Protocol::Constant::DiagnosticSeverity::HINT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_severity.rb#16
LanguageServer::Protocol::Constant::DiagnosticSeverity::INFORMATION = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_severity.rb#12
LanguageServer::Protocol::Constant::DiagnosticSeverity::WARNING = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_tag.rb#7
module LanguageServer::Protocol::Constant::DiagnosticTag; end

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_tag.rb#20
LanguageServer::Protocol::Constant::DiagnosticTag::DEPRECATED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/diagnostic_tag.rb#14
LanguageServer::Protocol::Constant::DiagnosticTag::UNNECESSARY = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/document_diagnostic_report_kind.rb#7
module LanguageServer::Protocol::Constant::DocumentDiagnosticReportKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/document_diagnostic_report_kind.rb#12
LanguageServer::Protocol::Constant::DocumentDiagnosticReportKind::FULL = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/document_diagnostic_report_kind.rb#17
LanguageServer::Protocol::Constant::DocumentDiagnosticReportKind::UNCHANGED = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/document_highlight_kind.rb#7
module LanguageServer::Protocol::Constant::DocumentHighlightKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/document_highlight_kind.rb#15
LanguageServer::Protocol::Constant::DocumentHighlightKind::READ = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/document_highlight_kind.rb#11
LanguageServer::Protocol::Constant::DocumentHighlightKind::TEXT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/document_highlight_kind.rb#19
LanguageServer::Protocol::Constant::DocumentHighlightKind::WRITE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#4
module LanguageServer::Protocol::Constant::ErrorCodes; end

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#59
LanguageServer::Protocol::Constant::ErrorCodes::CONTENT_MODIFIED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#9
LanguageServer::Protocol::Constant::ErrorCodes::INTERNAL_ERROR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#8
LanguageServer::Protocol::Constant::ErrorCodes::INVALID_PARAMS = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#6
LanguageServer::Protocol::Constant::ErrorCodes::INVALID_REQUEST = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#29
LanguageServer::Protocol::Constant::ErrorCodes::JSONRPC_RESERVED_ERROR_RANGE_END = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#17
LanguageServer::Protocol::Constant::ErrorCodes::JSONRPC_RESERVED_ERROR_RANGE_START = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#69
LanguageServer::Protocol::Constant::ErrorCodes::LSP_RESERVED_ERROR_RANGE_END = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#35
LanguageServer::Protocol::Constant::ErrorCodes::LSP_RESERVED_ERROR_RANGE_START = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#7
LanguageServer::Protocol::Constant::ErrorCodes::METHOD_NOT_FOUND = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#5
LanguageServer::Protocol::Constant::ErrorCodes::PARSE_ERROR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#64
LanguageServer::Protocol::Constant::ErrorCodes::REQUEST_CANCELLED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#42
LanguageServer::Protocol::Constant::ErrorCodes::REQUEST_FAILED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#48
LanguageServer::Protocol::Constant::ErrorCodes::SERVER_CANCELLED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#30
LanguageServer::Protocol::Constant::ErrorCodes::SERVER_ERROR_END = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#18
LanguageServer::Protocol::Constant::ErrorCodes::SERVER_ERROR_START = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#23
LanguageServer::Protocol::Constant::ErrorCodes::SERVER_NOT_INITIALIZED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/error_codes.rb#24
LanguageServer::Protocol::Constant::ErrorCodes::UNKNOWN_ERROR_CODE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/failure_handling_kind.rb#4
module LanguageServer::Protocol::Constant::FailureHandlingKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/failure_handling_kind.rb#10
LanguageServer::Protocol::Constant::FailureHandlingKind::ABORT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/failure_handling_kind.rb#21
LanguageServer::Protocol::Constant::FailureHandlingKind::TEXT_ONLY_TRANSACTIONAL = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/failure_handling_kind.rb#15
LanguageServer::Protocol::Constant::FailureHandlingKind::TRANSACTIONAL = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/failure_handling_kind.rb#26
LanguageServer::Protocol::Constant::FailureHandlingKind::UNDO = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/file_change_type.rb#7
module LanguageServer::Protocol::Constant::FileChangeType; end

# source://language_server-protocol//lib/language_server/protocol/constant/file_change_type.rb#15
LanguageServer::Protocol::Constant::FileChangeType::CHANGED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/file_change_type.rb#11
LanguageServer::Protocol::Constant::FileChangeType::CREATED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/file_change_type.rb#19
LanguageServer::Protocol::Constant::FileChangeType::DELETED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/file_operation_pattern_kind.rb#8
module LanguageServer::Protocol::Constant::FileOperationPatternKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/file_operation_pattern_kind.rb#12
LanguageServer::Protocol::Constant::FileOperationPatternKind::FILE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/file_operation_pattern_kind.rb#16
LanguageServer::Protocol::Constant::FileOperationPatternKind::FOLDER = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/folding_range_kind.rb#8
module LanguageServer::Protocol::Constant::FoldingRangeKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/folding_range_kind.rb#12
LanguageServer::Protocol::Constant::FoldingRangeKind::COMMENT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/folding_range_kind.rb#16
LanguageServer::Protocol::Constant::FoldingRangeKind::IMPORTS = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/folding_range_kind.rb#20
LanguageServer::Protocol::Constant::FoldingRangeKind::REGION = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/initialize_error_codes.rb#7
module LanguageServer::Protocol::Constant::InitializeErrorCodes; end

# source://language_server-protocol//lib/language_server/protocol/constant/initialize_error_codes.rb#12
LanguageServer::Protocol::Constant::InitializeErrorCodes::UNKNOWN_PROTOCOL_VERSION = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/inlay_hint_kind.rb#7
module LanguageServer::Protocol::Constant::InlayHintKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/inlay_hint_kind.rb#15
LanguageServer::Protocol::Constant::InlayHintKind::PARAMETER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/inlay_hint_kind.rb#11
LanguageServer::Protocol::Constant::InlayHintKind::TYPE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/insert_text_format.rb#8
module LanguageServer::Protocol::Constant::InsertTextFormat; end

# source://language_server-protocol//lib/language_server/protocol/constant/insert_text_format.rb#12
LanguageServer::Protocol::Constant::InsertTextFormat::PLAIN_TEXT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/insert_text_format.rb#21
LanguageServer::Protocol::Constant::InsertTextFormat::SNIPPET = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/insert_text_mode.rb#8
module LanguageServer::Protocol::Constant::InsertTextMode; end

# source://language_server-protocol//lib/language_server/protocol/constant/insert_text_mode.rb#26
LanguageServer::Protocol::Constant::InsertTextMode::ADJUST_INDENTATION = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/insert_text_mode.rb#16
LanguageServer::Protocol::Constant::InsertTextMode::AS_IS = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/markup_kind.rb#11
module LanguageServer::Protocol::Constant::MarkupKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/markup_kind.rb#19
LanguageServer::Protocol::Constant::MarkupKind::MARKDOWN = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/markup_kind.rb#15
LanguageServer::Protocol::Constant::MarkupKind::PLAIN_TEXT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/message_type.rb#4
module LanguageServer::Protocol::Constant::MessageType; end

# source://language_server-protocol//lib/language_server/protocol/constant/message_type.rb#8
LanguageServer::Protocol::Constant::MessageType::ERROR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/message_type.rb#16
LanguageServer::Protocol::Constant::MessageType::INFO = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/message_type.rb#20
LanguageServer::Protocol::Constant::MessageType::LOG = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/message_type.rb#12
LanguageServer::Protocol::Constant::MessageType::WARNING = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/moniker_kind.rb#7
module LanguageServer::Protocol::Constant::MonikerKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/moniker_kind.rb#15
LanguageServer::Protocol::Constant::MonikerKind::EXPORT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/moniker_kind.rb#11
LanguageServer::Protocol::Constant::MonikerKind::IMPORT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/moniker_kind.rb#20
LanguageServer::Protocol::Constant::MonikerKind::LOCAL = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/notebook_cell_kind.rb#7
module LanguageServer::Protocol::Constant::NotebookCellKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/notebook_cell_kind.rb#15
LanguageServer::Protocol::Constant::NotebookCellKind::CODE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/notebook_cell_kind.rb#11
LanguageServer::Protocol::Constant::NotebookCellKind::MARKUP = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/position_encoding_kind.rb#9
module LanguageServer::Protocol::Constant::PositionEncodingKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/position_encoding_kind.rb#20
LanguageServer::Protocol::Constant::PositionEncodingKind::UTF16 = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/position_encoding_kind.rb#28
LanguageServer::Protocol::Constant::PositionEncodingKind::UTF32 = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/position_encoding_kind.rb#13
LanguageServer::Protocol::Constant::PositionEncodingKind::UTF8 = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/prepare_support_default_behavior.rb#4
module LanguageServer::Protocol::Constant::PrepareSupportDefaultBehavior; end

# source://language_server-protocol//lib/language_server/protocol/constant/prepare_support_default_behavior.rb#9
LanguageServer::Protocol::Constant::PrepareSupportDefaultBehavior::IDENTIFIER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/resource_operation_kind.rb#7
module LanguageServer::Protocol::Constant::ResourceOperationKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/resource_operation_kind.rb#11
LanguageServer::Protocol::Constant::ResourceOperationKind::CREATE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/resource_operation_kind.rb#19
LanguageServer::Protocol::Constant::ResourceOperationKind::DELETE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/resource_operation_kind.rb#15
LanguageServer::Protocol::Constant::ResourceOperationKind::RENAME = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#4
module LanguageServer::Protocol::Constant::SemanticTokenModifiers; end

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#10
LanguageServer::Protocol::Constant::SemanticTokenModifiers::ABSTRACT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#11
LanguageServer::Protocol::Constant::SemanticTokenModifiers::ASYNC = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#5
LanguageServer::Protocol::Constant::SemanticTokenModifiers::DECLARATION = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#14
LanguageServer::Protocol::Constant::SemanticTokenModifiers::DEFAULT_LIBRARY = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#6
LanguageServer::Protocol::Constant::SemanticTokenModifiers::DEFINITION = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#9
LanguageServer::Protocol::Constant::SemanticTokenModifiers::DEPRECATED = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#13
LanguageServer::Protocol::Constant::SemanticTokenModifiers::DOCUMENTATION = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#12
LanguageServer::Protocol::Constant::SemanticTokenModifiers::MODIFICATION = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#7
LanguageServer::Protocol::Constant::SemanticTokenModifiers::READONLY = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_modifiers.rb#8
LanguageServer::Protocol::Constant::SemanticTokenModifiers::STATIC = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#4
module LanguageServer::Protocol::Constant::SemanticTokenTypes; end

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#11
LanguageServer::Protocol::Constant::SemanticTokenTypes::CLASS = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#26
LanguageServer::Protocol::Constant::SemanticTokenTypes::COMMENT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#31
LanguageServer::Protocol::Constant::SemanticTokenTypes::DECORATOR = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#12
LanguageServer::Protocol::Constant::SemanticTokenTypes::ENUM = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#19
LanguageServer::Protocol::Constant::SemanticTokenTypes::ENUM_MEMBER = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#20
LanguageServer::Protocol::Constant::SemanticTokenTypes::EVENT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#21
LanguageServer::Protocol::Constant::SemanticTokenTypes::FUNCTION = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#13
LanguageServer::Protocol::Constant::SemanticTokenTypes::INTERFACE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#24
LanguageServer::Protocol::Constant::SemanticTokenTypes::KEYWORD = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#23
LanguageServer::Protocol::Constant::SemanticTokenTypes::MACRO = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#22
LanguageServer::Protocol::Constant::SemanticTokenTypes::METHOD = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#25
LanguageServer::Protocol::Constant::SemanticTokenTypes::MODIFIER = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#5
LanguageServer::Protocol::Constant::SemanticTokenTypes::NAMESPACE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#28
LanguageServer::Protocol::Constant::SemanticTokenTypes::NUMBER = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#30
LanguageServer::Protocol::Constant::SemanticTokenTypes::OPERATOR = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#16
LanguageServer::Protocol::Constant::SemanticTokenTypes::PARAMETER = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#18
LanguageServer::Protocol::Constant::SemanticTokenTypes::PROPERTY = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#29
LanguageServer::Protocol::Constant::SemanticTokenTypes::REGEXP = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#27
LanguageServer::Protocol::Constant::SemanticTokenTypes::STRING = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#14
LanguageServer::Protocol::Constant::SemanticTokenTypes::STRUCT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#10
LanguageServer::Protocol::Constant::SemanticTokenTypes::TYPE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#15
LanguageServer::Protocol::Constant::SemanticTokenTypes::TYPE_PARAMETER = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/semantic_token_types.rb#17
LanguageServer::Protocol::Constant::SemanticTokenTypes::VARIABLE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/signature_help_trigger_kind.rb#7
module LanguageServer::Protocol::Constant::SignatureHelpTriggerKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/signature_help_trigger_kind.rb#20
LanguageServer::Protocol::Constant::SignatureHelpTriggerKind::CONTENT_CHANGE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/signature_help_trigger_kind.rb#11
LanguageServer::Protocol::Constant::SignatureHelpTriggerKind::INVOKED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/signature_help_trigger_kind.rb#15
LanguageServer::Protocol::Constant::SignatureHelpTriggerKind::TRIGGER_CHARACTER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#7
module LanguageServer::Protocol::Constant::SymbolKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#25
LanguageServer::Protocol::Constant::SymbolKind::ARRAY = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#24
LanguageServer::Protocol::Constant::SymbolKind::BOOLEAN = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#12
LanguageServer::Protocol::Constant::SymbolKind::CLASS = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#21
LanguageServer::Protocol::Constant::SymbolKind::CONSTANT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#16
LanguageServer::Protocol::Constant::SymbolKind::CONSTRUCTOR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#17
LanguageServer::Protocol::Constant::SymbolKind::ENUM = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#29
LanguageServer::Protocol::Constant::SymbolKind::ENUM_MEMBER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#31
LanguageServer::Protocol::Constant::SymbolKind::EVENT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#15
LanguageServer::Protocol::Constant::SymbolKind::FIELD = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#8
LanguageServer::Protocol::Constant::SymbolKind::FILE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#19
LanguageServer::Protocol::Constant::SymbolKind::FUNCTION = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#18
LanguageServer::Protocol::Constant::SymbolKind::INTERFACE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#27
LanguageServer::Protocol::Constant::SymbolKind::KEY = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#13
LanguageServer::Protocol::Constant::SymbolKind::METHOD = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#9
LanguageServer::Protocol::Constant::SymbolKind::MODULE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#10
LanguageServer::Protocol::Constant::SymbolKind::NAMESPACE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#28
LanguageServer::Protocol::Constant::SymbolKind::NULL = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#23
LanguageServer::Protocol::Constant::SymbolKind::NUMBER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#26
LanguageServer::Protocol::Constant::SymbolKind::OBJECT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#32
LanguageServer::Protocol::Constant::SymbolKind::OPERATOR = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#11
LanguageServer::Protocol::Constant::SymbolKind::PACKAGE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#14
LanguageServer::Protocol::Constant::SymbolKind::PROPERTY = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#22
LanguageServer::Protocol::Constant::SymbolKind::STRING = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#30
LanguageServer::Protocol::Constant::SymbolKind::STRUCT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#33
LanguageServer::Protocol::Constant::SymbolKind::TYPE_PARAMETER = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_kind.rb#20
LanguageServer::Protocol::Constant::SymbolKind::VARIABLE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_tag.rb#7
module LanguageServer::Protocol::Constant::SymbolTag; end

# source://language_server-protocol//lib/language_server/protocol/constant/symbol_tag.rb#11
LanguageServer::Protocol::Constant::SymbolTag::DEPRECATED = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_save_reason.rb#7
module LanguageServer::Protocol::Constant::TextDocumentSaveReason; end

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_save_reason.rb#16
LanguageServer::Protocol::Constant::TextDocumentSaveReason::AFTER_DELAY = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_save_reason.rb#20
LanguageServer::Protocol::Constant::TextDocumentSaveReason::FOCUS_OUT = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_save_reason.rb#12
LanguageServer::Protocol::Constant::TextDocumentSaveReason::MANUAL = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_sync_kind.rb#8
module LanguageServer::Protocol::Constant::TextDocumentSyncKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_sync_kind.rb#17
LanguageServer::Protocol::Constant::TextDocumentSyncKind::FULL = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_sync_kind.rb#23
LanguageServer::Protocol::Constant::TextDocumentSyncKind::INCREMENTAL = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/text_document_sync_kind.rb#12
LanguageServer::Protocol::Constant::TextDocumentSyncKind::NONE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/token_format.rb#4
module LanguageServer::Protocol::Constant::TokenFormat; end

# source://language_server-protocol//lib/language_server/protocol/constant/token_format.rb#5
LanguageServer::Protocol::Constant::TokenFormat::RELATIVE = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/uniqueness_level.rb#7
module LanguageServer::Protocol::Constant::UniquenessLevel; end

# source://language_server-protocol//lib/language_server/protocol/constant/uniqueness_level.rb#11
LanguageServer::Protocol::Constant::UniquenessLevel::DOCUMENT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/uniqueness_level.rb#27
LanguageServer::Protocol::Constant::UniquenessLevel::GLOBAL = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/uniqueness_level.rb#19
LanguageServer::Protocol::Constant::UniquenessLevel::GROUP = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/uniqueness_level.rb#15
LanguageServer::Protocol::Constant::UniquenessLevel::PROJECT = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/uniqueness_level.rb#23
LanguageServer::Protocol::Constant::UniquenessLevel::SCHEME = T.let(T.unsafe(nil), String)

# source://language_server-protocol//lib/language_server/protocol/constant/watch_kind.rb#4
module LanguageServer::Protocol::Constant::WatchKind; end

# source://language_server-protocol//lib/language_server/protocol/constant/watch_kind.rb#12
LanguageServer::Protocol::Constant::WatchKind::CHANGE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/watch_kind.rb#8
LanguageServer::Protocol::Constant::WatchKind::CREATE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/constant/watch_kind.rb#16
LanguageServer::Protocol::Constant::WatchKind::DELETE = T.let(T.unsafe(nil), Integer)

# source://language_server-protocol//lib/language_server/protocol/interface.rb#3
module LanguageServer::Protocol::Interface; end

# source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#7
class LanguageServer::Protocol::Interface::AnnotatedTextEdit
  # source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#8
  def initialize(range:, new_text:, annotation_id:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#40
  def annotation_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#32
  def new_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#23
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/annotated_text_edit.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_params.rb#4
class LanguageServer::Protocol::Interface::ApplyWorkspaceEditParams
  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_params.rb#5
  def initialize(edit:, label: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_params.rb#32
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_params.rb#28
  def edit; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_params.rb#20
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_params.rb#34
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_params.rb#38
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#4
class LanguageServer::Protocol::Interface::ApplyWorkspaceEditResult
  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#5
  def initialize(applied:, failure_reason: T.unsafe(nil), failed_change: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#19
  def applied; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#40
  def failed_change; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#29
  def failure_reason; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/apply_workspace_edit_result.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_client_capabilities.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_client_capabilities.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_client_capabilities.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_call.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyIncomingCall
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_call.rb#5
  def initialize(from:, from_ranges:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_call.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_call.rb#18
  def from; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_call.rb#27
  def from_ranges; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_call.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_call.rb#37
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyIncomingCallsParams
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#5
  def initialize(item:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#33
  def item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#43
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_incoming_calls_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyItem
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#5
  def initialize(name:, kind:, uri:, range:, selection_range:, tags: T.unsafe(nil), detail: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#88
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#84
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#48
  def detail; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#32
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#24
  def name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#65
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#75
  def selection_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#40
  def tags; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#90
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#94
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_item.rb#56
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_options.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_call.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyOutgoingCall
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_call.rb#5
  def initialize(to:, from_ranges:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_call.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_call.rb#27
  def from_ranges; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_call.rb#18
  def to; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_call.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_call.rb#37
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyOutgoingCallsParams
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#5
  def initialize(item:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#33
  def item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#43
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_outgoing_calls_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyPrepareParams
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#27
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#19
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_prepare_params.rb#35
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#4
class LanguageServer::Protocol::Interface::CallHierarchyRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/call_hierarchy_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/cancel_params.rb#4
class LanguageServer::Protocol::Interface::CancelParams
  # source://language_server-protocol//lib/language_server/protocol/interface/cancel_params.rb#5
  def initialize(id:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/cancel_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/cancel_params.rb#17
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/cancel_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/cancel_params.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#7
class LanguageServer::Protocol::Interface::ChangeAnnotation
  # source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#8
  def initialize(label:, needs_confirmation: T.unsafe(nil), description: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#45
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#41
  def description; end

  # source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#23
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#32
  def needs_confirmation; end

  # source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#47
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/change_annotation.rb#51
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#4
class LanguageServer::Protocol::Interface::ClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#5
  def initialize(workspace: T.unsafe(nil), text_document: T.unsafe(nil), notebook_document: T.unsafe(nil), window: T.unsafe(nil), general: T.unsafe(nil), experimental: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#66
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#62
  def experimental; end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#54
  def general; end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#38
  def notebook_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#30
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#68
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#72
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#46
  def window; end

  # source://language_server-protocol//lib/language_server/protocol/interface/client_capabilities.rb#22
  def workspace; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#11
class LanguageServer::Protocol::Interface::CodeAction
  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#12
  def initialize(title:, kind: T.unsafe(nil), diagnostics: T.unsafe(nil), is_preferred: T.unsafe(nil), disabled: T.unsafe(nil), edit: T.unsafe(nil), command: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#115
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#102
  def command; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#111
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#49
  def diagnostics; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#84
  def disabled; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#92
  def edit; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#62
  def is_preferred; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#41
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#31
  def title; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#117
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action.rb#121
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::CodeActionClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), code_action_literal_support: T.unsafe(nil), is_preferred_support: T.unsafe(nil), disabled_support: T.unsafe(nil), data_support: T.unsafe(nil), resolve_support: T.unsafe(nil), honors_change_annotations: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#83
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#32
  def code_action_literal_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#58
  def data_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#48
  def disabled_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#23
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#79
  def honors_change_annotations; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#40
  def is_preferred_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#67
  def resolve_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#85
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_client_capabilities.rb#89
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#8
class LanguageServer::Protocol::Interface::CodeActionContext
  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#9
  def initialize(diagnostics:, only: T.unsafe(nil), trigger_kind: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#51
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#28
  def diagnostics; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#39
  def only; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#53
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#57
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_context.rb#47
  def trigger_kind; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#4
class LanguageServer::Protocol::Interface::CodeActionOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), code_action_kinds: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#27
  def code_action_kinds; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#36
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_options.rb#16
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#7
class LanguageServer::Protocol::Interface::CodeActionParams
  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#8
  def initialize(text_document:, range:, context:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#61
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#57
  def context; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#33
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#49
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#41
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#63
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#67
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_params.rb#24
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#4
class LanguageServer::Protocol::Interface::CodeActionRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), code_action_kinds: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#50
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#37
  def code_action_kinds; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#21
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#46
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#52
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#56
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_action_registration_options.rb#26
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_description.rb#7
class LanguageServer::Protocol::Interface::CodeDescription
  # source://language_server-protocol//lib/language_server/protocol/interface/code_description.rb#8
  def initialize(href:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_description.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_description.rb#20
  def href; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_description.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_description.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#12
class LanguageServer::Protocol::Interface::CodeLens
  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#13
  def initialize(range:, command: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#36
  def command; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#45
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#28
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens.rb#55
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_lens_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::CodeLensClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_lens_options.rb#4
class LanguageServer::Protocol::Interface::CodeLensOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_options.rb#27
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_options.rb#23
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_options.rb#29
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_options.rb#33
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_options.rb#15
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#4
class LanguageServer::Protocol::Interface::CodeLensParams
  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#5
  def initialize(text_document:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#36
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#4
class LanguageServer::Protocol::Interface::CodeLensRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#33
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#43
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/code_lens_workspace_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::CodeLensWorkspaceClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_workspace_client_capabilities.rb#5
  def initialize(refresh_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_workspace_client_capabilities.rb#27
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_workspace_client_capabilities.rb#23
  def refresh_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_workspace_client_capabilities.rb#29
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/code_lens_workspace_client_capabilities.rb#33
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/color.rb#7
class LanguageServer::Protocol::Interface::Color
  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#8
  def initialize(red:, green:, blue:, alpha:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#47
  def alpha; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#51
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#39
  def blue; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#31
  def green; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#23
  def red; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#53
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color.rb#57
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/color_information.rb#4
class LanguageServer::Protocol::Interface::ColorInformation
  # source://language_server-protocol//lib/language_server/protocol/interface/color_information.rb#5
  def initialize(range:, color:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_information.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_information.rb#26
  def color; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_information.rb#18
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_information.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_information.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#4
class LanguageServer::Protocol::Interface::ColorPresentation
  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#5
  def initialize(label:, text_edit: T.unsafe(nil), additional_text_edits: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#41
  def additional_text_edits; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#45
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#21
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#31
  def text_edit; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#47
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation.rb#51
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#4
class LanguageServer::Protocol::Interface::ColorPresentationParams
  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#5
  def initialize(text_document:, color:, range:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#58
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#46
  def color; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#30
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#54
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#38
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#60
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#64
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/color_presentation_params.rb#21
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/command.rb#4
class LanguageServer::Protocol::Interface::Command
  # source://language_server-protocol//lib/language_server/protocol/interface/command.rb#5
  def initialize(title:, command:, arguments: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/command.rb#36
  def arguments; end

  # source://language_server-protocol//lib/language_server/protocol/interface/command.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/command.rb#27
  def command; end

  # source://language_server-protocol//lib/language_server/protocol/interface/command.rb#19
  def title; end

  # source://language_server-protocol//lib/language_server/protocol/interface/command.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/command.rb#46
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::CompletionClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), completion_item: T.unsafe(nil), completion_item_kind: T.unsafe(nil), context_support: T.unsafe(nil), insert_text_mode: T.unsafe(nil), completion_list: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#67
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#31
  def completion_item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#36
  def completion_item_kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#63
  def completion_list; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#45
  def context_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#22
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#54
  def insert_text_mode; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#69
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_client_capabilities.rb#73
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_context.rb#8
class LanguageServer::Protocol::Interface::CompletionContext
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_context.rb#9
  def initialize(trigger_kind:, trigger_character: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_context.rb#36
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_context.rb#38
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_context.rb#42
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_context.rb#32
  def trigger_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_context.rb#22
  def trigger_kind; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#4
class LanguageServer::Protocol::Interface::CompletionItem
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#5
  def initialize(label:, label_details: T.unsafe(nil), kind: T.unsafe(nil), tags: T.unsafe(nil), detail: T.unsafe(nil), documentation: T.unsafe(nil), deprecated: T.unsafe(nil), preselect: T.unsafe(nil), sort_text: T.unsafe(nil), filter_text: T.unsafe(nil), insert_text: T.unsafe(nil), insert_text_format: T.unsafe(nil), insert_text_mode: T.unsafe(nil), text_edit: T.unsafe(nil), text_edit_text: T.unsafe(nil), additional_text_edits: T.unsafe(nil), commit_characters: T.unsafe(nil), command: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#221
  def additional_text_edits; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#255
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#242
  def command; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#232
  def commit_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#251
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#92
  def deprecated; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#76
  def detail; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#84
  def documentation; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#124
  def filter_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#142
  def insert_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#155
  def insert_text_format; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#165
  def insert_text_mode; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#59
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#41
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#49
  def label_details; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#104
  def preselect; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#114
  def sort_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#67
  def tags; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#192
  def text_edit; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#207
  def text_edit_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#257
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item.rb#261
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_item_label_details.rb#7
class LanguageServer::Protocol::Interface::CompletionItemLabelDetails
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item_label_details.rb#8
  def initialize(detail: T.unsafe(nil), description: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item_label_details.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item_label_details.rb#33
  def description; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item_label_details.rb#23
  def detail; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item_label_details.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_item_label_details.rb#43
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#8
class LanguageServer::Protocol::Interface::CompletionList
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#9
  def initialize(is_incomplete:, items:, item_defaults: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#57
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#27
  def is_incomplete; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#45
  def item_defaults; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#53
  def items; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#59
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_list.rb#63
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#7
class LanguageServer::Protocol::Interface::CompletionOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#8
  def initialize(work_done_progress: T.unsafe(nil), trigger_characters: T.unsafe(nil), all_commit_characters: T.unsafe(nil), resolve_provider: T.unsafe(nil), completion_item: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#53
  def all_commit_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#75
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#71
  def completion_item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#62
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#77
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#81
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#39
  def trigger_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_options.rb#21
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#4
class LanguageServer::Protocol::Interface::CompletionParams
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil), context: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#60
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#56
  def context; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#46
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#29
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#21
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#62
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#66
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_params.rb#37
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#4
class LanguageServer::Protocol::Interface::CompletionRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), trigger_characters: T.unsafe(nil), all_commit_characters: T.unsafe(nil), resolve_provider: T.unsafe(nil), completion_item: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#60
  def all_commit_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#82
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#78
  def completion_item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#23
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#69
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#84
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#88
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#46
  def trigger_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/completion_registration_options.rb#28
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/configuration_item.rb#4
class LanguageServer::Protocol::Interface::ConfigurationItem
  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_item.rb#5
  def initialize(scope_uri: T.unsafe(nil), section: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_item.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_item.rb#18
  def scope_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_item.rb#26
  def section; end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_item.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_item.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/configuration_params.rb#4
class LanguageServer::Protocol::Interface::ConfigurationParams
  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_params.rb#5
  def initialize(items:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_params.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_params.rb#14
  def items; end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_params.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/configuration_params.rb#24
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#7
class LanguageServer::Protocol::Interface::CreateFile
  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#8
  def initialize(kind:, uri:, options: T.unsafe(nil), annotation_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#47
  def annotation_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#51
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#23
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#39
  def options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#53
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#57
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file.rb#31
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/create_file_options.rb#7
class LanguageServer::Protocol::Interface::CreateFileOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/create_file_options.rb#8
  def initialize(overwrite: T.unsafe(nil), ignore_if_exists: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file_options.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file_options.rb#29
  def ignore_if_exists; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file_options.rb#21
  def overwrite; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file_options.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_file_options.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/create_files_params.rb#8
class LanguageServer::Protocol::Interface::CreateFilesParams
  # source://language_server-protocol//lib/language_server/protocol/interface/create_files_params.rb#9
  def initialize(files:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_files_params.rb#25
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_files_params.rb#21
  def files; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_files_params.rb#27
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/create_files_params.rb#31
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/declaration_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DeclarationClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), link_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_client_capabilities.rb#32
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_client_capabilities.rb#28
  def link_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_client_capabilities.rb#34
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_client_capabilities.rb#38
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/declaration_options.rb#4
class LanguageServer::Protocol::Interface::DeclarationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#4
class LanguageServer::Protocol::Interface::DeclarationParams
  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#45
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#4
class LanguageServer::Protocol::Interface::DeclarationRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#25
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/declaration_registration_options.rb#16
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/definition_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DefinitionClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/definition_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), link_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_client_capabilities.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_client_capabilities.rb#18
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_client_capabilities.rb#26
  def link_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_client_capabilities.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_client_capabilities.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/definition_options.rb#4
class LanguageServer::Protocol::Interface::DefinitionOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/definition_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#4
class LanguageServer::Protocol::Interface::DefinitionParams
  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#45
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/definition_registration_options.rb#4
class LanguageServer::Protocol::Interface::DefinitionRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/definition_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/definition_registration_options.rb#24
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#7
class LanguageServer::Protocol::Interface::DeleteFile
  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#8
  def initialize(kind:, uri:, options: T.unsafe(nil), annotation_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#47
  def annotation_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#51
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#23
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#39
  def options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#53
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#57
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file.rb#31
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/delete_file_options.rb#7
class LanguageServer::Protocol::Interface::DeleteFileOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file_options.rb#8
  def initialize(recursive: T.unsafe(nil), ignore_if_not_exists: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file_options.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file_options.rb#29
  def ignore_if_not_exists; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file_options.rb#21
  def recursive; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file_options.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_file_options.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/delete_files_params.rb#8
class LanguageServer::Protocol::Interface::DeleteFilesParams
  # source://language_server-protocol//lib/language_server/protocol/interface/delete_files_params.rb#9
  def initialize(files:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_files_params.rb#25
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_files_params.rb#21
  def files; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_files_params.rb#27
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/delete_files_params.rb#31
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#4
class LanguageServer::Protocol::Interface::Diagnostic
  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#5
  def initialize(range:, message:, severity: T.unsafe(nil), code: T.unsafe(nil), code_description: T.unsafe(nil), source: T.unsafe(nil), tags: T.unsafe(nil), related_information: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#98
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#42
  def code; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#50
  def code_description; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#94
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#67
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#25
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#84
  def related_information; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#34
  def severity; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#59
  def source; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#75
  def tags; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#100
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic.rb#104
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::DiagnosticClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_client_capabilities.rb#8
  def initialize(dynamic_registration: T.unsafe(nil), related_document_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_client_capabilities.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_client_capabilities.rb#24
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_client_capabilities.rb#33
  def related_document_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_client_capabilities.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_client_capabilities.rb#43
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#7
class LanguageServer::Protocol::Interface::DiagnosticOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#8
  def initialize(inter_file_dependencies:, workspace_diagnostics:, work_done_progress: T.unsafe(nil), identifier: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#52
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#29
  def identifier; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#40
  def inter_file_dependencies; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#54
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#58
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#20
  def work_done_progress; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_options.rb#48
  def workspace_diagnostics; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#7
class LanguageServer::Protocol::Interface::DiagnosticRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#8
  def initialize(document_selector:, inter_file_dependencies:, workspace_diagnostics:, work_done_progress: T.unsafe(nil), identifier: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#72
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#26
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#68
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#40
  def identifier; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#51
  def inter_file_dependencies; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#74
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#78
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#31
  def work_done_progress; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_registration_options.rb#59
  def workspace_diagnostics; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_related_information.rb#9
class LanguageServer::Protocol::Interface::DiagnosticRelatedInformation
  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_related_information.rb#10
  def initialize(location:, message:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_related_information.rb#35
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_related_information.rb#23
  def location; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_related_information.rb#31
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_related_information.rb#37
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_related_information.rb#41
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_server_cancellation_data.rb#7
class LanguageServer::Protocol::Interface::DiagnosticServerCancellationData
  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_server_cancellation_data.rb#8
  def initialize(retrigger_request:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_server_cancellation_data.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_server_cancellation_data.rb#17
  def retrigger_request; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_server_cancellation_data.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_server_cancellation_data.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_workspace_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::DiagnosticWorkspaceClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_workspace_client_capabilities.rb#8
  def initialize(refresh_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_workspace_client_capabilities.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_workspace_client_capabilities.rb#26
  def refresh_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_workspace_client_capabilities.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/diagnostic_workspace_client_capabilities.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DidChangeConfigurationClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_params.rb#4
class LanguageServer::Protocol::Interface::DidChangeConfigurationParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_params.rb#5
  def initialize(settings:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_params.rb#17
  def settings; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_configuration_params.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_notebook_document_params.rb#7
class LanguageServer::Protocol::Interface::DidChangeNotebookDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_notebook_document_params.rb#8
  def initialize(notebook_document:, change:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_notebook_document_params.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_notebook_document_params.rb#40
  def change; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_notebook_document_params.rb#22
  def notebook_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_notebook_document_params.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_notebook_document_params.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_text_document_params.rb#4
class LanguageServer::Protocol::Interface::DidChangeTextDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_text_document_params.rb#5
  def initialize(text_document:, content_changes:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_text_document_params.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_text_document_params.rb#40
  def content_changes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_text_document_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_text_document_params.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_text_document_params.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DidChangeWatchedFilesClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), relative_pattern_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_client_capabilities.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_client_capabilities.rb#29
  def relative_pattern_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_client_capabilities.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_client_capabilities.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_params.rb#4
class LanguageServer::Protocol::Interface::DidChangeWatchedFilesParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_params.rb#5
  def initialize(changes:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_params.rb#17
  def changes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_params.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_registration_options.rb#7
class LanguageServer::Protocol::Interface::DidChangeWatchedFilesRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_registration_options.rb#8
  def initialize(watchers:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_registration_options.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_registration_options.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_registration_options.rb#30
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_watched_files_registration_options.rb#20
  def watchers; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_change_workspace_folders_params.rb#4
class LanguageServer::Protocol::Interface::DidChangeWorkspaceFoldersParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_workspace_folders_params.rb#5
  def initialize(event:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_workspace_folders_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_workspace_folders_params.rb#17
  def event; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_workspace_folders_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_change_workspace_folders_params.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_close_notebook_document_params.rb#7
class LanguageServer::Protocol::Interface::DidCloseNotebookDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_notebook_document_params.rb#8
  def initialize(notebook_document:, cell_text_documents:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_notebook_document_params.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_notebook_document_params.rb#30
  def cell_text_documents; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_notebook_document_params.rb#21
  def notebook_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_notebook_document_params.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_notebook_document_params.rb#40
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_close_text_document_params.rb#4
class LanguageServer::Protocol::Interface::DidCloseTextDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_text_document_params.rb#5
  def initialize(text_document:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_text_document_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_text_document_params.rb#17
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_text_document_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_close_text_document_params.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_open_notebook_document_params.rb#7
class LanguageServer::Protocol::Interface::DidOpenNotebookDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_notebook_document_params.rb#8
  def initialize(notebook_document:, cell_text_documents:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_notebook_document_params.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_notebook_document_params.rb#30
  def cell_text_documents; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_notebook_document_params.rb#21
  def notebook_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_notebook_document_params.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_notebook_document_params.rb#40
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_open_text_document_params.rb#4
class LanguageServer::Protocol::Interface::DidOpenTextDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_text_document_params.rb#5
  def initialize(text_document:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_text_document_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_text_document_params.rb#17
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_text_document_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_open_text_document_params.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_save_notebook_document_params.rb#7
class LanguageServer::Protocol::Interface::DidSaveNotebookDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_notebook_document_params.rb#8
  def initialize(notebook_document:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_notebook_document_params.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_notebook_document_params.rb#20
  def notebook_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_notebook_document_params.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_notebook_document_params.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/did_save_text_document_params.rb#4
class LanguageServer::Protocol::Interface::DidSaveTextDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_text_document_params.rb#5
  def initialize(text_document:, text: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_text_document_params.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_text_document_params.rb#27
  def text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_text_document_params.rb#18
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_text_document_params.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/did_save_text_document_params.rb#37
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_color_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DocumentColorClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_color_options.rb#4
class LanguageServer::Protocol::Interface::DocumentColorOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#4
class LanguageServer::Protocol::Interface::DocumentColorParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#5
  def initialize(text_document:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#36
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#4
class LanguageServer::Protocol::Interface::DocumentColorRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#5
  def initialize(document_selector:, id: T.unsafe(nil), work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#29
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_color_registration_options.rb#34
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#7
class LanguageServer::Protocol::Interface::DocumentDiagnosticParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#8
  def initialize(text_document:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil), identifier: T.unsafe(nil), previous_result_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#61
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#49
  def identifier; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#33
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#57
  def previous_result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#41
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#63
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#67
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_params.rb#24
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_report_partial_result.rb#7
class LanguageServer::Protocol::Interface::DocumentDiagnosticReportPartialResult
  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_report_partial_result.rb#8
  def initialize(related_documents:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_report_partial_result.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_report_partial_result.rb#17
  def related_documents; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_report_partial_result.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_diagnostic_report_partial_result.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#4
class LanguageServer::Protocol::Interface::DocumentFilter
  # source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#5
  def initialize(language: T.unsafe(nil), scheme: T.unsafe(nil), pattern: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#51
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#19
  def language; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#47
  def pattern; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#27
  def scheme; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#53
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_filter.rb#57
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DocumentFormattingClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_options.rb#4
class LanguageServer::Protocol::Interface::DocumentFormattingOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#4
class LanguageServer::Protocol::Interface::DocumentFormattingParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#5
  def initialize(text_document:, options:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#35
  def options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#27
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_registration_options.rb#4
class LanguageServer::Protocol::Interface::DocumentFormattingRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_formatting_registration_options.rb#24
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_highlight.rb#9
class LanguageServer::Protocol::Interface::DocumentHighlight
  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight.rb#10
  def initialize(range:, kind: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight.rb#35
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight.rb#31
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight.rb#23
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight.rb#37
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight.rb#41
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DocumentHighlightClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_options.rb#4
class LanguageServer::Protocol::Interface::DocumentHighlightOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#4
class LanguageServer::Protocol::Interface::DocumentHighlightParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#45
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_registration_options.rb#4
class LanguageServer::Protocol::Interface::DocumentHighlightRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_highlight_registration_options.rb#24
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#8
class LanguageServer::Protocol::Interface::DocumentLink
  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#9
  def initialize(range:, target: T.unsafe(nil), tooltip: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#58
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#54
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#24
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#32
  def target; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#60
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#64
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link.rb#45
  def tooltip; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_link_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DocumentLinkClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), tooltip_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_client_capabilities.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_client_capabilities.rb#18
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_client_capabilities.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_client_capabilities.rb#36
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_client_capabilities.rb#26
  def tooltip_support; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_link_options.rb#4
class LanguageServer::Protocol::Interface::DocumentLinkOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_options.rb#27
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_options.rb#23
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_options.rb#29
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_options.rb#33
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_options.rb#15
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#4
class LanguageServer::Protocol::Interface::DocumentLinkParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#5
  def initialize(text_document:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#36
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#4
class LanguageServer::Protocol::Interface::DocumentLinkRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#33
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#43
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_link_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DocumentOnTypeFormattingClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_options.rb#4
class LanguageServer::Protocol::Interface::DocumentOnTypeFormattingOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_options.rb#5
  def initialize(first_trigger_character:, more_trigger_character: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_options.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_options.rb#18
  def first_trigger_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_options.rb#26
  def more_trigger_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_options.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_options.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#4
class LanguageServer::Protocol::Interface::DocumentOnTypeFormattingParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#5
  def initialize(text_document:, position:, ch:, options:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#53
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#41
  def ch; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#49
  def options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#30
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#55
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_params.rb#59
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#4
class LanguageServer::Protocol::Interface::DocumentOnTypeFormattingRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#5
  def initialize(document_selector:, first_trigger_character:, more_trigger_character: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#28
  def first_trigger_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#36
  def more_trigger_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_on_type_formatting_registration_options.rb#46
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DocumentRangeFormattingClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_options.rb#4
class LanguageServer::Protocol::Interface::DocumentRangeFormattingOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#4
class LanguageServer::Protocol::Interface::DocumentRangeFormattingParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#5
  def initialize(text_document:, range:, options:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#48
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#44
  def options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#36
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#28
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#50
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#54
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_params.rb#20
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_registration_options.rb#4
class LanguageServer::Protocol::Interface::DocumentRangeFormattingRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_range_formatting_registration_options.rb#24
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#10
class LanguageServer::Protocol::Interface::DocumentSymbol
  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#11
  def initialize(name:, kind:, range:, selection_range:, detail: T.unsafe(nil), tags: T.unsafe(nil), deprecated: T.unsafe(nil), children: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#96
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#92
  def children; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#64
  def deprecated; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#40
  def detail; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#48
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#32
  def name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#75
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#84
  def selection_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#56
  def tags; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#98
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol.rb#102
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::DocumentSymbolClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), symbol_kind: T.unsafe(nil), hierarchical_document_symbol_support: T.unsafe(nil), tag_support: T.unsafe(nil), label_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#61
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#21
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#38
  def hierarchical_document_symbol_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#57
  def label_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#30
  def symbol_kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#48
  def tag_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#63
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_client_capabilities.rb#67
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_options.rb#4
class LanguageServer::Protocol::Interface::DocumentSymbolOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), label: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_options.rb#24
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_options.rb#15
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#4
class LanguageServer::Protocol::Interface::DocumentSymbolParams
  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#5
  def initialize(text_document:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#36
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#4
class LanguageServer::Protocol::Interface::DocumentSymbolRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), label: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#34
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/document_symbol_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/execute_command_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::ExecuteCommandClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/execute_command_options.rb#4
class LanguageServer::Protocol::Interface::ExecuteCommandOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_options.rb#5
  def initialize(commands:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_options.rb#27
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_options.rb#23
  def commands; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_options.rb#29
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_options.rb#33
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_options.rb#15
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#4
class LanguageServer::Protocol::Interface::ExecuteCommandParams
  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#5
  def initialize(command:, work_done_token: T.unsafe(nil), arguments: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#35
  def arguments; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#27
  def command; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/execute_command_registration_options.rb#7
class LanguageServer::Protocol::Interface::ExecuteCommandRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_registration_options.rb#8
  def initialize(commands:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_registration_options.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_registration_options.rb#26
  def commands; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_registration_options.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_registration_options.rb#36
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execute_command_registration_options.rb#18
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/execution_summary.rb#4
class LanguageServer::Protocol::Interface::ExecutionSummary
  # source://language_server-protocol//lib/language_server/protocol/interface/execution_summary.rb#5
  def initialize(execution_order:, success: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/execution_summary.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execution_summary.rb#20
  def execution_order; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execution_summary.rb#29
  def success; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execution_summary.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/execution_summary.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_create.rb#7
class LanguageServer::Protocol::Interface::FileCreate
  # source://language_server-protocol//lib/language_server/protocol/interface/file_create.rb#8
  def initialize(uri:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_create.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_create.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_create.rb#30
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_create.rb#20
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_delete.rb#7
class LanguageServer::Protocol::Interface::FileDelete
  # source://language_server-protocol//lib/language_server/protocol/interface/file_delete.rb#8
  def initialize(uri:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_delete.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_delete.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_delete.rb#30
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_delete.rb#20
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_event.rb#7
class LanguageServer::Protocol::Interface::FileEvent
  # source://language_server-protocol//lib/language_server/protocol/interface/file_event.rb#8
  def initialize(uri:, type:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_event.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_event.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_event.rb#39
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_event.rb#29
  def type; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_event.rb#21
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_operation_filter.rb#8
class LanguageServer::Protocol::Interface::FileOperationFilter
  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_filter.rb#9
  def initialize(pattern:, scheme: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_filter.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_filter.rb#30
  def pattern; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_filter.rb#22
  def scheme; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_filter.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_filter.rb#40
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#8
class LanguageServer::Protocol::Interface::FileOperationPattern
  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#9
  def initialize(glob:, matches: T.unsafe(nil), options: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#55
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#33
  def glob; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#43
  def matches; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#51
  def options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#57
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern.rb#61
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern_options.rb#7
class LanguageServer::Protocol::Interface::FileOperationPatternOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern_options.rb#8
  def initialize(ignore_case: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern_options.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern_options.rb#20
  def ignore_case; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern_options.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_pattern_options.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_operation_registration_options.rb#7
class LanguageServer::Protocol::Interface::FileOperationRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_registration_options.rb#8
  def initialize(filters:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_registration_options.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_registration_options.rb#20
  def filters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_registration_options.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_operation_registration_options.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_rename.rb#7
class LanguageServer::Protocol::Interface::FileRename
  # source://language_server-protocol//lib/language_server/protocol/interface/file_rename.rb#8
  def initialize(old_uri:, new_uri:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_rename.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_rename.rb#29
  def new_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_rename.rb#21
  def old_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_rename.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_rename.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/file_system_watcher.rb#4
class LanguageServer::Protocol::Interface::FileSystemWatcher
  # source://language_server-protocol//lib/language_server/protocol/interface/file_system_watcher.rb#5
  def initialize(glob_pattern:, kind: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_system_watcher.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_system_watcher.rb#19
  def glob_pattern; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_system_watcher.rb#29
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_system_watcher.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/file_system_watcher.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#9
class LanguageServer::Protocol::Interface::FoldingRange
  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#10
  def initialize(start_line:, end_line:, start_character: T.unsafe(nil), end_character: T.unsafe(nil), kind: T.unsafe(nil), collapsed_text: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#82
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#78
  def collapsed_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#57
  def end_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#48
  def end_line; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#68
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#38
  def start_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#29
  def start_line; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#84
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range.rb#88
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::FoldingRangeClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), range_limit: T.unsafe(nil), line_folding_only: T.unsafe(nil), folding_range_kind: T.unsafe(nil), folding_range: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#64
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#24
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#60
  def folding_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#52
  def folding_range_kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#44
  def line_folding_only; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#34
  def range_limit; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#66
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_client_capabilities.rb#70
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/folding_range_options.rb#4
class LanguageServer::Protocol::Interface::FoldingRangeOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#4
class LanguageServer::Protocol::Interface::FoldingRangeParams
  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#5
  def initialize(text_document:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#36
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#4
class LanguageServer::Protocol::Interface::FoldingRangeRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/folding_range_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#7
class LanguageServer::Protocol::Interface::FormattingOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#8
  def initialize(tab_size:, insert_spaces:, trim_trailing_whitespace: T.unsafe(nil), insert_final_newline: T.unsafe(nil), trim_final_newlines: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#60
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#48
  def insert_final_newline; end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#32
  def insert_spaces; end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#24
  def tab_size; end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#62
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#66
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#56
  def trim_final_newlines; end

  # source://language_server-protocol//lib/language_server/protocol/interface/formatting_options.rb#40
  def trim_trailing_whitespace; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#7
class LanguageServer::Protocol::Interface::FullDocumentDiagnosticReport
  # source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#8
  def initialize(kind:, items:, result_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#40
  def items; end

  # source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#22
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#32
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/full_document_diagnostic_report.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/hover.rb#7
class LanguageServer::Protocol::Interface::Hover
  # source://language_server-protocol//lib/language_server/protocol/interface/hover.rb#8
  def initialize(contents:, range: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover.rb#21
  def contents; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover.rb#30
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover.rb#40
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/hover_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::HoverClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/hover_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), content_format: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_client_capabilities.rb#32
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_client_capabilities.rb#28
  def content_format; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_client_capabilities.rb#18
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_client_capabilities.rb#34
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_client_capabilities.rb#38
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/hover_options.rb#4
class LanguageServer::Protocol::Interface::HoverOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/hover_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#4
class LanguageServer::Protocol::Interface::HoverParams
  # source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#27
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#19
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_params.rb#35
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/hover_registration_options.rb#4
class LanguageServer::Protocol::Interface::HoverRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/hover_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_registration_options.rb#24
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/hover_result.rb#4
class LanguageServer::Protocol::Interface::HoverResult
  # source://language_server-protocol//lib/language_server/protocol/interface/hover_result.rb#5
  def initialize(value:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_result.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_result.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_result.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/hover_result.rb#14
  def value; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/implementation_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::ImplementationClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), link_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_client_capabilities.rb#32
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_client_capabilities.rb#28
  def link_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_client_capabilities.rb#34
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_client_capabilities.rb#38
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/implementation_options.rb#4
class LanguageServer::Protocol::Interface::ImplementationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#4
class LanguageServer::Protocol::Interface::ImplementationParams
  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#45
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#4
class LanguageServer::Protocol::Interface::ImplementationRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/implementation_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/initialize_error.rb#4
class LanguageServer::Protocol::Interface::InitializeError
  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_error.rb#5
  def initialize(retry:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_error.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_error.rb#20
  def retry; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_error.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_error.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#4
class LanguageServer::Protocol::Interface::InitializeParams
  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#5
  def initialize(process_id:, root_uri:, capabilities:, work_done_token: T.unsafe(nil), client_info: T.unsafe(nil), locale: T.unsafe(nil), root_path: T.unsafe(nil), initialization_options: T.unsafe(nil), trace: T.unsafe(nil), workspace_folders: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#116
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#93
  def capabilities; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#45
  def client_info; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#85
  def initialization_options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#58
  def locale; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#37
  def process_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#67
  def root_path; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#77
  def root_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#118
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#122
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#101
  def trace; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#26
  def work_done_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_params.rb#112
  def workspace_folders; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/initialize_result.rb#4
class LanguageServer::Protocol::Interface::InitializeResult
  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_result.rb#5
  def initialize(capabilities:, server_info: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_result.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_result.rb#18
  def capabilities; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_result.rb#26
  def server_info; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_result.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialize_result.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/initialized_params.rb#4
class LanguageServer::Protocol::Interface::InitializedParams
  # source://language_server-protocol//lib/language_server/protocol/interface/initialized_params.rb#5
  def initialize; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialized_params.rb#12
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialized_params.rb#14
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/initialized_params.rb#18
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#7
class LanguageServer::Protocol::Interface::InlayHint
  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#8
  def initialize(position:, label:, kind: T.unsafe(nil), text_edits: T.unsafe(nil), tooltip: T.unsafe(nil), padding_left: T.unsafe(nil), padding_right: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#110
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#106
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#47
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#38
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#85
  def padding_left; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#97
  def padding_right; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#27
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#62
  def text_edits; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#112
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#116
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint.rb#73
  def tooltip; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::InlayHintClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_client_capabilities.rb#8
  def initialize(dynamic_registration: T.unsafe(nil), resolve_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_client_capabilities.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_client_capabilities.rb#21
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_client_capabilities.rb#30
  def resolve_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_client_capabilities.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_client_capabilities.rb#40
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#8
class LanguageServer::Protocol::Interface::InlayHintLabelPart
  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#9
  def initialize(value:, tooltip: T.unsafe(nil), location: T.unsafe(nil), command: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#67
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#63
  def command; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#52
  def location; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#69
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#73
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#34
  def tooltip; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_label_part.rb#24
  def value; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_options.rb#7
class LanguageServer::Protocol::Interface::InlayHintOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_options.rb#8
  def initialize(work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_options.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_options.rb#27
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_options.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_options.rb#37
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_options.rb#18
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#7
class LanguageServer::Protocol::Interface::InlayHintParams
  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#8
  def initialize(text_document:, range:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#42
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#38
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#30
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#44
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#48
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_params.rb#22
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#7
class LanguageServer::Protocol::Interface::InlayHintRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#8
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#51
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#38
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#47
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#29
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#53
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#57
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_registration_options.rb#20
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_workspace_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::InlayHintWorkspaceClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_workspace_client_capabilities.rb#8
  def initialize(refresh_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_workspace_client_capabilities.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_workspace_client_capabilities.rb#26
  def refresh_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_workspace_client_capabilities.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inlay_hint_workspace_client_capabilities.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::InlineValueClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_client_capabilities.rb#8
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_client_capabilities.rb#25
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_client_capabilities.rb#21
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_client_capabilities.rb#27
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_client_capabilities.rb#31
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_context.rb#4
class LanguageServer::Protocol::Interface::InlineValueContext
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_context.rb#5
  def initialize(frame_id:, stopped_location:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_context.rb#32
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_context.rb#18
  def frame_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_context.rb#28
  def stopped_location; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_context.rb#34
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_context.rb#38
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_evaluatable_expression.rb#12
class LanguageServer::Protocol::Interface::InlineValueEvaluatableExpression
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_evaluatable_expression.rb#13
  def initialize(range:, expression: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_evaluatable_expression.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_evaluatable_expression.rb#36
  def expression; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_evaluatable_expression.rb#28
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_evaluatable_expression.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_evaluatable_expression.rb#46
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_options.rb#7
class LanguageServer::Protocol::Interface::InlineValueOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_options.rb#8
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_options.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_options.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_options.rb#27
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_options.rb#17
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#7
class LanguageServer::Protocol::Interface::InlineValueParams
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#8
  def initialize(text_document:, range:, context:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#52
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#48
  def context; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#39
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#31
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#54
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#58
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_params.rb#23
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#7
class LanguageServer::Protocol::Interface::InlineValueRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#8
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#41
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#28
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#37
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#43
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#47
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_registration_options.rb#19
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_text.rb#7
class LanguageServer::Protocol::Interface::InlineValueText
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_text.rb#8
  def initialize(range:, text:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_text.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_text.rb#21
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_text.rb#29
  def text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_text.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_text.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#12
class LanguageServer::Protocol::Interface::InlineValueVariableLookup
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#13
  def initialize(range:, case_sensitive_lookup:, variable_name: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#45
  def case_sensitive_lookup; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#29
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_variable_lookup.rb#37
  def variable_name; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/inline_value_workspace_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::InlineValueWorkspaceClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_workspace_client_capabilities.rb#8
  def initialize(refresh_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_workspace_client_capabilities.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_workspace_client_capabilities.rb#26
  def refresh_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_workspace_client_capabilities.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/inline_value_workspace_client_capabilities.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#7
class LanguageServer::Protocol::Interface::InsertReplaceEdit
  # source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#8
  def initialize(new_text:, insert:, replace:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#42
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#30
  def insert; end

  # source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#22
  def new_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#38
  def replace; end

  # source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#44
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/insert_replace_edit.rb#48
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::LinkedEditingRangeClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_client_capabilities.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_client_capabilities.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_client_capabilities.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_options.rb#4
class LanguageServer::Protocol::Interface::LinkedEditingRangeOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#4
class LanguageServer::Protocol::Interface::LinkedEditingRangeParams
  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#27
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#19
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_params.rb#35
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#4
class LanguageServer::Protocol::Interface::LinkedEditingRangeRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_range_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_ranges.rb#4
class LanguageServer::Protocol::Interface::LinkedEditingRanges
  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_ranges.rb#5
  def initialize(ranges:, word_pattern: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_ranges.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_ranges.rb#20
  def ranges; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_ranges.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_ranges.rb#40
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/linked_editing_ranges.rb#30
  def word_pattern; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/location.rb#4
class LanguageServer::Protocol::Interface::Location
  # source://language_server-protocol//lib/language_server/protocol/interface/location.rb#5
  def initialize(uri:, range:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/location.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location.rb#20
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location.rb#30
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/location.rb#15
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#4
class LanguageServer::Protocol::Interface::LocationLink
  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#5
  def initialize(target_uri:, target_range:, target_selection_range:, origin_selection_range: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#56
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#23
  def origin_selection_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#42
  def target_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#52
  def target_selection_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#31
  def target_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#58
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/location_link.rb#62
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/log_message_params.rb#4
class LanguageServer::Protocol::Interface::LogMessageParams
  # source://language_server-protocol//lib/language_server/protocol/interface/log_message_params.rb#5
  def initialize(type:, message:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_message_params.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_message_params.rb#26
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_message_params.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_message_params.rb#36
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_message_params.rb#18
  def type; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/log_trace_params.rb#4
class LanguageServer::Protocol::Interface::LogTraceParams
  # source://language_server-protocol//lib/language_server/protocol/interface/log_trace_params.rb#5
  def initialize(message:, verbose: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_trace_params.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_trace_params.rb#18
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_trace_params.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_trace_params.rb#37
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/log_trace_params.rb#27
  def verbose; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/markup_content.rb#30
class LanguageServer::Protocol::Interface::MarkupContent
  # source://language_server-protocol//lib/language_server/protocol/interface/markup_content.rb#31
  def initialize(kind:, value:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/markup_content.rb#56
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/markup_content.rb#44
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/markup_content.rb#58
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/markup_content.rb#62
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/markup_content.rb#52
  def value; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/message.rb#4
class LanguageServer::Protocol::Interface::Message
  # source://language_server-protocol//lib/language_server/protocol/interface/message.rb#5
  def initialize(jsonrpc:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/message.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/message.rb#14
  def jsonrpc; end

  # source://language_server-protocol//lib/language_server/protocol/interface/message.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/message.rb#24
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/message_action_item.rb#4
class LanguageServer::Protocol::Interface::MessageActionItem
  # source://language_server-protocol//lib/language_server/protocol/interface/message_action_item.rb#5
  def initialize(title:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/message_action_item.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/message_action_item.rb#17
  def title; end

  # source://language_server-protocol//lib/language_server/protocol/interface/message_action_item.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/message_action_item.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#7
class LanguageServer::Protocol::Interface::Moniker
  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#8
  def initialize(scheme:, identifier:, unique:, kind: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#52
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#32
  def identifier; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#48
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#23
  def scheme; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#54
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#58
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker.rb#40
  def unique; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/moniker_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::MonikerClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_client_capabilities.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_client_capabilities.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_client_capabilities.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/moniker_options.rb#4
class LanguageServer::Protocol::Interface::MonikerOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#4
class LanguageServer::Protocol::Interface::MonikerParams
  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#45
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/moniker_registration_options.rb#4
class LanguageServer::Protocol::Interface::MonikerRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/moniker_registration_options.rb#24
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#11
class LanguageServer::Protocol::Interface::NotebookCell
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#12
  def initialize(kind:, document:, metadata: T.unsafe(nil), execution_summary: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#57
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#36
  def document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#53
  def execution_summary; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#27
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#44
  def metadata; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#59
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell.rb#63
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#8
class LanguageServer::Protocol::Interface::NotebookCellArrayChange
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#9
  def initialize(start:, delete_count:, cells: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#43
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#39
  def cells; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#31
  def delete_count; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#23
  def start; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#45
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_array_change.rb#49
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_text_document_filter.rb#8
class LanguageServer::Protocol::Interface::NotebookCellTextDocumentFilter
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_text_document_filter.rb#9
  def initialize(notebook:, language: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_text_document_filter.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_text_document_filter.rb#36
  def language; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_text_document_filter.rb#25
  def notebook; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_text_document_filter.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_cell_text_document_filter.rb#46
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#7
class LanguageServer::Protocol::Interface::NotebookDocument
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#8
  def initialize(uri:, notebook_type:, version:, cells:, metadata: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#62
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#58
  def cells; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#50
  def metadata; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#32
  def notebook_type; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#64
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#68
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#24
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document.rb#41
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_change_event.rb#7
class LanguageServer::Protocol::Interface::NotebookDocumentChangeEvent
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_change_event.rb#8
  def initialize(metadata: T.unsafe(nil), cells: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_change_event.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_change_event.rb#29
  def cells; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_change_event.rb#21
  def metadata; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_change_event.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_change_event.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::NotebookDocumentClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_client_capabilities.rb#8
  def initialize(synchronization:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_client_capabilities.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_client_capabilities.rb#20
  def synchronization; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_client_capabilities.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_client_capabilities.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#8
class LanguageServer::Protocol::Interface::NotebookDocumentFilter
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#9
  def initialize(notebook_type: T.unsafe(nil), scheme: T.unsafe(nil), pattern: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#67
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#31
  def notebook_type; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#63
  def pattern; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#47
  def scheme; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#69
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_filter.rb#73
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_identifier.rb#7
class LanguageServer::Protocol::Interface::NotebookDocumentIdentifier
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_identifier.rb#8
  def initialize(uri:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_identifier.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_identifier.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_identifier.rb#30
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_identifier.rb#20
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::NotebookDocumentSyncClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_client_capabilities.rb#8
  def initialize(dynamic_registration: T.unsafe(nil), execution_summary_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_client_capabilities.rb#36
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_client_capabilities.rb#24
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_client_capabilities.rb#32
  def execution_summary_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_client_capabilities.rb#38
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_client_capabilities.rb#42
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_options.rb#17
class LanguageServer::Protocol::Interface::NotebookDocumentSyncOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_options.rb#18
  def initialize(notebook_selector:, save: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_options.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_options.rb#31
  def notebook_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_options.rb#40
  def save; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_options.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_options.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#7
class LanguageServer::Protocol::Interface::NotebookDocumentSyncRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#8
  def initialize(notebook_selector:, save: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#40
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#22
  def notebook_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#31
  def save; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notebook_document_sync_registration_options.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#4
class LanguageServer::Protocol::Interface::NotificationMessage
  # source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#5
  def initialize(jsonrpc:, method:, params: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#36
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#16
  def jsonrpc; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#24
  def method; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#32
  def params; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#38
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/notification_message.rb#42
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/optional_versioned_text_document_identifier.rb#4
class LanguageServer::Protocol::Interface::OptionalVersionedTextDocumentIdentifier
  # source://language_server-protocol//lib/language_server/protocol/interface/optional_versioned_text_document_identifier.rb#5
  def initialize(uri:, version:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/optional_versioned_text_document_identifier.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/optional_versioned_text_document_identifier.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/optional_versioned_text_document_identifier.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/optional_versioned_text_document_identifier.rb#18
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/optional_versioned_text_document_identifier.rb#34
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/parameter_information.rb#8
class LanguageServer::Protocol::Interface::ParameterInformation
  # source://language_server-protocol//lib/language_server/protocol/interface/parameter_information.rb#9
  def initialize(label:, documentation: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/parameter_information.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/parameter_information.rb#40
  def documentation; end

  # source://language_server-protocol//lib/language_server/protocol/interface/parameter_information.rb#31
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/parameter_information.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/parameter_information.rb#50
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/partial_result_params.rb#4
class LanguageServer::Protocol::Interface::PartialResultParams
  # source://language_server-protocol//lib/language_server/protocol/interface/partial_result_params.rb#5
  def initialize(partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/partial_result_params.rb#22
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/partial_result_params.rb#18
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/partial_result_params.rb#24
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/partial_result_params.rb#28
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/position.rb#4
class LanguageServer::Protocol::Interface::Position
  # source://language_server-protocol//lib/language_server/protocol/interface/position.rb#5
  def initialize(line:, character:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/position.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/position.rb#30
  def character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/position.rb#18
  def line; end

  # source://language_server-protocol//lib/language_server/protocol/interface/position.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/position.rb#40
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#4
class LanguageServer::Protocol::Interface::PrepareRenameParams
  # source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#27
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#19
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/prepare_rename_params.rb#35
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/previous_result_id.rb#7
class LanguageServer::Protocol::Interface::PreviousResultId
  # source://language_server-protocol//lib/language_server/protocol/interface/previous_result_id.rb#8
  def initialize(uri:, value:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/previous_result_id.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/previous_result_id.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/previous_result_id.rb#40
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/previous_result_id.rb#22
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/previous_result_id.rb#30
  def value; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/progress_params.rb#4
class LanguageServer::Protocol::Interface::ProgressParams
  # source://language_server-protocol//lib/language_server/protocol/interface/progress_params.rb#5
  def initialize(token:, value:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/progress_params.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/progress_params.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/progress_params.rb#36
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/progress_params.rb#18
  def token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/progress_params.rb#26
  def value; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::PublishDiagnosticsClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#5
  def initialize(related_information: T.unsafe(nil), tag_support: T.unsafe(nil), version_support: T.unsafe(nil), code_description_support: T.unsafe(nil), data_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#61
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#47
  def code_description_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#57
  def data_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#21
  def related_information; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#30
  def tag_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#63
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#67
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_client_capabilities.rb#39
  def version_support; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#4
class LanguageServer::Protocol::Interface::PublishDiagnosticsParams
  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#5
  def initialize(uri:, diagnostics:, version: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#36
  def diagnostics; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#19
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/publish_diagnostics_params.rb#28
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/range.rb#4
class LanguageServer::Protocol::Interface::Range
  # source://language_server-protocol//lib/language_server/protocol/interface/range.rb#5
  def initialize(start:, end:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/range.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/range.rb#26
  def end; end

  # source://language_server-protocol//lib/language_server/protocol/interface/range.rb#18
  def start; end

  # source://language_server-protocol//lib/language_server/protocol/interface/range.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/range.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/reference_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::ReferenceClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/reference_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_client_capabilities.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_client_capabilities.rb#17
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_client_capabilities.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_client_capabilities.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/reference_context.rb#4
class LanguageServer::Protocol::Interface::ReferenceContext
  # source://language_server-protocol//lib/language_server/protocol/interface/reference_context.rb#5
  def initialize(include_declaration:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_context.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_context.rb#17
  def include_declaration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_context.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_context.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/reference_options.rb#4
class LanguageServer::Protocol::Interface::ReferenceOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/reference_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#4
class LanguageServer::Protocol::Interface::ReferenceParams
  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#5
  def initialize(text_document:, position:, context:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#55
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#51
  def context; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#46
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#29
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#21
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#57
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#61
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_params.rb#37
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/reference_registration_options.rb#4
class LanguageServer::Protocol::Interface::ReferenceRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/reference_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/reference_registration_options.rb#24
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#7
class LanguageServer::Protocol::Interface::Registration
  # source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#8
  def initialize(id:, method:, register_options: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#43
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#23
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#31
  def method; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#39
  def register_options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#45
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration.rb#49
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/registration_params.rb#4
class LanguageServer::Protocol::Interface::RegistrationParams
  # source://language_server-protocol//lib/language_server/protocol/interface/registration_params.rb#5
  def initialize(registrations:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration_params.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration_params.rb#14
  def registrations; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration_params.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/registration_params.rb#24
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/regular_expressions_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::RegularExpressionsClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/regular_expressions_client_capabilities.rb#8
  def initialize(engine:, version: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/regular_expressions_client_capabilities.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/regular_expressions_client_capabilities.rb#21
  def engine; end

  # source://language_server-protocol//lib/language_server/protocol/interface/regular_expressions_client_capabilities.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/regular_expressions_client_capabilities.rb#39
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/regular_expressions_client_capabilities.rb#29
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#7
class LanguageServer::Protocol::Interface::RelatedFullDocumentDiagnosticReport
  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#8
  def initialize(kind:, items:, result_id: T.unsafe(nil), related_documents: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#57
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#41
  def items; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#23
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#53
  def related_documents; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#33
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#59
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_full_document_diagnostic_report.rb#63
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#7
class LanguageServer::Protocol::Interface::RelatedUnchangedDocumentDiagnosticReport
  # source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#8
  def initialize(kind:, result_id:, related_documents: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#50
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#25
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#46
  def related_documents; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#34
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#52
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/related_unchanged_document_diagnostic_report.rb#56
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/relative_pattern.rb#9
class LanguageServer::Protocol::Interface::RelativePattern
  # source://language_server-protocol//lib/language_server/protocol/interface/relative_pattern.rb#10
  def initialize(base_uri:, pattern:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/relative_pattern.rb#36
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/relative_pattern.rb#24
  def base_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/relative_pattern.rb#32
  def pattern; end

  # source://language_server-protocol//lib/language_server/protocol/interface/relative_pattern.rb#38
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/relative_pattern.rb#42
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::RenameClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), prepare_support: T.unsafe(nil), prepare_support_default_behavior: T.unsafe(nil), honors_change_annotations: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#57
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#53
  def honors_change_annotations; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#29
  def prepare_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#41
  def prepare_support_default_behavior; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#59
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_client_capabilities.rb#63
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#7
class LanguageServer::Protocol::Interface::RenameFile
  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#8
  def initialize(kind:, old_uri:, new_uri:, options: T.unsafe(nil), annotation_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#56
  def annotation_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#60
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#24
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#40
  def new_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#32
  def old_uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#48
  def options; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#62
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file.rb#66
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/rename_file_options.rb#7
class LanguageServer::Protocol::Interface::RenameFileOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file_options.rb#8
  def initialize(overwrite: T.unsafe(nil), ignore_if_exists: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file_options.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file_options.rb#29
  def ignore_if_exists; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file_options.rb#21
  def overwrite; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file_options.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_file_options.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/rename_files_params.rb#8
class LanguageServer::Protocol::Interface::RenameFilesParams
  # source://language_server-protocol//lib/language_server/protocol/interface/rename_files_params.rb#9
  def initialize(files:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_files_params.rb#26
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_files_params.rb#22
  def files; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_files_params.rb#28
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_files_params.rb#32
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/rename_options.rb#4
class LanguageServer::Protocol::Interface::RenameOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/rename_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), prepare_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_options.rb#27
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_options.rb#23
  def prepare_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_options.rb#29
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_options.rb#33
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_options.rb#15
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#4
class LanguageServer::Protocol::Interface::RenameParams
  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#5
  def initialize(text_document:, position:, new_name:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#50
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#46
  def new_name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#52
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#56
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#4
class LanguageServer::Protocol::Interface::RenameRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), prepare_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#33
  def prepare_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#43
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/rename_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#4
class LanguageServer::Protocol::Interface::RequestMessage
  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#5
  def initialize(jsonrpc:, id:, method:, params: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#45
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#25
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#17
  def jsonrpc; end

  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#33
  def method; end

  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#41
  def params; end

  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#47
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/request_message.rb#51
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#4
class LanguageServer::Protocol::Interface::ResponseError
  # source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#5
  def initialize(code:, message:, data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#19
  def code; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#36
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#27
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_error.rb#46
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#4
class LanguageServer::Protocol::Interface::ResponseMessage
  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#5
  def initialize(jsonrpc:, id:, result: T.unsafe(nil), error: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#46
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#42
  def error; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#25
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#17
  def jsonrpc; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#34
  def result; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#48
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/response_message.rb#52
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/save_options.rb#4
class LanguageServer::Protocol::Interface::SaveOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/save_options.rb#5
  def initialize(include_text: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/save_options.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/save_options.rb#17
  def include_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/save_options.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/save_options.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/selection_range.rb#4
class LanguageServer::Protocol::Interface::SelectionRange
  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range.rb#5
  def initialize(range:, parent: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range.rb#27
  def parent; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range.rb#18
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range.rb#37
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/selection_range_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::SelectionRangeClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_client_capabilities.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_client_capabilities.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_client_capabilities.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/selection_range_options.rb#4
class LanguageServer::Protocol::Interface::SelectionRangeOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#4
class LanguageServer::Protocol::Interface::SelectionRangeParams
  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#5
  def initialize(text_document:, positions:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#29
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#45
  def positions; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#37
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_params.rb#20
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#4
class LanguageServer::Protocol::Interface::SelectionRangeRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#25
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/selection_range_registration_options.rb#16
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens.rb#4
class LanguageServer::Protocol::Interface::SemanticTokens
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens.rb#5
  def initialize(data:, result_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens.rb#29
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens.rb#21
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#5
  def initialize(requests:, token_types:, token_modifiers:, formats:, dynamic_registration: T.unsafe(nil), overlapping_token_support: T.unsafe(nil), multiline_token_support: T.unsafe(nil), server_cancel_support: T.unsafe(nil), augments_syntax_tokens: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#113
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#109
  def augments_syntax_tokens; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#28
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#67
  def formats; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#83
  def multiline_token_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#75
  def overlapping_token_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#43
  def requests; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#94
  def server_cancel_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#115
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#119
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#59
  def token_modifiers; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_client_capabilities.rb#51
  def token_types; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensDelta
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta.rb#5
  def initialize(edits:, result_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta.rb#24
  def edits; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta.rb#15
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta.rb#34
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensDeltaParams
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#5
  def initialize(text_document:, previous_result_id:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#50
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#29
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#46
  def previous_result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#37
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#52
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#56
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_params.rb#20
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_partial_result.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensDeltaPartialResult
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_partial_result.rb#5
  def initialize(edits:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_partial_result.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_partial_result.rb#14
  def edits; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_partial_result.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_delta_partial_result.rb#24
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensEdit
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#5
  def initialize(start:, delete_count:, data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#35
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#27
  def delete_count; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#19
  def start; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_edit.rb#45
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_legend.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensLegend
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_legend.rb#5
  def initialize(token_types:, token_modifiers:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_legend.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_legend.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_legend.rb#36
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_legend.rb#26
  def token_modifiers; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_legend.rb#18
  def token_types; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#5
  def initialize(legend:, work_done_progress: T.unsafe(nil), range: T.unsafe(nil), full: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#46
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#42
  def full; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#25
  def legend; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#34
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#48
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#52
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_options.rb#17
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensParams
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#5
  def initialize(text_document:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#40
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#36
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#42
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#46
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_partial_result.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensPartialResult
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_partial_result.rb#5
  def initialize(data:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_partial_result.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_partial_result.rb#14
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_partial_result.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_partial_result.rb#24
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensRangeParams
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#5
  def initialize(text_document:, range:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#29
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#45
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#37
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_range_params.rb#20
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#5
  def initialize(document_selector:, legend:, work_done_progress: T.unsafe(nil), range: T.unsafe(nil), full: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#66
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#23
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#53
  def full; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#62
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#36
  def legend; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#45
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#68
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#72
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_registration_options.rb#28
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_workspace_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::SemanticTokensWorkspaceClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_workspace_client_capabilities.rb#5
  def initialize(refresh_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_workspace_client_capabilities.rb#27
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_workspace_client_capabilities.rb#23
  def refresh_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_workspace_client_capabilities.rb#29
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/semantic_tokens_workspace_client_capabilities.rb#33
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#4
class LanguageServer::Protocol::Interface::ServerCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#5
  def initialize(position_encoding: T.unsafe(nil), text_document_sync: T.unsafe(nil), notebook_document_sync: T.unsafe(nil), completion_provider: T.unsafe(nil), hover_provider: T.unsafe(nil), signature_help_provider: T.unsafe(nil), declaration_provider: T.unsafe(nil), definition_provider: T.unsafe(nil), type_definition_provider: T.unsafe(nil), implementation_provider: T.unsafe(nil), references_provider: T.unsafe(nil), document_highlight_provider: T.unsafe(nil), document_symbol_provider: T.unsafe(nil), code_action_provider: T.unsafe(nil), code_lens_provider: T.unsafe(nil), document_link_provider: T.unsafe(nil), color_provider: T.unsafe(nil), document_formatting_provider: T.unsafe(nil), document_range_formatting_provider: T.unsafe(nil), document_on_type_formatting_provider: T.unsafe(nil), rename_provider: T.unsafe(nil), folding_range_provider: T.unsafe(nil), execute_command_provider: T.unsafe(nil), selection_range_provider: T.unsafe(nil), linked_editing_range_provider: T.unsafe(nil), call_hierarchy_provider: T.unsafe(nil), semantic_tokens_provider: T.unsafe(nil), moniker_provider: T.unsafe(nil), type_hierarchy_provider: T.unsafe(nil), inline_value_provider: T.unsafe(nil), inlay_hint_provider: T.unsafe(nil), diagnostic_provider: T.unsafe(nil), workspace_symbol_provider: T.unsafe(nil), workspace: T.unsafe(nil), experimental: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#340
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#264
  def call_hierarchy_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#166
  def code_action_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#174
  def code_lens_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#190
  def color_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#84
  def completion_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#108
  def declaration_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#116
  def definition_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#312
  def diagnostic_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#198
  def document_formatting_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#148
  def document_highlight_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#182
  def document_link_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#214
  def document_on_type_formatting_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#206
  def document_range_formatting_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#156
  def document_symbol_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#240
  def execute_command_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#336
  def experimental; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#232
  def folding_range_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#92
  def hover_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#132
  def implementation_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#304
  def inlay_hint_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#296
  def inline_value_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#256
  def linked_editing_range_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#280
  def moniker_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#76
  def notebook_document_sync; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#57
  def position_encoding; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#140
  def references_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#224
  def rename_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#248
  def selection_range_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#272
  def semantic_tokens_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#100
  def signature_help_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#68
  def text_document_sync; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#342
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#346
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#124
  def type_definition_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#288
  def type_hierarchy_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#328
  def workspace; end

  # source://language_server-protocol//lib/language_server/protocol/interface/server_capabilities.rb#320
  def workspace_symbol_provider; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/set_trace_params.rb#4
class LanguageServer::Protocol::Interface::SetTraceParams
  # source://language_server-protocol//lib/language_server/protocol/interface/set_trace_params.rb#5
  def initialize(value:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/set_trace_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/set_trace_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/set_trace_params.rb#27
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/set_trace_params.rb#17
  def value; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/show_document_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::ShowDocumentClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_client_capabilities.rb#8
  def initialize(support:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_client_capabilities.rb#25
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_client_capabilities.rb#21
  def support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_client_capabilities.rb#27
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_client_capabilities.rb#31
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#7
class LanguageServer::Protocol::Interface::ShowDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#8
  def initialize(uri:, external: T.unsafe(nil), take_focus: T.unsafe(nil), selection: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#59
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#33
  def external; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#55
  def selection; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#44
  def take_focus; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#61
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#65
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_params.rb#23
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/show_document_result.rb#7
class LanguageServer::Protocol::Interface::ShowDocumentResult
  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_result.rb#8
  def initialize(success:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_result.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_result.rb#20
  def success; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_result.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_document_result.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/show_message_params.rb#4
class LanguageServer::Protocol::Interface::ShowMessageParams
  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_params.rb#5
  def initialize(type:, message:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_params.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_params.rb#26
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_params.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_params.rb#36
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_params.rb#18
  def type; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::ShowMessageRequestClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_client_capabilities.rb#8
  def initialize(message_action_item: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_client_capabilities.rb#24
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_client_capabilities.rb#20
  def message_action_item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_client_capabilities.rb#26
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_client_capabilities.rb#30
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#4
class LanguageServer::Protocol::Interface::ShowMessageRequestParams
  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#5
  def initialize(type:, message:, actions: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#35
  def actions; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#27
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/show_message_request_params.rb#19
  def type; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#9
class LanguageServer::Protocol::Interface::SignatureHelp
  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#10
  def initialize(signatures:, active_signature: T.unsafe(nil), active_parameter: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#55
  def active_parameter; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#41
  def active_signature; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#59
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#25
  def signatures; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#61
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help.rb#65
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::SignatureHelpClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), signature_information: T.unsafe(nil), context_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#43
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#39
  def context_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#19
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#28
  def signature_information; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#45
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_client_capabilities.rb#49
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#8
class LanguageServer::Protocol::Interface::SignatureHelpContext
  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#9
  def initialize(trigger_kind:, is_retrigger:, trigger_character: T.unsafe(nil), active_signature_help: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#58
  def active_signature_help; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#62
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#47
  def is_retrigger; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#64
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#68
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#35
  def trigger_character; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_context.rb#24
  def trigger_kind; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#4
class LanguageServer::Protocol::Interface::SignatureHelpOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), trigger_characters: T.unsafe(nil), retrigger_characters: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#41
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#37
  def retrigger_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#43
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#47
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#25
  def trigger_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_options.rb#16
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#4
class LanguageServer::Protocol::Interface::SignatureHelpParams
  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), context: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#50
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#46
  def context; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#52
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#56
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#4
class LanguageServer::Protocol::Interface::SignatureHelpRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), trigger_characters: T.unsafe(nil), retrigger_characters: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#51
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#21
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#47
  def retrigger_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#53
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#57
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#35
  def trigger_characters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_help_registration_options.rb#26
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#9
class LanguageServer::Protocol::Interface::SignatureInformation
  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#10
  def initialize(label:, documentation: T.unsafe(nil), parameters: T.unsafe(nil), active_parameter: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#53
  def active_parameter; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#57
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#35
  def documentation; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#26
  def label; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#43
  def parameters; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#59
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/signature_information.rb#63
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/static_registration_options.rb#7
class LanguageServer::Protocol::Interface::StaticRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/static_registration_options.rb#8
  def initialize(id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/static_registration_options.rb#25
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/static_registration_options.rb#21
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/static_registration_options.rb#27
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/static_registration_options.rb#31
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#8
class LanguageServer::Protocol::Interface::SymbolInformation
  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#9
  def initialize(name:, kind:, location:, tags: T.unsafe(nil), deprecated: T.unsafe(nil), container_name: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#81
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#77
  def container_name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#50
  def deprecated; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#34
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#66
  def location; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#26
  def name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#42
  def tags; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#83
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/symbol_information.rb#87
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_change_registration_options.rb#7
class LanguageServer::Protocol::Interface::TextDocumentChangeRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_change_registration_options.rb#8
  def initialize(document_selector:, sync_kind:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_change_registration_options.rb#35
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_change_registration_options.rb#22
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_change_registration_options.rb#31
  def sync_kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_change_registration_options.rb#37
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_change_registration_options.rb#41
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#7
class LanguageServer::Protocol::Interface::TextDocumentClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#8
  def initialize(synchronization: T.unsafe(nil), completion: T.unsafe(nil), hover: T.unsafe(nil), signature_help: T.unsafe(nil), declaration: T.unsafe(nil), definition: T.unsafe(nil), type_definition: T.unsafe(nil), implementation: T.unsafe(nil), references: T.unsafe(nil), document_highlight: T.unsafe(nil), document_symbol: T.unsafe(nil), code_action: T.unsafe(nil), code_lens: T.unsafe(nil), document_link: T.unsafe(nil), color_provider: T.unsafe(nil), formatting: T.unsafe(nil), range_formatting: T.unsafe(nil), on_type_formatting: T.unsafe(nil), rename: T.unsafe(nil), publish_diagnostics: T.unsafe(nil), folding_range: T.unsafe(nil), selection_range: T.unsafe(nil), linked_editing_range: T.unsafe(nil), call_hierarchy: T.unsafe(nil), semantic_tokens: T.unsafe(nil), moniker: T.unsafe(nil), type_hierarchy: T.unsafe(nil), inline_value: T.unsafe(nil), inlay_hint: T.unsafe(nil), diagnostic: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#285
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#233
  def call_hierarchy; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#134
  def code_action; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#142
  def code_lens; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#159
  def color_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#54
  def completion; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#78
  def declaration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#86
  def definition; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#281
  def diagnostic; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#118
  def document_highlight; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#150
  def document_link; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#126
  def document_symbol; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#209
  def folding_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#167
  def formatting; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#62
  def hover; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#102
  def implementation; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#273
  def inlay_hint; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#265
  def inline_value; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#225
  def linked_editing_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#249
  def moniker; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#184
  def on_type_formatting; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#201
  def publish_diagnostics; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#175
  def range_formatting; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#110
  def references; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#192
  def rename; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#217
  def selection_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#241
  def semantic_tokens; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#70
  def signature_help; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#46
  def synchronization; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#287
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#291
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#94
  def type_definition; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_client_capabilities.rb#257
  def type_hierarchy; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#8
class LanguageServer::Protocol::Interface::TextDocumentContentChangeEvent
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#9
  def initialize(text:, range: T.unsafe(nil), range_length: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#47
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#23
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#31
  def range_length; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#43
  def text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#49
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_content_change_event.rb#53
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_edit.rb#4
class LanguageServer::Protocol::Interface::TextDocumentEdit
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_edit.rb#5
  def initialize(text_document:, edits:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_edit.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_edit.rb#26
  def edits; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_edit.rb#18
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_edit.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_edit.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_identifier.rb#4
class LanguageServer::Protocol::Interface::TextDocumentIdentifier
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_identifier.rb#5
  def initialize(uri:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_identifier.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_identifier.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_identifier.rb#27
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_identifier.rb#17
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#4
class LanguageServer::Protocol::Interface::TextDocumentItem
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#5
  def initialize(uri:, language_id:, version:, text:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#28
  def language_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#45
  def text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#20
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_item.rb#37
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_position_params.rb#4
class LanguageServer::Protocol::Interface::TextDocumentPositionParams
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_position_params.rb#5
  def initialize(text_document:, position:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_position_params.rb#30
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_position_params.rb#26
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_position_params.rb#18
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_position_params.rb#32
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_position_params.rb#36
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_registration_options.rb#7
class LanguageServer::Protocol::Interface::TextDocumentRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_registration_options.rb#8
  def initialize(document_selector:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_registration_options.rb#25
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_registration_options.rb#21
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_registration_options.rb#27
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_registration_options.rb#31
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_save_registration_options.rb#4
class LanguageServer::Protocol::Interface::TextDocumentSaveRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_save_registration_options.rb#5
  def initialize(document_selector:, include_text: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_save_registration_options.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_save_registration_options.rb#19
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_save_registration_options.rb#27
  def include_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_save_registration_options.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_save_registration_options.rb#37
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::TextDocumentSyncClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), will_save: T.unsafe(nil), will_save_wait_until: T.unsafe(nil), did_save: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#50
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#46
  def did_save; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#52
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#56
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#28
  def will_save; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_client_capabilities.rb#38
  def will_save_wait_until; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#4
class LanguageServer::Protocol::Interface::TextDocumentSyncOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#5
  def initialize(open_close: T.unsafe(nil), change: T.unsafe(nil), will_save: T.unsafe(nil), will_save_wait_until: T.unsafe(nil), save: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#66
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#35
  def change; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#24
  def open_close; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#62
  def save; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#68
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#72
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#44
  def will_save; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_document_sync_options.rb#53
  def will_save_wait_until; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/text_edit.rb#4
class LanguageServer::Protocol::Interface::TextEdit
  # source://language_server-protocol//lib/language_server/protocol/interface/text_edit.rb#5
  def initialize(range:, new_text:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_edit.rb#32
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_edit.rb#28
  def new_text; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_edit.rb#19
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_edit.rb#34
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/text_edit.rb#38
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_definition_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::TypeDefinitionClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), link_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_client_capabilities.rb#32
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_client_capabilities.rb#28
  def link_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_client_capabilities.rb#34
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_client_capabilities.rb#38
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_definition_options.rb#4
class LanguageServer::Protocol::Interface::TypeDefinitionOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#4
class LanguageServer::Protocol::Interface::TypeDefinitionParams
  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#49
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#45
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#28
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#20
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#51
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#55
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_params.rb#36
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#4
class LanguageServer::Protocol::Interface::TypeDefinitionRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_definition_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#4
class LanguageServer::Protocol::Interface::TypeHierarchyItem
  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#5
  def initialize(name:, kind:, uri:, range:, selection_range:, tags: T.unsafe(nil), detail: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#90
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#86
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#48
  def detail; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#32
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#24
  def name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#65
  def range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#75
  def selection_range; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#40
  def tags; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#92
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#96
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_item.rb#56
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_options.rb#4
class LanguageServer::Protocol::Interface::TypeHierarchyOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#4
class LanguageServer::Protocol::Interface::TypeHierarchyPrepareParams
  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#5
  def initialize(text_document:, position:, work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#39
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#27
  def position; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#19
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#41
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#45
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_prepare_params.rb#35
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#4
class LanguageServer::Protocol::Interface::TypeHierarchyRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#5
  def initialize(document_selector:, work_done_progress: T.unsafe(nil), id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#20
  def document_selector; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#34
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#44
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_registration_options.rb#25
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#4
class LanguageServer::Protocol::Interface::TypeHierarchySubtypesParams
  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#5
  def initialize(item:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#33
  def item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#43
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_subtypes_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#4
class LanguageServer::Protocol::Interface::TypeHierarchySupertypesParams
  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#5
  def initialize(item:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#37
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#33
  def item; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#28
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#39
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#43
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/type_hierarchy_supertypes_params.rb#19
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/unchanged_document_diagnostic_report.rb#8
class LanguageServer::Protocol::Interface::UnchangedDocumentDiagnosticReport
  # source://language_server-protocol//lib/language_server/protocol/interface/unchanged_document_diagnostic_report.rb#9
  def initialize(kind:, result_id:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/unchanged_document_diagnostic_report.rb#38
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unchanged_document_diagnostic_report.rb#25
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unchanged_document_diagnostic_report.rb#34
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unchanged_document_diagnostic_report.rb#40
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unchanged_document_diagnostic_report.rb#44
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/unregistration.rb#7
class LanguageServer::Protocol::Interface::Unregistration
  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration.rb#8
  def initialize(id:, method:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration.rb#34
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration.rb#22
  def id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration.rb#30
  def method; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration.rb#36
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration.rb#40
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/unregistration_params.rb#4
class LanguageServer::Protocol::Interface::UnregistrationParams
  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration_params.rb#5
  def initialize(unregisterations:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration_params.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration_params.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration_params.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/unregistration_params.rb#14
  def unregisterations; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/versioned_notebook_document_identifier.rb#7
class LanguageServer::Protocol::Interface::VersionedNotebookDocumentIdentifier
  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_notebook_document_identifier.rb#8
  def initialize(version:, uri:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_notebook_document_identifier.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_notebook_document_identifier.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_notebook_document_identifier.rb#39
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_notebook_document_identifier.rb#29
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_notebook_document_identifier.rb#21
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/versioned_text_document_identifier.rb#4
class LanguageServer::Protocol::Interface::VersionedTextDocumentIdentifier
  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_text_document_identifier.rb#5
  def initialize(uri:, version:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_text_document_identifier.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_text_document_identifier.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_text_document_identifier.rb#39
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_text_document_identifier.rb#18
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/versioned_text_document_identifier.rb#29
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/will_save_text_document_params.rb#7
class LanguageServer::Protocol::Interface::WillSaveTextDocumentParams
  # source://language_server-protocol//lib/language_server/protocol/interface/will_save_text_document_params.rb#8
  def initialize(text_document:, reason:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/will_save_text_document_params.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/will_save_text_document_params.rb#29
  def reason; end

  # source://language_server-protocol//lib/language_server/protocol/interface/will_save_text_document_params.rb#21
  def text_document; end

  # source://language_server-protocol//lib/language_server/protocol/interface/will_save_text_document_params.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/will_save_text_document_params.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#4
class LanguageServer::Protocol::Interface::WorkDoneProgressBegin
  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#5
  def initialize(kind:, title:, cancellable: T.unsafe(nil), message: T.unsafe(nil), percentage: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#68
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#39
  def cancellable; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#18
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#51
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#64
  def percentage; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#29
  def title; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#70
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_begin.rb#74
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_cancel_params.rb#4
class LanguageServer::Protocol::Interface::WorkDoneProgressCancelParams
  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_cancel_params.rb#5
  def initialize(token:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_cancel_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_cancel_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_cancel_params.rb#27
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_cancel_params.rb#17
  def token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_create_params.rb#4
class LanguageServer::Protocol::Interface::WorkDoneProgressCreateParams
  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_create_params.rb#5
  def initialize(token:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_create_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_create_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_create_params.rb#27
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_create_params.rb#17
  def token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_end.rb#4
class LanguageServer::Protocol::Interface::WorkDoneProgressEnd
  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_end.rb#5
  def initialize(kind:, message: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_end.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_end.rb#15
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_end.rb#24
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_end.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_end.rb#34
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_options.rb#4
class LanguageServer::Protocol::Interface::WorkDoneProgressOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_options.rb#18
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_options.rb#20
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_options.rb#24
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_options.rb#14
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_params.rb#4
class LanguageServer::Protocol::Interface::WorkDoneProgressParams
  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_params.rb#5
  def initialize(work_done_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_params.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_params.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_params.rb#27
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_params.rb#17
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#4
class LanguageServer::Protocol::Interface::WorkDoneProgressReport
  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#5
  def initialize(kind:, cancellable: T.unsafe(nil), message: T.unsafe(nil), percentage: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#58
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#29
  def cancellable; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#17
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#41
  def message; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#54
  def percentage; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#60
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/work_done_progress_report.rb#64
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#7
class LanguageServer::Protocol::Interface::WorkspaceDiagnosticParams
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#8
  def initialize(previous_result_ids:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil), identifier: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#53
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#40
  def identifier; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#32
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#49
  def previous_result_ids; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#55
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#59
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_params.rb#23
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report.rb#7
class LanguageServer::Protocol::Interface::WorkspaceDiagnosticReport
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report.rb#8
  def initialize(items:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report.rb#17
  def items; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report_partial_result.rb#7
class LanguageServer::Protocol::Interface::WorkspaceDiagnosticReportPartialResult
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report_partial_result.rb#8
  def initialize(items:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report_partial_result.rb#21
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report_partial_result.rb#17
  def items; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report_partial_result.rb#23
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_diagnostic_report_partial_result.rb#27
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#4
class LanguageServer::Protocol::Interface::WorkspaceEdit
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#5
  def initialize(changes: T.unsafe(nil), document_changes: T.unsafe(nil), change_annotations: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#56
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#52
  def change_annotations; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#19
  def changes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#39
  def document_changes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#58
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit.rb#62
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::WorkspaceEditClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#5
  def initialize(document_changes: T.unsafe(nil), resource_operations: T.unsafe(nil), failure_handling: T.unsafe(nil), normalizes_line_endings: T.unsafe(nil), change_annotation_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#63
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#59
  def change_annotation_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#21
  def document_changes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#39
  def failure_handling; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#50
  def normalizes_line_endings; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#30
  def resource_operations; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#65
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_edit_client_capabilities.rb#69
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_folder.rb#4
class LanguageServer::Protocol::Interface::WorkspaceFolder
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folder.rb#5
  def initialize(uri:, name:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folder.rb#31
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folder.rb#27
  def name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folder.rb#33
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folder.rb#37
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folder.rb#18
  def uri; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_change_event.rb#7
class LanguageServer::Protocol::Interface::WorkspaceFoldersChangeEvent
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_change_event.rb#8
  def initialize(added:, removed:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_change_event.rb#21
  def added; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_change_event.rb#33
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_change_event.rb#29
  def removed; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_change_event.rb#35
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_change_event.rb#39
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_server_capabilities.rb#4
class LanguageServer::Protocol::Interface::WorkspaceFoldersServerCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_server_capabilities.rb#5
  def initialize(supported: T.unsafe(nil), change_notifications: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_server_capabilities.rb#36
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_server_capabilities.rb#32
  def change_notifications; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_server_capabilities.rb#18
  def supported; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_server_capabilities.rb#38
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_folders_server_capabilities.rb#42
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#7
class LanguageServer::Protocol::Interface::WorkspaceFullDocumentDiagnosticReport
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#8
  def initialize(kind:, items:, uri:, version:, result_id: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#63
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#42
  def items; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#24
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#34
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#65
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#69
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#50
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_full_document_diagnostic_report.rb#59
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#7
class LanguageServer::Protocol::Interface::WorkspaceSymbol
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#8
  def initialize(name:, kind:, location:, tags: T.unsafe(nil), container_name: T.unsafe(nil), data: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#77
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#52
  def container_name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#73
  def data; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#33
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#64
  def location; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#25
  def name; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#41
  def tags; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#79
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol.rb#83
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#4
class LanguageServer::Protocol::Interface::WorkspaceSymbolClientCapabilities
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#5
  def initialize(dynamic_registration: T.unsafe(nil), symbol_kind: T.unsafe(nil), tag_support: T.unsafe(nil), resolve_support: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#52
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#20
  def dynamic_registration; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#48
  def resolve_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#29
  def symbol_kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#38
  def tag_support; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#54
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_client_capabilities.rb#58
  def to_json(*args); end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_options.rb#4
class LanguageServer::Protocol::Interface::WorkspaceSymbolOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_options.rb#24
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_options.rb#15
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#7
class LanguageServer::Protocol::Interface::WorkspaceSymbolParams
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#8
  def initialize(query:, work_done_token: T.unsafe(nil), partial_result_token: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#44
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#31
  def partial_result_token; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#40
  def query; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#46
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#50
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_params.rb#22
  def work_done_token; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_registration_options.rb#4
class LanguageServer::Protocol::Interface::WorkspaceSymbolRegistrationOptions
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_registration_options.rb#5
  def initialize(work_done_progress: T.unsafe(nil), resolve_provider: T.unsafe(nil)); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_registration_options.rb#28
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_registration_options.rb#24
  def resolve_provider; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_registration_options.rb#30
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_registration_options.rb#34
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_symbol_registration_options.rb#15
  def work_done_progress; end
end

# source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#7
class LanguageServer::Protocol::Interface::WorkspaceUnchangedDocumentDiagnosticReport
  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#8
  def initialize(kind:, result_id:, uri:, version:); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#56
  def attributes; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#26
  def kind; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#35
  def result_id; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#58
  def to_hash; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#62
  def to_json(*args); end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#43
  def uri; end

  # source://language_server-protocol//lib/language_server/protocol/interface/workspace_unchanged_document_diagnostic_report.rb#52
  def version; end
end

# source://language_server-protocol//lib/language_server/protocol/transport/io/reader.rb#7
module LanguageServer::Protocol::Transport; end

# source://language_server-protocol//lib/language_server/protocol/transport/io/reader.rb#8
module LanguageServer::Protocol::Transport::Io; end

# source://language_server-protocol//lib/language_server/protocol/transport/io/reader.rb#9
class LanguageServer::Protocol::Transport::Io::Reader
  # source://language_server-protocol//lib/language_server/protocol/transport/io/reader.rb#10
  def initialize(io); end

  # source://language_server-protocol//lib/language_server/protocol/transport/io/reader.rb#15
  def read(&block); end

  private

  # source://language_server-protocol//lib/language_server/protocol/transport/io/reader.rb#26
  def io; end
end

# source://language_server-protocol//lib/language_server/protocol/transport/io/writer.rb#5
class LanguageServer::Protocol::Transport::Io::Writer
  # source://language_server-protocol//lib/language_server/protocol/transport/io/writer.rb#8
  def initialize(io); end

  # source://language_server-protocol//lib/language_server/protocol/transport/io/writer.rb#6
  def io; end

  # source://language_server-protocol//lib/language_server/protocol/transport/io/writer.rb#13
  def write(response); end
end

# source://language_server-protocol//lib/language_server/protocol/transport/stdio/reader.rb#4
module LanguageServer::Protocol::Transport::Stdio; end

# source://language_server-protocol//lib/language_server/protocol/transport/stdio/reader.rb#5
class LanguageServer::Protocol::Transport::Stdio::Reader < ::LanguageServer::Protocol::Transport::Io::Reader
  # source://language_server-protocol//lib/language_server/protocol/transport/stdio/reader.rb#6
  def initialize; end
end

# source://language_server-protocol//lib/language_server/protocol/transport/stdio/writer.rb#5
class LanguageServer::Protocol::Transport::Stdio::Writer < ::LanguageServer::Protocol::Transport::Io::Writer
  # source://language_server-protocol//lib/language_server/protocol/transport/stdio/writer.rb#6
  def initialize; end
end

# source://language_server-protocol//lib/language_server/protocol/version.rb#3
LanguageServer::Protocol::VERSION = T.let(T.unsafe(nil), String)
