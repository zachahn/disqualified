# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `net-imap` gem.
# Please instead update this file by running `bin/tapioca gem net-imap`.


# source://net-imap//lib/net/imap.rb#719
class Net::IMAP < ::Net::Protocol
  include ::Net::IMAP::DeprecatedClientOptions
  include ::MonitorMixin
  include ::OpenSSL
  include ::OpenSSL::SSL
  extend ::Net::IMAP::Authenticators

  # source://net-imap//lib/net/imap/deprecated_client_options.rb#72
  def initialize(host, port_or_options = T.unsafe(nil), *deprecated, **options); end

  # source://net-imap//lib/net/imap.rb#2614
  def add_response_handler(handler = T.unsafe(nil), &block); end

  # source://net-imap//lib/net/imap.rb#1866
  def append(mailbox, message, flags = T.unsafe(nil), date_time = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#1059
  def auth_capable?(mechanism); end

  # source://net-imap//lib/net/imap.rb#1042
  def auth_mechanisms; end

  # source://net-imap//lib/net/imap.rb#1339
  def authenticate(mechanism, *creds, sasl_ir: T.unsafe(nil), **props, &callback); end

  # source://net-imap//lib/net/imap.rb#1018
  def capabilities; end

  # source://net-imap//lib/net/imap.rb#1069
  def capabilities_cached?; end

  # source://net-imap//lib/net/imap.rb#1107
  def capability; end

  # source://net-imap//lib/net/imap.rb#1004
  def capability?(capability); end

  # source://net-imap//lib/net/imap.rb#1004
  def capable?(capability); end

  # source://net-imap//lib/net/imap.rb#1882
  def check; end

  # source://net-imap//lib/net/imap.rb#1082
  def clear_cached_capabilities; end

  # source://net-imap//lib/net/imap.rb#2571
  def clear_responses(type = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#957
  def client_thread; end

  # source://net-imap//lib/net/imap.rb#1892
  def close; end

  # source://net-imap//lib/net/imap.rb#772
  def config; end

  # source://net-imap//lib/net/imap.rb#2197
  def copy(set, mailbox); end

  # source://net-imap//lib/net/imap.rb#1466
  def create(mailbox); end

  # source://net-imap//lib/net/imap.rb#1478
  def delete(mailbox); end

  # source://net-imap//lib/net/imap.rb#965
  def disconnect; end

  # source://net-imap//lib/net/imap.rb#990
  def disconnected?; end

  # source://net-imap//lib/net/imap.rb#2408
  def enable(*capabilities); end

  # source://net-imap//lib/net/imap.rb#1450
  def examine(mailbox, condstore: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#1917
  def expunge; end

  # source://net-imap//lib/net/imap.rb#2092
  def fetch(set, attr, mod = T.unsafe(nil), changedsince: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#1746
  def getacl(mailbox); end

  # source://net-imap//lib/net/imap.rb#1690
  def getquota(mailbox); end

  # source://net-imap//lib/net/imap.rb#1669
  def getquotaroot(mailbox); end

  # source://net-imap//lib/net/imap.rb#766
  def greeting; end

  # source://net-imap//lib/net/imap.rb#783
  def host; end

  # source://net-imap//lib/net/imap.rb#1136
  def id(client_id = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2452
  def idle(timeout = T.unsafe(nil), &response_handler); end

  # source://net-imap//lib/net/imap.rb#2488
  def idle_done; end

  # source://net-imap//lib/net/imap.rb#780
  def idle_response_timeout; end

  # source://net-imap//lib/net/imap.rb#1550
  def list(refname, mailbox); end

  # source://net-imap//lib/net/imap.rb#1394
  def login(user, password); end

  # source://net-imap//lib/net/imap.rb#1164
  def logout; end

  # source://net-imap//lib/net/imap.rb#1181
  def logout!; end

  # source://net-imap//lib/net/imap.rb#1761
  def lsub(refname, mailbox); end

  # source://net-imap//lib/net/imap.rb#2233
  def move(set, mailbox); end

  # source://net-imap//lib/net/imap.rb#1607
  def namespace; end

  # source://net-imap//lib/net/imap.rb#1155
  def noop; end

  # source://net-imap//lib/net/imap.rb#777
  def open_timeout; end

  # source://net-imap//lib/net/imap.rb#786
  def port; end

  # source://net-imap//lib/net/imap.rb#2624
  def remove_response_handler(handler); end

  # source://net-imap//lib/net/imap.rb#1491
  def rename(mailbox, newname); end

  # source://net-imap//lib/net/imap.rb#2597
  def response_handlers; end

  # source://net-imap//lib/net/imap.rb#2544
  def responses(type = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2023
  def search(keys, charset = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#1432
  def select(mailbox, condstore: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#1728
  def setacl(mailbox, user, rights); end

  # source://net-imap//lib/net/imap.rb#1708
  def setquota(mailbox, quota); end

  # source://net-imap//lib/net/imap.rb#2277
  def sort(sort_keys, search_keys, charset); end

  # source://net-imap//lib/net/imap.rb#794
  def ssl_ctx; end

  # source://net-imap//lib/net/imap.rb#801
  def ssl_ctx_params; end

  # source://net-imap//lib/net/imap/deprecated_client_options.rb#104
  def starttls(*deprecated, **options); end

  # source://net-imap//lib/net/imap.rb#1828
  def status(mailbox, attr); end

  # source://net-imap//lib/net/imap.rb#2161
  def store(set, attr, flags, unchangedsince: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#1503
  def subscribe(mailbox); end

  # source://net-imap//lib/net/imap.rb#2317
  def thread(algorithm, search_keys, charset); end

  # source://net-imap//lib/net/imap.rb#955
  def tls_verified?; end

  # source://net-imap//lib/net/imap.rb#2210
  def uid_copy(set, mailbox); end

  # source://net-imap//lib/net/imap.rb#1949
  def uid_expunge(uid_set); end

  # source://net-imap//lib/net/imap.rb#2114
  def uid_fetch(set, attr, mod = T.unsafe(nil), changedsince: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2251
  def uid_move(set, mailbox); end

  # source://net-imap//lib/net/imap.rb#2036
  def uid_search(keys, charset = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2292
  def uid_sort(sort_keys, search_keys, charset); end

  # source://net-imap//lib/net/imap.rb#2179
  def uid_store(set, attr, flags, unchangedsince: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2331
  def uid_thread(algorithm, search_keys, charset); end

  # source://net-imap//lib/net/imap.rb#1908
  def unselect; end

  # source://net-imap//lib/net/imap.rb#1516
  def unsubscribe(mailbox); end

  # source://net-imap//lib/net/imap.rb#1651
  def xlist(refname, mailbox); end

  private

  # source://net-imap//lib/net/imap.rb#2964
  def build_ssl_ctx(ssl); end

  # source://net-imap//lib/net/imap.rb#2803
  def capabilities_from_resp_code(resp); end

  # source://net-imap//lib/net/imap.rb#2925
  def copy_internal(cmd, set, mailbox); end

  # source://net-imap//lib/net/imap.rb#2888
  def fetch_internal(cmd, set, attr, mod = T.unsafe(nil), changedsince: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2852
  def generate_tag; end

  # source://net-imap//lib/net/imap.rb#2766
  def get_response; end

  # source://net-imap//lib/net/imap.rb#2645
  def get_server_greeting; end

  # source://net-imap//lib/net/imap.rb#2738
  def get_tagged_response(tag, cmd, timeout = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2953
  def normalize_searching_criteria(keys); end

  # source://net-imap//lib/net/imap.rb#2857
  def put_string(str); end

  # source://net-imap//lib/net/imap.rb#2671
  def receive_responses; end

  # source://net-imap//lib/net/imap.rb#2790
  def record_untagged_response(resp); end

  # source://net-imap//lib/net/imap.rb#2796
  def record_untagged_response_code(resp); end

  # source://net-imap//lib/net/imap.rb#2993
  def sasl_adapter; end

  # source://net-imap//lib/net/imap.rb#2872
  def search_internal(cmd, keys, charset); end

  # source://net-imap//lib/net/imap.rb#2824
  def send_command(cmd, *args, &block); end

  # source://net-imap//lib/net/imap.rb#2815
  def send_command_with_continuations(cmd, *args); end

  # source://net-imap//lib/net/imap/command_data.rb#33
  def send_data(data, tag = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/command_data.rb#115
  def send_date_data(date); end

  # source://net-imap//lib/net/imap/command_data.rb#101
  def send_list_data(list, tag = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/command_data.rb#80
  def send_literal(str, tag = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/command_data.rb#97
  def send_number_data(num); end

  # source://net-imap//lib/net/imap/command_data.rb#76
  def send_quoted_string(str); end

  # source://net-imap//lib/net/imap/command_data.rb#54
  def send_string_data(str, tag = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/command_data.rb#118
  def send_symbol_data(symbol); end

  # source://net-imap//lib/net/imap/command_data.rb#116
  def send_time_data(time); end

  # source://net-imap//lib/net/imap.rb#2929
  def sort_internal(cmd, sort_keys, search_keys, charset); end

  # source://net-imap//lib/net/imap.rb#2636
  def start_imap_connection; end

  # source://net-imap//lib/net/imap.rb#2653
  def start_receiver_thread; end

  # source://net-imap//lib/net/imap.rb#2979
  def start_tls_session; end

  # source://net-imap//lib/net/imap.rb#2913
  def store_internal(cmd, set, attr, flags, unchangedsince: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap.rb#2662
  def tcp_socket(host, port); end

  # source://net-imap//lib/net/imap.rb#2941
  def thread_internal(cmd, algorithm, search_keys, charset); end

  # source://net-imap//lib/net/imap/command_data.rb#12
  def validate_data(data); end

  class << self
    # source://net-imap//lib/net/imap.rb#739
    def config; end

    # source://net-imap//lib/net/imap.rb#742
    def debug; end

    # source://net-imap//lib/net/imap.rb#745
    def debug=(val); end

    # source://net-imap//lib/net/imap/data_encoding.rb#90
    def decode_date(string); end

    # source://net-imap//lib/net/imap/data_encoding.rb#112
    def decode_datetime(string); end

    # source://net-imap//lib/net/imap/data_encoding.rb#124
    def decode_time(string); end

    # source://net-imap//lib/net/imap/data_encoding.rb#57
    def decode_utf7(s); end

    # source://net-imap//lib/net/imap.rb#750
    def default_imap_port; end

    # source://net-imap//lib/net/imap.rb#755
    def default_imaps_port; end

    # source://net-imap//lib/net/imap.rb#750
    def default_port; end

    # source://net-imap//lib/net/imap.rb#755
    def default_ssl_port; end

    # source://net-imap//lib/net/imap.rb#755
    def default_tls_port; end

    # source://net-imap//lib/net/imap/data_encoding.rb#80
    def encode_date(date); end

    # source://net-imap//lib/net/imap/data_encoding.rb#98
    def encode_datetime(time); end

    # source://net-imap//lib/net/imap/data_encoding.rb#98
    def encode_time(time); end

    # source://net-imap//lib/net/imap/data_encoding.rb#68
    def encode_utf7(s); end

    # source://net-imap//lib/net/imap/data_encoding.rb#80
    def format_date(date); end

    # source://net-imap//lib/net/imap/data_encoding.rb#149
    def format_datetime(time); end

    # source://net-imap//lib/net/imap/data_encoding.rb#98
    def format_time(time); end

    # source://net-imap//lib/net/imap/data_encoding.rb#90
    def parse_date(string); end

    # source://net-imap//lib/net/imap/data_encoding.rb#112
    def parse_datetime(string); end

    # source://net-imap//lib/net/imap/data_encoding.rb#124
    def parse_time(string); end

    # source://net-imap//lib/net/imap.rb#3003
    def saslprep(string, **opts); end
  end
end

# source://net-imap//lib/net/imap/flags.rb#218
Net::IMAP::ALL = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/flags.rb#224
Net::IMAP::ARCHIVE = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/command_data.rb#137
class Net::IMAP::Atom
  # source://net-imap//lib/net/imap/command_data.rb#147
  def initialize(data); end

  # source://net-imap//lib/net/imap/command_data.rb#138
  def send_data(imap, tag); end

  # source://net-imap//lib/net/imap/command_data.rb#142
  def validate; end
end

# source://net-imap//lib/net/imap/authenticators.rb#4
module Net::IMAP::Authenticators
  # source://net-imap//lib/net/imap/authenticators.rb#7
  def add_authenticator(*_arg0, **_arg1, &_arg2); end

  # source://net-imap//lib/net/imap/authenticators.rb#18
  def authenticator(*_arg0, **_arg1, &_arg2); end
end

# source://net-imap//lib/net/imap/response_data.rb#813
module Net::IMAP::BodyStructure; end

# source://net-imap//lib/net/imap/response_data.rb#1077
class Net::IMAP::BodyTypeAttachment < ::Struct
  # source://net-imap//lib/net/imap/response_data.rb#1079
  def media_type; end

  # source://net-imap//lib/net/imap/response_data.rb#1107
  def multipart?; end

  # source://net-imap//lib/net/imap/response_data.rb#1087
  def subtype; end
end

# source://net-imap//lib/net/imap/response_data.rb#830
class Net::IMAP::BodyTypeBasic < ::Struct
  include ::Net::IMAP::BodyStructure

  # source://net-imap//lib/net/imap/response_data.rb#941
  def media_subtype; end

  # source://net-imap//lib/net/imap/response_data.rb#927
  def multipart?; end
end

# source://net-imap//lib/net/imap/response_data.rb#1201
class Net::IMAP::BodyTypeExtension < ::Struct
  # source://net-imap//lib/net/imap/response_data.rb#1202
  def multipart?; end
end

# source://net-imap//lib/net/imap/response_data.rb#1011
class Net::IMAP::BodyTypeMessage < ::Struct
  include ::Net::IMAP::BodyStructure

  # source://net-imap//lib/net/imap/response_data.rb#1037
  def media_subtype; end

  # source://net-imap//lib/net/imap/response_data.rb#1030
  def multipart?; end
end

# source://net-imap//lib/net/imap/response_data.rb#1120
class Net::IMAP::BodyTypeMultipart < ::Struct
  include ::Net::IMAP::BodyStructure

  # source://net-imap//lib/net/imap/response_data.rb#1184
  def media_subtype; end

  # source://net-imap//lib/net/imap/response_data.rb#1176
  def multipart?; end
end

# source://net-imap//lib/net/imap/response_data.rb#966
class Net::IMAP::BodyTypeText < ::Struct
  include ::Net::IMAP::BodyStructure

  # source://net-imap//lib/net/imap/response_data.rb#986
  def media_subtype; end

  # source://net-imap//lib/net/imap/response_data.rb#979
  def multipart?; end
end

# source://net-imap//lib/net/imap/command_data.rb#238
class Net::IMAP::ClientID
  # source://net-imap//lib/net/imap/command_data.rb#250
  def initialize(data); end

  # source://net-imap//lib/net/imap/command_data.rb#240
  def send_data(imap, tag); end

  # source://net-imap//lib/net/imap/command_data.rb#244
  def validate; end

  private

  # source://net-imap//lib/net/imap/command_data.rb#264
  def format_internal(client_id); end

  # source://net-imap//lib/net/imap/command_data.rb#254
  def validate_internal(client_id); end
end

# source://net-imap//lib/net/imap/config/attr_accessors.rb#7
class Net::IMAP::Config
  include ::Net::IMAP::Config::AttrAccessors
  include ::Net::IMAP::Config::AttrInheritance
  include ::Net::IMAP::Config::AttrTypeCoercion
  extend ::Net::IMAP::Config::AttrAccessors::Macros
  extend ::Net::IMAP::Config::AttrInheritance::Macros
  extend ::Net::IMAP::Config::AttrTypeCoercion::Macros

  # source://net-imap//lib/net/imap/config.rb#236
  def initialize(parent = T.unsafe(nil), **attrs); end

  # source://net-imap//lib/net/imap/config.rb#287
  def load_defaults(version); end

  # source://net-imap//lib/net/imap/config.rb#296
  def to_h; end

  # source://net-imap//lib/net/imap/config.rb#252
  def update(**attrs); end

  # source://net-imap//lib/net/imap/config.rb#270
  def with(**attrs); end

  protected

  # source://net-imap//lib/net/imap/config.rb#300
  def defaults_hash; end

  class << self
    # source://net-imap//lib/net/imap/config.rb#151
    def [](config); end

    # source://net-imap//lib/net/imap/config.rb#126
    def default; end

    # source://net-imap//lib/net/imap/config.rb#129
    def global; end

    # source://net-imap//lib/net/imap/config.rb#132
    def version_defaults; end
  end
end

# source://net-imap//lib/net/imap/config/attr_accessors.rb#15
module Net::IMAP::Config::AttrAccessors
  extend ::Forwardable

  mixes_in_class_methods ::Net::IMAP::Config::AttrAccessors::Macros

  # source://net-imap//lib/net/imap/config/attr_accessors.rb#45
  def initialize; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def debug(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def debug=(*args, **_arg1, &block); end

  # source://net-imap//lib/net/imap/config/attr_accessors.rb#51
  def freeze; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def idle_response_timeout(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def idle_response_timeout=(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def open_timeout(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def open_timeout=(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def responses_without_block(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def responses_without_block=(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def sasl_ir(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def sasl_ir=(*args, **_arg1, &block); end

  protected

  # source://net-imap//lib/net/imap/config/attr_accessors.rb#58
  def data; end

  private

  # source://net-imap//lib/net/imap/config/attr_accessors.rb#62
  def initialize_clone(other); end

  # source://net-imap//lib/net/imap/config/attr_accessors.rb#67
  def initialize_dup(other); end

  class << self
    # source://net-imap//lib/net/imap/config/attr_accessors.rb#28
    def attr_accessor(name); end

    # source://net-imap//lib/net/imap/config/attr_accessors.rb#38
    def struct; end

    private

    # source://net-imap//lib/net/imap/config/attr_accessors.rb#33
    def attributes; end

    # source://net-imap//lib/net/imap/config/attr_accessors.rb#21
    def included(mod); end
  end
end

# source://net-imap//lib/net/imap/config/attr_accessors.rb#16
module Net::IMAP::Config::AttrAccessors::Macros
  # source://net-imap//lib/net/imap/config/attr_accessors.rb#17
  def attr_accessor(name); end
end

# source://net-imap//lib/net/imap/config.rb#0
class Net::IMAP::Config::AttrAccessors::Struct < ::Struct
  def debug; end
  def debug=(_); end
  def idle_response_timeout; end
  def idle_response_timeout=(_); end
  def open_timeout; end
  def open_timeout=(_); end
  def responses_without_block; end
  def responses_without_block=(_); end
  def sasl_ir; end
  def sasl_ir=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://net-imap//lib/net/imap/config/attr_inheritance.rb#25
module Net::IMAP::Config::AttrInheritance
  mixes_in_class_methods ::Net::IMAP::Config::AttrInheritance::Macros

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#48
  def initialize(parent = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#41
  def debug; end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#41
  def idle_response_timeout; end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#59
  def inherited?(attr); end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#55
  def new(**attrs); end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#41
  def open_timeout; end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#46
  def parent; end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#68
  def reset(attr = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#41
  def responses_without_block; end

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#41
  def sasl_ir; end

  private

  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#82
  def initialize_copy(other); end

  class << self
    # source://net-imap//lib/net/imap/config/attr_inheritance.rb#39
    def attr_accessor(name); end

    private

    # source://net-imap//lib/net/imap/config/attr_inheritance.rb#34
    def included(mod); end
  end
end

# source://net-imap//lib/net/imap/config/attr_inheritance.rb#26
module Net::IMAP::Config::AttrInheritance::INHERITED; end

# source://net-imap//lib/net/imap/config/attr_inheritance.rb#29
module Net::IMAP::Config::AttrInheritance::Macros
  # source://net-imap//lib/net/imap/config/attr_inheritance.rb#30
  def attr_accessor(name); end
end

# source://net-imap//lib/net/imap/config/attr_type_coercion.rb#13
module Net::IMAP::Config::AttrTypeCoercion
  mixes_in_class_methods ::Net::IMAP::Config::AttrTypeCoercion::Macros

  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#39
  def debug=(val); end

  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#40
  def debug?; end

  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#44
  def idle_response_timeout=(val); end

  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#44
  def open_timeout=(val); end

  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#50
  def responses_without_block=(val); end

  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#39
  def sasl_ir=(val); end

  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#40
  def sasl_ir?; end

  class << self
    # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#29
    def attr_accessor(attr, type: T.unsafe(nil)); end

    # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#38
    def boolean(attr); end

    # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#47
    def enum(attr, enum); end

    # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#43
    def integer(attr); end

    private

    # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#24
    def included(mod); end
  end
end

# source://net-imap//lib/net/imap/config/attr_type_coercion.rb#16
module Net::IMAP::Config::AttrTypeCoercion::Macros
  # source://net-imap//lib/net/imap/config/attr_type_coercion.rb#17
  def attr_accessor(attr, type: T.unsafe(nil)); end
end

# source://net-imap//lib/net/imap/config.rb#122
Net::IMAP::Config::DEFAULT_TO_INHERIT = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/flags.rb#232
Net::IMAP::DRAFTS = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/deprecated_client_options.rb#7
module Net::IMAP::DeprecatedClientOptions
  # source://net-imap//lib/net/imap/deprecated_client_options.rb#72
  def initialize(host, port_or_options = T.unsafe(nil), *deprecated, **options); end

  # source://net-imap//lib/net/imap/deprecated_client_options.rb#104
  def starttls(*deprecated, **options); end

  private

  # source://net-imap//lib/net/imap/deprecated_client_options.rb#123
  def create_ssl_params(certs = T.unsafe(nil), verify = T.unsafe(nil)); end
end

# source://net-imap//lib/net/imap.rb#723
Net::IMAP::ENABLE_ALIASES = T.let(T.unsafe(nil), Hash)

# source://net-imap//lib/net/imap/response_data.rb#120
class Net::IMAP::ExtensionData < ::Struct; end

# source://net-imap//lib/net/imap/fetch_data.rb#106
class Net::IMAP::FetchData < ::Struct
  # source://net-imap//lib/net/imap/fetch_data.rb#136
  def attr_upcase; end

  # source://net-imap//lib/net/imap/fetch_data.rb#430
  def binary(*part_nums, offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#451
  def binary_size(*part_nums); end

  # source://net-imap//lib/net/imap/fetch_data.rb#148
  def body; end

  # source://net-imap//lib/net/imap/fetch_data.rb#310
  def body_structure; end

  # source://net-imap//lib/net/imap/fetch_data.rb#310
  def bodystructure; end

  # source://net-imap//lib/net/imap/fetch_data.rb#484
  def emailid; end

  # source://net-imap//lib/net/imap/fetch_data.rb#321
  def envelope; end

  # source://net-imap//lib/net/imap/fetch_data.rb#334
  def flags; end

  # source://net-imap//lib/net/imap/fetch_data.rb#234
  def header(*part_nums, fields: T.unsafe(nil), except: T.unsafe(nil), offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#252
  def header_fields(first, *rest, part: T.unsafe(nil), offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#260
  def header_fields_not(first, *rest, part: T.unsafe(nil), offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#349
  def internal_date; end

  # source://net-imap//lib/net/imap/fetch_data.rb#349
  def internaldate; end

  # source://net-imap//lib/net/imap/fetch_data.rb#164
  def message(offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#278
  def mime(part, *subparts, offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#467
  def modseq; end

  # source://net-imap//lib/net/imap/fetch_data.rb#186
  def part(index, *subparts, offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#362
  def rfc822; end

  # source://net-imap//lib/net/imap/fetch_data.rb#392
  def rfc822_header; end

  # source://net-imap//lib/net/imap/fetch_data.rb#381
  def rfc822_size; end

  # source://net-imap//lib/net/imap/fetch_data.rb#403
  def rfc822_text; end

  # source://net-imap//lib/net/imap/fetch_data.rb#381
  def size; end

  # source://net-imap//lib/net/imap/fetch_data.rb#299
  def text(*part, offset: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/fetch_data.rb#501
  def threadid; end

  # source://net-imap//lib/net/imap/fetch_data.rb#410
  def uid; end

  private

  # source://net-imap//lib/net/imap/fetch_data.rb#505
  def body_section_attr(*_arg0, **_arg1, &_arg2); end

  # source://net-imap//lib/net/imap/fetch_data.rb#507
  def section_attr(attr, part = T.unsafe(nil), text = T.unsafe(nil), offset: T.unsafe(nil)); end
end

# source://net-imap//lib/net/imap/flags.rb#183
Net::IMAP::HASCHILDREN = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/flags.rb#185
Net::IMAP::HASNOCHILDREN = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/flags.rb#136
Net::IMAP::HAS_CHILDREN = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/flags.rb#149
Net::IMAP::HAS_NO_CHILDREN = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/response_data.rb#65
class Net::IMAP::IgnoredResponse < ::Net::IMAP::UntaggedResponse; end

# source://net-imap//lib/net/imap/errors.rb#60
class Net::IMAP::InvalidResponseError < ::Net::IMAP::Error; end

# source://net-imap//lib/net/imap/flags.rb#242
Net::IMAP::JUNK = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/command_data.rb#167
class Net::IMAP::Literal
  # source://net-imap//lib/net/imap/command_data.rb#177
  def initialize(data); end

  # source://net-imap//lib/net/imap/command_data.rb#168
  def send_data(imap, tag); end

  # source://net-imap//lib/net/imap/command_data.rb#172
  def validate; end
end

# source://net-imap//lib/net/imap/command_data.rb#182
class Net::IMAP::MessageSet
  # source://net-imap//lib/net/imap/command_data.rb#193
  def initialize(data); end

  # source://net-imap//lib/net/imap/command_data.rb#183
  def send_data(imap, tag); end

  # source://net-imap//lib/net/imap/command_data.rb#187
  def validate; end

  private

  # source://net-imap//lib/net/imap/command_data.rb#197
  def format_internal(data); end

  # source://net-imap//lib/net/imap/command_data.rb#218
  def validate_internal(data); end
end

# source://net-imap//lib/net/imap/flags.rb#105
Net::IMAP::NONEXISTENT = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/flags.rb#113
Net::IMAP::NO_INFERIORS = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/flags.rb#117
Net::IMAP::NO_SELECT = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/response_data.rb#496
class Net::IMAP::Namespace < ::Struct; end

# source://net-imap//lib/net/imap/response_data.rb#522
class Net::IMAP::Namespaces < ::Struct; end

# source://net-imap//lib/net/imap/data_encoding.rb#157
module Net::IMAP::NumValidator
  private

  # source://net-imap//lib/net/imap/data_encoding.rb#204
  def ensure_mod_sequence_value(num); end

  # source://net-imap//lib/net/imap/data_encoding.rb#188
  def ensure_number(num); end

  # source://net-imap//lib/net/imap/data_encoding.rb#196
  def ensure_nz_number(num); end

  # source://net-imap//lib/net/imap/data_encoding.rb#179
  def valid_mod_sequence_value?(num); end

  # source://net-imap//lib/net/imap/data_encoding.rb#161
  def valid_number?(num); end

  # source://net-imap//lib/net/imap/data_encoding.rb#170
  def valid_nz_number?(num); end

  class << self
    # source://net-imap//lib/net/imap/data_encoding.rb#204
    def ensure_mod_sequence_value(num); end

    # source://net-imap//lib/net/imap/data_encoding.rb#188
    def ensure_number(num); end

    # source://net-imap//lib/net/imap/data_encoding.rb#196
    def ensure_nz_number(num); end

    # source://net-imap//lib/net/imap/data_encoding.rb#179
    def valid_mod_sequence_value?(num); end

    # source://net-imap//lib/net/imap/data_encoding.rb#161
    def valid_number?(num); end

    # source://net-imap//lib/net/imap/data_encoding.rb#170
    def valid_nz_number?(num); end
  end
end

# source://net-imap//lib/net/imap/command_data.rb#152
class Net::IMAP::QuotedString
  # source://net-imap//lib/net/imap/command_data.rb#162
  def initialize(data); end

  # source://net-imap//lib/net/imap/command_data.rb#153
  def send_data(imap, tag); end

  # source://net-imap//lib/net/imap/command_data.rb#157
  def validate; end
end

# source://net-imap//lib/net/imap/flags.rb#176
Net::IMAP::REMOTE = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/errors.rb#74
Net::IMAP::RESPONSE_ERRORS = T.let(T.unsafe(nil), Hash)

# source://net-imap//lib/net/imap/command_data.rb#122
class Net::IMAP::RawData
  # source://net-imap//lib/net/imap/command_data.rb#132
  def initialize(data); end

  # source://net-imap//lib/net/imap/command_data.rb#123
  def send_data(imap, tag); end

  # source://net-imap//lib/net/imap/command_data.rb#127
  def validate; end
end

# source://net-imap//lib/net/imap/errors.rb#20
class Net::IMAP::ResponseError < ::Net::IMAP::Error
  # source://net-imap//lib/net/imap/errors.rb#25
  def initialize(response); end

  # source://net-imap//lib/net/imap/errors.rb#23
  def response; end

  # source://net-imap//lib/net/imap/errors.rb#23
  def response=(_arg0); end
end

# source://net-imap//lib/net/imap/response_parser/parser_utils.rb#5
class Net::IMAP::ResponseParser
  include ::Net::IMAP::ResponseParser::ParserUtils
  include ::Net::IMAP::ResponseParser::ResponseConditions
  extend ::Net::IMAP::ResponseParser::ParserUtils::Generator

  # source://net-imap//lib/net/imap/response_parser.rb#17
  def initialize(config: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def CRLF!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def CRLF?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def EOF!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def EOF?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def NIL!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def NIL?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#46
  def PLUS!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def PLUS?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#46
  def SP!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def SP?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#46
  def STAR!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def STAR?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def body_fld_enc; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def body_fld_lines; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def body_fld_octets; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def case_insensitive__string; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def case_insensitive__string?; end

  # source://net-imap//lib/net/imap/response_parser.rb#14
  def config; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def date_time; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#46
  def lbra; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def lbra?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_CRLF!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_EOF!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_NIL!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_PLUS?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_SP?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_STAR?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_body?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_case_insensitive__string!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_lbra?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_lpar?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_number!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_quoted!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_rbra?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_rpar?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_string!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_string8!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#86
  def lookahead_tagged_ext_label!; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_thread_list?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#25
  def lookahead_thread_nested?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#46
  def lpar; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def lpar?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def media_subtype; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def mod_sequence_value; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def mod_sequence_valzer; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def number; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def number64; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def number64?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def number?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def nz_number; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def nz_number64; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def nz_number?; end

  # source://net-imap//lib/net/imap/response_parser.rb#31
  def parse(str); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#30
  def peek_PLUS?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#30
  def peek_SP?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#30
  def peek_STAR?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#30
  def peek_lbra?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#30
  def peek_lpar?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#30
  def peek_rbra?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#30
  def peek_rpar?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def permsg_modsequence; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def quirky_SP?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def quoted; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def quoted?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#46
  def rbra; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def rbra?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#46
  def rpar; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#35
  def rpar?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def string; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def string8; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def string8?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def string?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def tagged_ext_label; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#96
  def tagged_ext_label?; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def uniqueid; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#104
  def x_gm_id; end

  private

  # source://net-imap//lib/net/imap/response_parser.rb#2027
  def accept_spaces; end

  # source://net-imap//lib/net/imap/response_parser.rb#1428
  def acl_data; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def addr_adl; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def addr_host; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def addr_mailbox; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def addr_name; end

  # source://net-imap//lib/net/imap/response_parser.rb#1896
  def address; end

  # source://net-imap//lib/net/imap/response_parser.rb#506
  def astring; end

  # source://net-imap//lib/net/imap/response_parser.rb#510
  def astring?; end

  # source://net-imap//lib/net/imap/response_parser.rb#491
  def astring_chars; end

  # source://net-imap//lib/net/imap/response_parser.rb#490
  def atom; end

  # source://net-imap//lib/net/imap/response_parser.rb#495
  def atom?; end

  # source://net-imap//lib/net/imap/response_parser.rb#1012
  def body; end

  # source://net-imap//lib/net/imap/response_parser.rb#1184
  def body_ext_1part; end

  # source://net-imap//lib/net/imap/response_parser.rb#1203
  def body_ext_mpart; end

  # source://net-imap//lib/net/imap/response_parser.rb#1260
  def body_extension; end

  # source://net-imap//lib/net/imap/response_parser.rb#1246
  def body_extensions; end

  # source://net-imap//lib/net/imap/response_parser.rb#1148
  def body_fields; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def body_fld_desc; end

  # source://net-imap//lib/net/imap/response_parser.rb#1225
  def body_fld_dsp; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def body_fld_id; end

  # source://net-imap//lib/net/imap/response_parser.rb#1234
  def body_fld_lang; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def body_fld_loc; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def body_fld_md5; end

  # source://net-imap//lib/net/imap/response_parser.rb#1160
  def body_fld_param; end

  # source://net-imap//lib/net/imap/response_parser.rb#1024
  def body_type_1part; end

  # source://net-imap//lib/net/imap/response_parser.rb#1048
  def body_type_basic; end

  # source://net-imap//lib/net/imap/response_parser.rb#1097
  def body_type_mixed; end

  # source://net-imap//lib/net/imap/response_parser.rb#1107
  def body_type_mpart; end

  # source://net-imap//lib/net/imap/response_parser.rb#1069
  def body_type_msg; end

  # source://net-imap//lib/net/imap/response_parser.rb#1058
  def body_type_text; end

  # source://net-imap//lib/net/imap/response_parser.rb#498
  def capability; end

  # source://net-imap//lib/net/imap/response_parser.rb#501
  def capability?; end

  # source://net-imap//lib/net/imap/response_parser.rb#1631
  def capability__list; end

  # source://net-imap//lib/net/imap/response_parser.rb#1620
  def capability_data__untagged; end

  # source://net-imap//lib/net/imap/response_parser.rb#498
  def case_insensitive__atom; end

  # source://net-imap//lib/net/imap/response_parser.rb#501
  def case_insensitive__atom?; end

  # source://net-imap//lib/net/imap/response_parser.rb#559
  def case_insensitive__nstring; end

  # source://net-imap//lib/net/imap/response_parser.rb#1967
  def charset; end

  # source://net-imap//lib/net/imap/response_parser.rb#1850
  def charset__list; end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def comparator_data(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#676
  def continue_req; end

  # source://net-imap//lib/net/imap/response_parser.rb#1625
  def enable_data; end

  # source://net-imap//lib/net/imap/response_parser.rb#986
  def env_bcc; end

  # source://net-imap//lib/net/imap/response_parser.rb#986
  def env_cc; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def env_date; end

  # source://net-imap//lib/net/imap/response_parser.rb#986
  def env_from; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def env_in_reply_to; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def env_message_id; end

  # source://net-imap//lib/net/imap/response_parser.rb#986
  def env_reply_to; end

  # source://net-imap//lib/net/imap/response_parser.rb#986
  def env_sender; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def env_subject; end

  # source://net-imap//lib/net/imap/response_parser.rb#986
  def env_to; end

  # source://net-imap//lib/net/imap/response_parser.rb#952
  def envelope; end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def esearch_response(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def expunged_resp(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#1917
  def flag_list; end

  # source://net-imap//lib/net/imap/response_parser.rb#1927
  def flag_perm__list; end

  # source://net-imap//lib/net/imap/response_parser.rb#490
  def gt__number__lt; end

  # source://net-imap//lib/net/imap/response_parser.rb#1338
  def header_fld_name; end

  # source://net-imap//lib/net/imap/response_parser.rb#1304
  def header_list; end

  # source://net-imap//lib/net/imap/response_parser.rb#1644
  def id_response; end

  # source://net-imap//lib/net/imap/response_parser.rb#516
  def label(word); end

  # source://net-imap//lib/net/imap/response_parser.rb#523
  def label_in(*labels); end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def language_data(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def listrights_data(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#506
  def mailbox; end

  # source://net-imap//lib/net/imap/response_parser.rb#835
  def mailbox_data__exists; end

  # source://net-imap//lib/net/imap/response_parser.rb#1350
  def mailbox_data__flags; end

  # source://net-imap//lib/net/imap/response_parser.rb#1356
  def mailbox_data__list; end

  # source://net-imap//lib/net/imap/response_parser.rb#1356
  def mailbox_data__lsub; end

  # source://net-imap//lib/net/imap/response_parser.rb#835
  def mailbox_data__recent; end

  # source://net-imap//lib/net/imap/response_parser.rb#1468
  def mailbox_data__search; end

  # source://net-imap//lib/net/imap/response_parser.rb#1534
  def mailbox_data__status; end

  # source://net-imap//lib/net/imap/response_parser.rb#1356
  def mailbox_data__xlist; end

  # source://net-imap//lib/net/imap/response_parser.rb#1369
  def mailbox_list; end

  # source://net-imap//lib/net/imap/response_parser.rb#1945
  def mbx_list_flags; end

  # source://net-imap//lib/net/imap/response_parser.rb#1131
  def media_basic; end

  # source://net-imap//lib/net/imap/response_parser.rb#1131
  def media_message; end

  # source://net-imap//lib/net/imap/response_parser.rb#1131
  def media_text; end

  # source://net-imap//lib/net/imap/response_parser.rb#1131
  def media_type; end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def message_data__converted(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#835
  def message_data__expunge; end

  # source://net-imap//lib/net/imap/response_parser.rb#828
  def message_data__fetch; end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def metadata_resp(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#892
  def msg_att(n); end

  # source://net-imap//lib/net/imap/response_parser.rb#929
  def msg_att__label; end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def myrights_data(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#1691
  def namespace; end

  # source://net-imap//lib/net/imap/response_parser.rb#1702
  def namespace_descr; end

  # source://net-imap//lib/net/imap/response_parser.rb#1679
  def namespace_response; end

  # source://net-imap//lib/net/imap/response_parser.rb#1714
  def namespace_response_extensions; end

  # source://net-imap//lib/net/imap/response_parser.rb#554
  def ndatetime; end

  # source://net-imap//lib/net/imap/response_parser.rb#2034
  def next_token; end

  # source://net-imap//lib/net/imap/response_parser.rb#2016
  def nil_atom; end

  # source://net-imap//lib/net/imap/response_parser.rb#986
  def nlist__address; end

  # source://net-imap//lib/net/imap/response_parser.rb#1994
  def nparens__objectid; end

  # source://net-imap//lib/net/imap/response_parser.rb#554
  def nquoted; end

  # source://net-imap//lib/net/imap/response_parser.rb#546
  def nstring; end

  # source://net-imap//lib/net/imap/response_parser.rb#550
  def nstring8; end

  # source://net-imap//lib/net/imap/response_parser.rb#490
  def objectid; end

  # source://net-imap//lib/net/imap/response_parser.rb#1985
  def parens__modseq; end

  # source://net-imap//lib/net/imap/response_parser.rb#1993
  def parens__objectid; end

  # source://net-imap//lib/net/imap/response_parser.rb#1938
  def quirky__flag_list(name); end

  # source://net-imap//lib/net/imap/response_parser.rb#1377
  def quota_response; end

  # source://net-imap//lib/net/imap/response_parser.rb#1410
  def quotaroot_response; end

  # source://net-imap//lib/net/imap/response_parser.rb#764
  def remaining_unparsed; end

  # source://net-imap//lib/net/imap/response_parser.rb#1631
  def resp_code__capability; end

  # source://net-imap//lib/net/imap/response_parser.rb#1866
  def resp_code_apnd__data; end

  # source://net-imap//lib/net/imap/response_parser.rb#1875
  def resp_code_copy__data; end

  # source://net-imap//lib/net/imap/response_parser.rb#809
  def resp_cond_auth; end

  # source://net-imap//lib/net/imap/response_parser.rb#530
  def resp_cond_auth__name; end

  # source://net-imap//lib/net/imap/response_parser.rb#821
  def resp_cond_bye; end

  # source://net-imap//lib/net/imap/response_parser.rb#795
  def resp_cond_state; end

  # source://net-imap//lib/net/imap/response_parser.rb#538
  def resp_cond_state__name; end

  # source://net-imap//lib/net/imap/response_parser.rb#799
  def resp_cond_state__untagged; end

  # source://net-imap//lib/net/imap/response_parser.rb#1750
  def resp_text; end

  # source://net-imap//lib/net/imap/response_parser.rb#1814
  def resp_text_code; end

  # source://net-imap//lib/net/imap/response_parser.rb#498
  def resp_text_code__name; end

  # source://net-imap//lib/net/imap/response_parser.rb#657
  def response; end

  # source://net-imap//lib/net/imap/response_parser.rb#709
  def response_data; end

  # source://net-imap//lib/net/imap/response_parser.rb#769
  def response_data__ignored; end

  # source://net-imap//lib/net/imap/response_parser.rb#769
  def response_data__noop; end

  # source://net-imap//lib/net/imap/response_parser.rb#835
  def response_data__simple_numeric; end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def response_data__unhandled(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#784
  def response_tagged; end

  # source://net-imap//lib/net/imap/response_parser.rb#1268
  def section; end

  # source://net-imap//lib/net/imap/response_parser.rb#1275
  def section_binary; end

  # source://net-imap//lib/net/imap/response_parser.rb#490
  def section_part; end

  # source://net-imap//lib/net/imap/response_parser.rb#1296
  def section_spec; end

  # source://net-imap//lib/net/imap/response_parser.rb#471
  def sequence_set; end

  # source://net-imap//lib/net/imap/response_parser.rb#1468
  def sort_data; end

  # source://net-imap//lib/net/imap/response_parser.rb#1545
  def status_att_list; end

  # source://net-imap//lib/net/imap/response_parser.rb#1590
  def status_att_val; end

  # source://net-imap//lib/net/imap/response_parser.rb#492
  def tag; end

  # source://net-imap//lib/net/imap/response_parser.rb#574
  def tagged_ext_comp; end

  # source://net-imap//lib/net/imap/response_parser.rb#591
  def tagged_ext_simple; end

  # source://net-imap//lib/net/imap/response_parser.rb#597
  def tagged_ext_val; end

  # source://net-imap//lib/net/imap/response_parser.rb#1734
  def text; end

  # source://net-imap//lib/net/imap/response_parser.rb#1739
  def text?; end

  # source://net-imap//lib/net/imap/response_parser.rb#1845
  def text_chars_except_rbra; end

  # source://net-imap//lib/net/imap/response_parser.rb#1484
  def thread_data; end

  # source://net-imap//lib/net/imap/response_parser.rb#1498
  def thread_list; end

  # source://net-imap//lib/net/imap/response_parser.rb#1511
  def thread_members; end

  # source://net-imap//lib/net/imap/response_parser.rb#1527
  def thread_nested; end

  # source://net-imap//lib/net/imap/response_parser.rb#2004
  def uid_set; end

  # source://net-imap//lib/net/imap/response_parser.rb#751
  def uidfetch_resp(klass = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/response_parser.rb#1952
  def x_gm_label; end

  # source://net-imap//lib/net/imap/response_parser.rb#1955
  def x_gm_labels; end
end

# source://net-imap//lib/net/imap/response_parser.rb#482
Net::IMAP::ResponseParser::ASTRING_CHARS_TOKENS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#484
Net::IMAP::ResponseParser::ASTRING_TOKENS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser/parser_utils.rb#9
module Net::IMAP::ResponseParser::ParserUtils
  private

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#148
  def accept(*args); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#193
  def accept_re(re); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#158
  def assert_no_lookahead; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#121
  def combine_adjacent(*tokens); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#169
  def lookahead; end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#174
  def lookahead!(*args); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#165
  def lookahead?(*symbols); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#133
  def match(*args); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#199
  def match_re(re, name); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#213
  def parse_error(fmt, *args); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#188
  def peek_re(re); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#183
  def peek_str?(str); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#209
  def shift_token; end
end

# source://net-imap//lib/net/imap/response_parser/parser_utils.rb#11
module Net::IMAP::ResponseParser::ParserUtils::Generator
  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#17
  def def_char_matchers(name, char, token); end

  # source://net-imap//lib/net/imap/response_parser/parser_utils.rb#62
  def def_token_matchers(name, *token_symbols, coerce: T.unsafe(nil), send: T.unsafe(nil)); end
end

# source://net-imap//lib/net/imap/response_parser/parser_utils.rb#13
Net::IMAP::ResponseParser::ParserUtils::Generator::LOOKAHEAD = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/response_parser/parser_utils.rb#14
Net::IMAP::ResponseParser::ParserUtils::Generator::SHIFT_TOKEN = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/response_parser.rb#80
module Net::IMAP::ResponseParser::Patterns
  include ::Net::IMAP::ResponseParser::Patterns::RFC5234
  include ::Net::IMAP::ResponseParser::Patterns::RFC3629

  private

  # source://net-imap//lib/net/imap/response_parser.rb#355
  def unescape_quoted(quoted); end

  # source://net-imap//lib/net/imap/response_parser.rb#349
  def unescape_quoted!(quoted); end

  class << self
    # source://net-imap//lib/net/imap/response_parser.rb#355
    def unescape_quoted(quoted); end

    # source://net-imap//lib/net/imap/response_parser.rb#349
    def unescape_quoted!(quoted); end
  end
end

# source://net-imap//lib/net/imap/response_parser.rb#177
Net::IMAP::ResponseParser::Patterns::ASTRING_CHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#181
Net::IMAP::ResponseParser::Patterns::ASTRING_CHARS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#175
Net::IMAP::ResponseParser::Patterns::ASTRING_SPECIALS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#180
Net::IMAP::ResponseParser::Patterns::ATOM = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#182
Net::IMAP::ResponseParser::Patterns::ATOMISH = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#178
Net::IMAP::ResponseParser::Patterns::ATOM_CHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#174
Net::IMAP::ResponseParser::Patterns::ATOM_SPECIALS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#154
Net::IMAP::ResponseParser::Patterns::CHAR8 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#190
Net::IMAP::ResponseParser::Patterns::CODE_TEXT = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#189
Net::IMAP::ResponseParser::Patterns::CODE_TEXT_CHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#82
module Net::IMAP::ResponseParser::Patterns::CharClassSubtraction; end

# source://net-imap//lib/net/imap/response_parser.rb#220
Net::IMAP::ResponseParser::Patterns::FLAG = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#221
Net::IMAP::ResponseParser::Patterns::FLAG_EXTENSION = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#222
Net::IMAP::ResponseParser::Patterns::FLAG_KEYWORD = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#233
Net::IMAP::ResponseParser::Patterns::FLAG_LIST = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#223
Net::IMAP::ResponseParser::Patterns::FLAG_PERM = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#234
Net::IMAP::ResponseParser::Patterns::FLAG_PERM_LIST = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#157
Net::IMAP::ResponseParser::Patterns::LIST_WILDCARDS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#335
Net::IMAP::ResponseParser::Patterns::LITERAL = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#345
Net::IMAP::ResponseParser::Patterns::LITERAL8 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#224
Net::IMAP::ResponseParser::Patterns::MBX_FLAG = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#235
Net::IMAP::ResponseParser::Patterns::MBX_LIST_FLAGS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#277
Net::IMAP::ResponseParser::Patterns::NZ_NUMBER = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#238
Net::IMAP::ResponseParser::Patterns::QUIRKY_FLAG = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#239
Net::IMAP::ResponseParser::Patterns::QUIRKY_FLAGS_LIST = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#250
Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_esc = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#251
Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_rev1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#252
Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_rev2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#249
Net::IMAP::ResponseParser::Patterns::QUOTED_CHAR_safe = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#159
Net::IMAP::ResponseParser::Patterns::QUOTED_SPECIALS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#254
Net::IMAP::ResponseParser::Patterns::QUOTED_rev1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#255
Net::IMAP::ResponseParser::Patterns::QUOTED_rev2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#161
Net::IMAP::ResponseParser::Patterns::RESP_SPECIALS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#134
module Net::IMAP::ResponseParser::Patterns::RFC3629; end

# source://net-imap//lib/net/imap/response_parser.rb#135
Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#137
Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#138
Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_3 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#142
Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_4 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#145
Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_CHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#146
Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_OCTETS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#136
Net::IMAP::ResponseParser::Patterns::RFC3629::UTF8_TAIL = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#104
module Net::IMAP::ResponseParser::Patterns::RFC5234; end

# source://net-imap//lib/net/imap/response_parser.rb#105
Net::IMAP::ResponseParser::Patterns::RFC5234::ALPHA = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#106
Net::IMAP::ResponseParser::Patterns::RFC5234::CHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#107
Net::IMAP::ResponseParser::Patterns::RFC5234::CRLF = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#108
Net::IMAP::ResponseParser::Patterns::RFC5234::CTL = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#109
Net::IMAP::ResponseParser::Patterns::RFC5234::DIGIT = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#110
Net::IMAP::ResponseParser::Patterns::RFC5234::DQUOTE = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#111
Net::IMAP::ResponseParser::Patterns::RFC5234::HEXDIG = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#112
Net::IMAP::ResponseParser::Patterns::RFC5234::OCTET = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#113
Net::IMAP::ResponseParser::Patterns::RFC5234::SP = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#321
Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#320
Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET_ITEM = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#322
Net::IMAP::ResponseParser::Patterns::SEQUENCE_SET_STR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#295
Net::IMAP::ResponseParser::Patterns::SEQ_NUMBER = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#306
Net::IMAP::ResponseParser::Patterns::SEQ_RANGE = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#183
Net::IMAP::ResponseParser::Patterns::TAG = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#272
Net::IMAP::ResponseParser::Patterns::TAGGED_EXT_LABEL = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#269
Net::IMAP::ResponseParser::Patterns::TAGGED_LABEL_CHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#267
Net::IMAP::ResponseParser::Patterns::TAGGED_LABEL_FCHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#186
Net::IMAP::ResponseParser::Patterns::TEXT_CHAR = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#263
Net::IMAP::ResponseParser::Patterns::TEXT_rev1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#264
Net::IMAP::ResponseParser::Patterns::TEXT_rev2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#681
Net::IMAP::ResponseParser::RE_RESPONSE_TYPE = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#65
module Net::IMAP::ResponseParser::ResponseConditions; end

# source://net-imap//lib/net/imap/response_parser.rb#74
Net::IMAP::ResponseParser::ResponseConditions::AUTH_CONDS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#68
Net::IMAP::ResponseParser::ResponseConditions::BAD = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/response_parser.rb#69
Net::IMAP::ResponseParser::ResponseConditions::BYE = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/response_parser.rb#75
Net::IMAP::ResponseParser::ResponseConditions::GREETING_CONDS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#67
Net::IMAP::ResponseParser::ResponseConditions::NO = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/response_parser.rb#66
Net::IMAP::ResponseParser::ResponseConditions::OK = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/response_parser.rb#70
Net::IMAP::ResponseParser::ResponseConditions::PREAUTH = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/response_parser.rb#76
Net::IMAP::ResponseParser::ResponseConditions::RESP_CONDS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#72
Net::IMAP::ResponseParser::ResponseConditions::RESP_COND_STATES = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#73
Net::IMAP::ResponseParser::ResponseConditions::RESP_DATA_CONDS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#462
Net::IMAP::ResponseParser::SEQUENCE_SET_TOKENS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#2021
Net::IMAP::ResponseParser::SPACES_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/response_parser.rb#487
Net::IMAP::ResponseParser::TAG_TOKENS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/response_parser.rb#60
Net::IMAP::ResponseParser::T_LITERAL8 = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/response_data.rb#169
Net::IMAP::ResponseText::EMPTY = T.let(T.unsafe(nil), Net::IMAP::ResponseText)

# source://net-imap//lib/net/imap/sasl.rb#90
module Net::IMAP::SASL
  private

  # source://net-imap//lib/net/imap/sasl.rb#173
  def saslprep(string, **opts); end

  class << self
    # source://net-imap//lib/net/imap/sasl.rb#168
    def add_authenticator(*_arg0, **_arg1, &_arg2); end

    # source://net-imap//lib/net/imap/sasl.rb#163
    def authenticator(*args, registry: T.unsafe(nil), **kwargs, &block); end

    # source://net-imap//lib/net/imap/sasl.rb#160
    def authenticators; end

    # source://net-imap//lib/net/imap/sasl.rb#173
    def saslprep(string, **opts); end
  end
end

# source://net-imap//lib/net/imap/sasl/anonymous_authenticator.rb#10
class Net::IMAP::SASL::AnonymousAuthenticator
  # source://net-imap//lib/net/imap/sasl/anonymous_authenticator.rb#37
  def initialize(anon_msg = T.unsafe(nil), anonymous_message: T.unsafe(nil), **_arg2); end

  # source://net-imap//lib/net/imap/sasl/anonymous_authenticator.rb#21
  def anonymous_message; end

  # source://net-imap//lib/net/imap/sasl/anonymous_authenticator.rb#64
  def done?; end

  # source://net-imap//lib/net/imap/sasl/anonymous_authenticator.rb#51
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/anonymous_authenticator.rb#54
  def process(_server_challenge_string); end
end

# source://net-imap//lib/net/imap/sasl.rb#106
class Net::IMAP::SASL::AuthenticationCanceled < ::Net::IMAP::SASL::Error; end

# source://net-imap//lib/net/imap/sasl.rb#111
class Net::IMAP::SASL::AuthenticationError < ::Net::IMAP::SASL::Error; end

# source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#40
class Net::IMAP::SASL::AuthenticationExchange
  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#52
  def initialize(client, mechanism, authenticator, sasl_ir: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#64
  def authenticate; end

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#50
  def authenticator; end

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#85
  def done?; end

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#50
  def mechanism; end

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#77
  def send_initial_response?; end

  private

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#91
  def client; end

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#93
  def initial_response; end

  # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#98
  def process(challenge); end

  class << self
    # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#42
    def authenticate(*_arg0, **_arg1, &_arg2); end

    # source://net-imap//lib/net/imap/sasl/authentication_exchange.rb#45
    def build(client, mechanism, *args, sasl_ir: T.unsafe(nil), **kwargs, &block); end
  end
end

# source://net-imap//lib/net/imap/sasl.rb#115
class Net::IMAP::SASL::AuthenticationFailed < ::Net::IMAP::SASL::Error; end

# source://net-imap//lib/net/imap/sasl.rb#119
class Net::IMAP::SASL::AuthenticationIncomplete < ::Net::IMAP::SASL::AuthenticationFailed
  # source://net-imap//lib/net/imap/sasl.rb#123
  def initialize(response, message = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sasl.rb#121
  def response; end
end

# source://net-imap//lib/net/imap/sasl/authenticators.rb#22
class Net::IMAP::SASL::Authenticators
  # source://net-imap//lib/net/imap/sasl/authenticators.rb#32
  def initialize(use_defaults: T.unsafe(nil), use_deprecated: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sasl/authenticators.rb#67
  def add_authenticator(name, authenticator = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sasl/authenticators.rb#107
  def authenticator(mechanism, *_arg1, **_arg2, &_arg3); end

  # source://net-imap//lib/net/imap/sasl/authenticators.rb#86
  def mechanism?(name); end

  # source://net-imap//lib/net/imap/sasl/authenticators.rb#49
  def names; end

  # source://net-imap//lib/net/imap/sasl/authenticators.rb#107
  def new(mechanism, *_arg1, **_arg2, &_arg3); end

  # source://net-imap//lib/net/imap/sasl/authenticators.rb#81
  def remove_authenticator(name); end
end

# source://net-imap//lib/net/imap/sasl/stringprep.rb#8
Net::IMAP::SASL::BidiStringError = Net::IMAP::StringPrep::BidiStringError

# source://net-imap//lib/net/imap/sasl/client_adapter.rb#19
class Net::IMAP::SASL::ClientAdapter
  include ::Net::IMAP::SASL::ProtocolAdapters::Generic

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#32
  def initialize(client, &command_proc); end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#43
  def auth_capable?(mechanism); end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#37
  def authenticate(*_arg0, **_arg1, &_arg2); end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#22
  def client; end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#22
  def command_proc; end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#65
  def drop_connection; end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#68
  def drop_connection!; end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#62
  def response_errors; end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#54
  def run_command(mechanism, initial_response = T.unsafe(nil), &block); end

  # source://net-imap//lib/net/imap/sasl/client_adapter.rb#40
  def sasl_ir_capable?; end
end

# source://net-imap//lib/net/imap/sasl/cram_md5_authenticator.rb#16
class Net::IMAP::SASL::CramMD5Authenticator
  # source://net-imap//lib/net/imap/sasl/cram_md5_authenticator.rb#17
  def initialize(user = T.unsafe(nil), pass = T.unsafe(nil), authcid: T.unsafe(nil), username: T.unsafe(nil), password: T.unsafe(nil), secret: T.unsafe(nil), warn_deprecation: T.unsafe(nil), **_arg7); end

  # source://net-imap//lib/net/imap/sasl/cram_md5_authenticator.rb#40
  def done?; end

  # source://net-imap//lib/net/imap/sasl/cram_md5_authenticator.rb#31
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/cram_md5_authenticator.rb#33
  def process(challenge); end

  private

  # source://net-imap//lib/net/imap/sasl/cram_md5_authenticator.rb#44
  def hmac_md5(text, key); end
end

# source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#11
class Net::IMAP::SASL::DigestMD5Authenticator
  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#70
  def initialize(user = T.unsafe(nil), pass = T.unsafe(nil), authz = T.unsafe(nil), username: T.unsafe(nil), password: T.unsafe(nil), authzid: T.unsafe(nil), authcid: T.unsafe(nil), secret: T.unsafe(nil), warn_deprecation: T.unsafe(nil), **_arg9); end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#24
  def authcid; end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#43
  def authzid; end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#156
  def done?; end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#88
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#30
  def password; end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#91
  def process(challenge); end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#24
  def username; end

  private

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#160
  def nc(nonce); end

  # source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#170
  def qdval(k, v); end
end

# source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#14
Net::IMAP::SASL::DigestMD5Authenticator::STAGE_DONE = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#12
Net::IMAP::SASL::DigestMD5Authenticator::STAGE_ONE = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/sasl/digest_md5_authenticator.rb#13
Net::IMAP::SASL::DigestMD5Authenticator::STAGE_TWO = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/sasl.rb#102
class Net::IMAP::SASL::Error < ::StandardError; end

# source://net-imap//lib/net/imap/sasl/external_authenticator.rb#13
class Net::IMAP::SASL::ExternalAuthenticator
  # source://net-imap//lib/net/imap/sasl/external_authenticator.rb#52
  def initialize(user = T.unsafe(nil), authzid: T.unsafe(nil), username: T.unsafe(nil), **_arg3); end

  # source://net-imap//lib/net/imap/sasl/external_authenticator.rb#27
  def authzid; end

  # source://net-imap//lib/net/imap/sasl/external_authenticator.rb#78
  def done?; end

  # source://net-imap//lib/net/imap/sasl/external_authenticator.rb#65
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/external_authenticator.rb#68
  def process(_); end

  # source://net-imap//lib/net/imap/sasl/external_authenticator.rb#27
  def username; end
end

# source://net-imap//lib/net/imap/sasl/gs2_header.rb#20
module Net::IMAP::SASL::GS2Header
  # source://net-imap//lib/net/imap/sasl/gs2_header.rb#59
  def gs2_authzid; end

  # source://net-imap//lib/net/imap/sasl/gs2_header.rb#53
  def gs2_cb_flag; end

  # source://net-imap//lib/net/imap/sasl/gs2_header.rb#37
  def gs2_header; end

  private

  # source://net-imap//lib/net/imap/sasl/gs2_header.rb#67
  def gs2_saslname_encode(str); end

  class << self
    # source://net-imap//lib/net/imap/sasl/gs2_header.rb#67
    def gs2_saslname_encode(str); end
  end
end

# source://net-imap//lib/net/imap/sasl/gs2_header.rb#21
Net::IMAP::SASL::GS2Header::NO_NULL_CHARS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/sasl/gs2_header.rb#26
Net::IMAP::SASL::GS2Header::RFC5801_SASLNAME = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/sasl/login_authenticator.rb#20
class Net::IMAP::SASL::LoginAuthenticator
  # source://net-imap//lib/net/imap/sasl/login_authenticator.rb#26
  def initialize(user = T.unsafe(nil), pass = T.unsafe(nil), authcid: T.unsafe(nil), username: T.unsafe(nil), password: T.unsafe(nil), secret: T.unsafe(nil), warn_deprecation: T.unsafe(nil), **_arg7); end

  # source://net-imap//lib/net/imap/sasl/login_authenticator.rb#54
  def done?; end

  # source://net-imap//lib/net/imap/sasl/login_authenticator.rb#39
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/login_authenticator.rb#41
  def process(data); end
end

# source://net-imap//lib/net/imap/sasl/login_authenticator.rb#23
Net::IMAP::SASL::LoginAuthenticator::STATE_DONE = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/sasl/login_authenticator.rb#22
Net::IMAP::SASL::LoginAuthenticator::STATE_PASSWORD = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/sasl/login_authenticator.rb#21
Net::IMAP::SASL::LoginAuthenticator::STATE_USER = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#14
class Net::IMAP::SASL::OAuthAuthenticator
  include ::Net::IMAP::SASL::GS2Header

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#84
  def initialize(authzid: T.unsafe(nil), host: T.unsafe(nil), port: T.unsafe(nil), username: T.unsafe(nil), query: T.unsafe(nil), mthd: T.unsafe(nil), path: T.unsafe(nil), post: T.unsafe(nil), qs: T.unsafe(nil), **_arg9); end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#124
  def authorization; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#29
  def authzid; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#119
  def done?; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#33
  def host; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#99
  def initial_client_response; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#53
  def last_server_response; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#39
  def mthd; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#42
  def path; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#36
  def port; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#45
  def post; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#108
  def process(data); end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#48
  def qs; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#48
  def query; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#29
  def username; end
end

# source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#138
class Net::IMAP::SASL::OAuthBearerAuthenticator < ::Net::IMAP::SASL::OAuthAuthenticator
  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#177
  def initialize(arg1 = T.unsafe(nil), arg2 = T.unsafe(nil), oauth2_token: T.unsafe(nil), secret: T.unsafe(nil), **args, &blk); end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#193
  def authorization; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#190
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#141
  def oauth2_token; end

  # source://net-imap//lib/net/imap/sasl/oauthbearer_authenticator.rb#141
  def secret; end
end

# source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#12
class Net::IMAP::SASL::PlainAuthenticator
  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#67
  def initialize(user = T.unsafe(nil), pass = T.unsafe(nil), authcid: T.unsafe(nil), secret: T.unsafe(nil), username: T.unsafe(nil), password: T.unsafe(nil), authzid: T.unsafe(nil), **_arg7); end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#24
  def authcid; end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#42
  def authzid; end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#99
  def done?; end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#86
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#28
  def password; end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#89
  def process(data); end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#28
  def secret; end

  # source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#24
  def username; end
end

# source://net-imap//lib/net/imap/sasl/plain_authenticator.rb#14
Net::IMAP::SASL::PlainAuthenticator::NULL = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/sasl/stringprep.rb#9
Net::IMAP::SASL::ProhibitedCodepoint = Net::IMAP::StringPrep::ProhibitedCodepoint

# source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#7
module Net::IMAP::SASL::ProtocolAdapters; end

# source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#9
module Net::IMAP::SASL::ProtocolAdapters::Generic
  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#17
  def cancel_response; end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#10
  def command_name; end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#16
  def decode(string); end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#15
  def encode(string); end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#14
  def encode_ir(string); end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#12
  def host; end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#13
  def port; end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#11
  def service; end
end

# source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#22
module Net::IMAP::SASL::ProtocolAdapters::IMAP
  include ::Net::IMAP::SASL::ProtocolAdapters::Generic

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#24
  def service; end
end

# source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#35
module Net::IMAP::SASL::ProtocolAdapters::POP
  include ::Net::IMAP::SASL::ProtocolAdapters::Generic

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#37
  def command_name; end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#38
  def service; end
end

# source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#28
module Net::IMAP::SASL::ProtocolAdapters::SMTP
  include ::Net::IMAP::SASL::ProtocolAdapters::Generic

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#30
  def command_name; end

  # source://net-imap//lib/net/imap/sasl/protocol_adapters.rb#31
  def service; end
end

# source://net-imap//lib/net/imap/sasl/stringprep.rb#6
Net::IMAP::SASL::SASLprep = Net::IMAP::StringPrep::SASLprep

# source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#10
module Net::IMAP::SASL::ScramAlgorithm
  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#24
  def H(str); end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#26
  def HMAC(key, data); end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#13
  def Hi(str, salt, iterations); end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#11
  def Normalize(str); end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#28
  def XOR(str1, str2); end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#35
  def auth_message; end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#48
  def client_key; end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#53
  def client_proof; end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#51
  def client_signature; end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#44
  def salted_password; end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#49
  def server_key; end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#52
  def server_signature; end

  # source://net-imap//lib/net/imap/sasl/scram_algorithm.rb#50
  def stored_key; end
end

# source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#56
class Net::IMAP::SASL::ScramAuthenticator
  include ::Net::IMAP::SASL::GS2Header
  include ::Net::IMAP::SASL::ScramAlgorithm

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#80
  def initialize(username_arg = T.unsafe(nil), password_arg = T.unsafe(nil), authcid: T.unsafe(nil), username: T.unsafe(nil), authzid: T.unsafe(nil), password: T.unsafe(nil), secret: T.unsafe(nil), min_iterations: T.unsafe(nil), cnonce: T.unsafe(nil), **options); end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#107
  def authcid; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#126
  def authzid; end

  # source://net-imap//lib/net/imap/sasl/gs2_header.rb#37
  def cbind_input; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#133
  def cnonce; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#155
  def digest; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#185
  def done?; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#159
  def initial_client_response; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#142
  def iterations; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#130
  def min_iterations; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#111
  def password; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#164
  def process(challenge); end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#139
  def salt; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#111
  def secret; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#148
  def server_error; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#136
  def snonce; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#107
  def username; end

  private

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#240
  def client_final_message_without_proof; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#225
  def client_first_message_bare; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#233
  def final_message_with_proof; end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#192
  def format_message(hash); end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#257
  def parse_challenge(challenge); end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#211
  def recv_server_final_message(server_final_message); end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#194
  def recv_server_first_message(server_first_message); end

  # source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#190
  def server_first_message; end
end

# source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#271
class Net::IMAP::SASL::ScramSHA1Authenticator < ::Net::IMAP::SASL::ScramAuthenticator; end

# source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#272
Net::IMAP::SASL::ScramSHA1Authenticator::DIGEST_NAME = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#281
class Net::IMAP::SASL::ScramSHA256Authenticator < ::Net::IMAP::SASL::ScramAuthenticator; end

# source://net-imap//lib/net/imap/sasl/scram_authenticator.rb#282
Net::IMAP::SASL::ScramSHA256Authenticator::DIGEST_NAME = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/sasl/stringprep.rb#7
Net::IMAP::SASL::StringPrep = Net::IMAP::StringPrep

# source://net-imap//lib/net/imap/sasl/stringprep.rb#10
Net::IMAP::SASL::StringPrepError = Net::IMAP::StringPrep::StringPrepError

# source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#18
class Net::IMAP::SASL::XOAuth2Authenticator
  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#71
  def initialize(user = T.unsafe(nil), token = T.unsafe(nil), username: T.unsafe(nil), oauth2_token: T.unsafe(nil), authzid: T.unsafe(nil), secret: T.unsafe(nil), **_arg6); end

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#35
  def authzid; end

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#98
  def done?; end

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#84
  def initial_response?; end

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#44
  def oauth2_token; end

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#88
  def process(_data); end

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#44
  def secret; end

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#35
  def username; end

  private

  # source://net-imap//lib/net/imap/sasl/xoauth2_authenticator.rb#102
  def build_oauth2_string(username, oauth2_token); end
end

# source://net-imap//lib/net/imap/sasl_adapter.rb#7
class Net::IMAP::SASLAdapter < ::Net::IMAP::SASL::ClientAdapter
  include ::Net::IMAP::SASL::ProtocolAdapters::IMAP

  # source://net-imap//lib/net/imap/sasl_adapter.rb#15
  def auth_capable?(mechanism); end

  # source://net-imap//lib/net/imap/sasl_adapter.rb#16
  def drop_connection; end

  # source://net-imap//lib/net/imap/sasl_adapter.rb#17
  def drop_connection!; end

  # source://net-imap//lib/net/imap/sasl_adapter.rb#13
  def response_errors; end

  # source://net-imap//lib/net/imap/sasl_adapter.rb#14
  def sasl_ir_capable?; end
end

# source://net-imap//lib/net/imap/sasl_adapter.rb#10
Net::IMAP::SASLAdapter::RESPONSE_ERRORS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/flags.rb#248
Net::IMAP::SENT = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/data_encoding.rb#22
Net::IMAP::STRFDATE = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/data_encoding.rb#47
Net::IMAP::STRFTIME = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/flags.rb#173
Net::IMAP::SUBSCRIBED = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/search_result.rb#10
class Net::IMAP::SearchResult < ::Array
  # source://net-imap//lib/net/imap/search_result.rb#29
  def initialize(seq_nums, modseq: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/search_result.rb#62
  def ==(other); end

  # source://net-imap//lib/net/imap/search_result.rb#77
  def eql?(other); end

  # source://net-imap//lib/net/imap/search_result.rb#71
  def hash; end

  # source://net-imap//lib/net/imap/search_result.rb#90
  def inspect; end

  # source://net-imap//lib/net/imap/search_result.rb#23
  def modseq; end

  # source://net-imap//lib/net/imap/search_result.rb#123
  def pretty_print(pp); end

  # source://net-imap//lib/net/imap/search_result.rb#108
  def to_s(type = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/search_result.rb#121
  def to_sequence_set; end

  class << self
    # source://net-imap//lib/net/imap/search_result.rb#16
    def [](*seq_nums, modseq: T.unsafe(nil)); end
  end
end

# source://net-imap//lib/net/imap/sequence_set.rb#279
class Net::IMAP::SequenceSet
  # source://net-imap//lib/net/imap/sequence_set.rb#348
  def initialize(input = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sequence_set.rb#623
  def &(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#586
  def +(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#605
  def -(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#674
  def <<(object); end

  # source://net-imap//lib/net/imap/sequence_set.rb#441
  def ==(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#471
  def ===(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1088
  def [](index, length = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sequence_set.rb#644
  def ^(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#674
  def add(object); end

  # source://net-imap//lib/net/imap/sequence_set.rb#700
  def add?(object); end

  # source://net-imap//lib/net/imap/sequence_set.rb#684
  def append(object); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1037
  def at(index); end

  # source://net-imap//lib/net/imap/sequence_set.rb#351
  def clear; end

  # source://net-imap//lib/net/imap/sequence_set.rb#662
  def complement; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1168
  def complement!; end

  # source://net-imap//lib/net/imap/sequence_set.rb#989
  def count; end

  # source://net-imap//lib/net/imap/sequence_set.rb#483
  def cover?(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#712
  def delete(object); end

  # source://net-imap//lib/net/imap/sequence_set.rb#749
  def delete?(object); end

  # source://net-imap//lib/net/imap/sequence_set.rb#772
  def delete_at(index); end

  # source://net-imap//lib/net/imap/sequence_set.rb#605
  def difference(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#535
  def disjoint?(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#924
  def each_element; end

  # source://net-imap//lib/net/imap/sequence_set.rb#910
  def each_entry(&block); end

  # source://net-imap//lib/net/imap/sequence_set.rb#964
  def each_number(&block); end

  # source://net-imap//lib/net/imap/sequence_set.rb#946
  def each_range; end

  # source://net-imap//lib/net/imap/sequence_set.rb#851
  def elements; end

  # source://net-imap//lib/net/imap/sequence_set.rb#565
  def empty?; end

  # source://net-imap//lib/net/imap/sequence_set.rb#833
  def entries; end

  # source://net-imap//lib/net/imap/sequence_set.rb#460
  def eql?(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1000
  def find_index(number); end

  # source://net-imap//lib/net/imap/sequence_set.rb#418
  def freeze; end

  # source://net-imap//lib/net/imap/sequence_set.rb#568
  def full?; end

  # source://net-imap//lib/net/imap/sequence_set.rb#463
  def hash; end

  # source://net-imap//lib/net/imap/sequence_set.rb#509
  def include?(element); end

  # source://net-imap//lib/net/imap/sequence_set.rb#514
  def include_star?; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1214
  def inspect; end

  # source://net-imap//lib/net/imap/sequence_set.rb#523
  def intersect?(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#623
  def intersection(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1141
  def limit(max:); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1154
  def limit!(max:); end

  # source://net-imap//lib/net/imap/sequence_set.rb#543
  def max(star: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sequence_set.rb#509
  def member?(element); end

  # source://net-imap//lib/net/imap/sequence_set.rb#805
  def merge(*inputs); end

  # source://net-imap//lib/net/imap/sequence_set.rb#551
  def min(star: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sequence_set.rb#559
  def minmax(star: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1187
  def normalize; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1197
  def normalize!; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1210
  def normalized_string; end

  # source://net-imap//lib/net/imap/sequence_set.rb#900
  def numbers; end

  # source://net-imap//lib/net/imap/sequence_set.rb#523
  def overlap?(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#872
  def ranges; end

  # source://net-imap//lib/net/imap/sequence_set.rb#358
  def replace(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1234
  def send_data(imap, tag); end

  # source://net-imap//lib/net/imap/sequence_set.rb#989
  def size; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1088
  def slice(index, length = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sequence_set.rb#789
  def slice!(index, length = T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/sequence_set.rb#390
  def string; end

  # source://net-imap//lib/net/imap/sequence_set.rb#399
  def string=(str); end

  # source://net-imap//lib/net/imap/sequence_set.rb#819
  def subtract(*objects); end

  # source://net-imap//lib/net/imap/sequence_set.rb#851
  def to_a; end

  # source://net-imap//lib/net/imap/sequence_set.rb#415
  def to_s; end

  def to_sequence_set; end

  # source://net-imap//lib/net/imap/sequence_set.rb#983
  def to_set; end

  # source://net-imap//lib/net/imap/sequence_set.rb#586
  def union(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#562
  def valid?; end

  # source://net-imap//lib/net/imap/sequence_set.rb#374
  def valid_string; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1228
  def validate; end

  # source://net-imap//lib/net/imap/sequence_set.rb#644
  def xor(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#586
  def |(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#662
  def ~; end

  protected

  # source://net-imap//lib/net/imap/sequence_set.rb#1240
  def tuples; end

  private

  # source://net-imap//lib/net/imap/sequence_set.rb#1011
  def each_tuple_with_index; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1304
  def from_tuple_int(num); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1313
  def include_tuple?(_arg0); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1247
  def initialize_clone(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1251
  def initialize_dup(other); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1257
  def input_to_tuple(obj); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1268
  def input_to_tuples(obj); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1285
  def input_try_convert(input); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1315
  def intersect_tuple?(_arg0); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1409
  def nz_number(num); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1404
  def range_gte_to(num); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1293
  def range_to_tuple(range); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1244
  def remain_frozen(set); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1020
  def reverse_each_tuple_with_index; end

  # source://net-imap//lib/net/imap/sequence_set.rb#1099
  def slice_length(start, length); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1107
  def slice_range(range); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1308
  def str_to_tuple(str); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1307
  def str_to_tuples(str); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1303
  def to_tuple_int(obj); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1333
  def tuple_add(tuple); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1342
  def tuple_coalesce(lower, lower_idx, min, max); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1400
  def tuple_gte_with_index(num); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1369
  def tuple_subtract(tuple); end

  # source://net-imap//lib/net/imap/sequence_set.rb#932
  def tuple_to_entry(_arg0); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1306
  def tuple_to_str(tuple); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1379
  def tuple_trim_or_split(lower, idx, tmin, tmax); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1320
  def tuples_add(tuples); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1321
  def tuples_subtract(tuples); end

  # source://net-imap//lib/net/imap/sequence_set.rb#1386
  def tuples_trim_or_delete(lower, lower_idx, tmin, tmax); end

  class << self
    # source://net-imap//lib/net/imap/sequence_set.rb#305
    def [](first, *rest); end

    # source://net-imap//lib/net/imap/sequence_set.rb#336
    def empty; end

    # source://net-imap//lib/net/imap/sequence_set.rb#339
    def full; end

    # source://net-imap//lib/net/imap/sequence_set.rb#326
    def try_convert(obj); end
  end
end

# source://net-imap//lib/net/imap/sequence_set.rb#291
Net::IMAP::SequenceSet::COERCIBLE = T.let(T.unsafe(nil), Proc)

# source://net-imap//lib/net/imap/sequence_set.rb#1420
Net::IMAP::SequenceSet::EMPTY = T.let(T.unsafe(nil), Net::IMAP::SequenceSet)

# source://net-imap//lib/net/imap/sequence_set.rb#292
Net::IMAP::SequenceSet::ENUMABLE = T.let(T.unsafe(nil), Proc)

# source://net-imap//lib/net/imap/sequence_set.rb#1421
Net::IMAP::SequenceSet::FULL = T.let(T.unsafe(nil), Net::IMAP::SequenceSet)

# source://net-imap//lib/net/imap/sequence_set.rb#288
Net::IMAP::SequenceSet::STARS = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/sequence_set.rb#284
Net::IMAP::SequenceSet::STAR_INT = T.let(T.unsafe(nil), Integer)

# source://net-imap//lib/net/imap/sequence_set.rb#281
Net::IMAP::SequenceSet::UINT32_MAX = T.let(T.unsafe(nil), Integer)

# source://net-imap//lib/net/imap/command_data.rb#273
module Net::IMAP::StringFormatter
  private

  # source://net-imap//lib/net/imap/command_data.rb#300
  def nstring(str); end

  # source://net-imap//lib/net/imap/command_data.rb#290
  def string(str); end

  # source://net-imap//lib/net/imap/command_data.rb#285
  def valid_nstring?(str); end

  # source://net-imap//lib/net/imap/command_data.rb#280
  def valid_string?(str); end

  class << self
    # source://net-imap//lib/net/imap/command_data.rb#300
    def nstring(str); end

    # source://net-imap//lib/net/imap/command_data.rb#290
    def string(str); end

    # source://net-imap//lib/net/imap/command_data.rb#285
    def valid_nstring?(str); end

    # source://net-imap//lib/net/imap/command_data.rb#280
    def valid_string?(str); end
  end
end

# source://net-imap//lib/net/imap/command_data.rb#275
Net::IMAP::StringFormatter::LITERAL_REGEX = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep.rb#11
module Net::IMAP::StringPrep
  private

  # source://net-imap//lib/net/imap/stringprep.rb#144
  def check_bidi!(string, c_8: T.unsafe(nil), profile: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/stringprep.rb#104
  def check_prohibited!(string, *tables, bidi: T.unsafe(nil), unassigned: T.unsafe(nil), stored: T.unsafe(nil), profile: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/stringprep.rb#88
  def map_tables!(string, *tables); end

  # source://net-imap//lib/net/imap/stringprep.rb#76
  def stringprep(string, maps:, normalization:, prohibited:, **opts); end

  class << self
    # source://net-imap//lib/net/imap/stringprep.rb#49
    def [](table); end

    # source://net-imap//lib/net/imap/stringprep.rb#144
    def check_bidi!(string, c_8: T.unsafe(nil), profile: T.unsafe(nil)); end

    # source://net-imap//lib/net/imap/stringprep.rb#104
    def check_prohibited!(string, *tables, bidi: T.unsafe(nil), unassigned: T.unsafe(nil), stored: T.unsafe(nil), profile: T.unsafe(nil)); end

    # source://net-imap//lib/net/imap/stringprep.rb#88
    def map_tables!(string, *tables); end

    # source://net-imap//lib/net/imap/stringprep.rb#76
    def stringprep(string, maps:, normalization:, prohibited:, **opts); end
  end
end

# source://net-imap//lib/net/imap/stringprep.rb#45
class Net::IMAP::StringPrep::BidiStringError < ::Net::IMAP::StringPrep::StringPrepError; end

# source://net-imap//lib/net/imap/stringprep/nameprep.rb#32
module Net::IMAP::StringPrep::NamePrep
  private

  # source://net-imap//lib/net/imap/stringprep/nameprep.rb#54
  def nameprep(string, **opts); end

  class << self
    # source://net-imap//lib/net/imap/stringprep/nameprep.rb#54
    def nameprep(string, **opts); end
  end
end

# source://net-imap//lib/net/imap/stringprep/nameprep.rb#50
Net::IMAP::StringPrep::NamePrep::CHECK_BIDI = T.let(T.unsafe(nil), TrueClass)

# source://net-imap//lib/net/imap/stringprep/nameprep.rb#41
Net::IMAP::StringPrep::NamePrep::MAPPING_TABLES = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/stringprep/nameprep.rb#44
Net::IMAP::StringPrep::NamePrep::NORMALIZATION = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/stringprep/nameprep.rb#47
Net::IMAP::StringPrep::NamePrep::PROHIBITED_TABLES = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/stringprep/nameprep.rb#35
Net::IMAP::StringPrep::NamePrep::STRINGPREP_PROFILE = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/stringprep/nameprep.rb#38
Net::IMAP::StringPrep::NamePrep::UNASSIGNED_TABLE = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/stringprep.rb#31
class Net::IMAP::StringPrep::ProhibitedCodepoint < ::Net::IMAP::StringPrep::StringPrepError
  # source://net-imap//lib/net/imap/stringprep.rb#34
  def initialize(table, *args, **kwargs); end

  # source://net-imap//lib/net/imap/stringprep.rb#32
  def table; end
end

# source://net-imap//lib/net/imap/stringprep/saslprep.rb#15
module Net::IMAP::StringPrep::SASLprep
  private

  # source://net-imap//lib/net/imap/stringprep/saslprep.rb#42
  def saslprep(str, stored: T.unsafe(nil), exception: T.unsafe(nil)); end

  class << self
    # source://net-imap//lib/net/imap/stringprep/saslprep.rb#42
    def saslprep(str, stored: T.unsafe(nil), exception: T.unsafe(nil)); end
  end
end

# source://net-imap//lib/net/imap/stringprep/saslprep.rb#18
Net::IMAP::StringPrep::SASLprep::ASCII_NO_CTRLS = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#79
Net::IMAP::StringPrep::SASLprep::BIDI_FAILURE = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#27
Net::IMAP::StringPrep::SASLprep::MAP_TO_NOTHING = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#18
Net::IMAP::StringPrep::SASLprep::MAP_TO_SPACE = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#84
Net::IMAP::StringPrep::SASLprep::PROHIBITED = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#54
Net::IMAP::StringPrep::SASLprep::PROHIBITED_OUTPUT = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#68
Net::IMAP::StringPrep::SASLprep::PROHIBITED_OUTPUT_STORED = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#91
Net::IMAP::StringPrep::SASLprep::PROHIBITED_STORED = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#41
Net::IMAP::StringPrep::SASLprep::TABLES_PROHIBITED = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#49
Net::IMAP::StringPrep::SASLprep::TABLES_PROHIBITED_STORED = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/stringprep/saslprep_tables.rb#63
Net::IMAP::StringPrep::SASLprep::UNASSIGNED = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep.rb#19
class Net::IMAP::StringPrep::StringPrepError < ::ArgumentError
  # source://net-imap//lib/net/imap/stringprep.rb#22
  def initialize(*args, string: T.unsafe(nil), profile: T.unsafe(nil)); end

  # source://net-imap//lib/net/imap/stringprep.rb#20
  def profile; end

  # source://net-imap//lib/net/imap/stringprep.rb#20
  def string; end
end

# source://net-imap//lib/net/imap/stringprep/tables.rb#9
module Net::IMAP::StringPrep::Tables; end

# source://net-imap//lib/net/imap/stringprep/tables.rb#75
Net::IMAP::StringPrep::Tables::BIDI_DESC_REQ2 = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/stringprep/tables.rb#83
Net::IMAP::StringPrep::Tables::BIDI_DESC_REQ3 = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/stringprep/tables.rb#81
Net::IMAP::StringPrep::Tables::BIDI_FAILS_REQ2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#90
Net::IMAP::StringPrep::Tables::BIDI_FAILS_REQ3 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#93
Net::IMAP::StringPrep::Tables::BIDI_FAILURE = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#12
Net::IMAP::StringPrep::Tables::IN_A_1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#15
Net::IMAP::StringPrep::Tables::IN_B_1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#18
Net::IMAP::StringPrep::Tables::IN_B_2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#21
Net::IMAP::StringPrep::Tables::IN_B_3 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#33
Net::IMAP::StringPrep::Tables::IN_C_1_1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#36
Net::IMAP::StringPrep::Tables::IN_C_1_2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#39
Net::IMAP::StringPrep::Tables::IN_C_2_1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#42
Net::IMAP::StringPrep::Tables::IN_C_2_2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#45
Net::IMAP::StringPrep::Tables::IN_C_3 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#48
Net::IMAP::StringPrep::Tables::IN_C_4 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#51
Net::IMAP::StringPrep::Tables::IN_C_5 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#54
Net::IMAP::StringPrep::Tables::IN_C_6 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#57
Net::IMAP::StringPrep::Tables::IN_C_7 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#60
Net::IMAP::StringPrep::Tables::IN_C_8 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#63
Net::IMAP::StringPrep::Tables::IN_C_9 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#66
Net::IMAP::StringPrep::Tables::IN_D_1 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#70
Net::IMAP::StringPrep::Tables::IN_D_1_NEGATED = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#73
Net::IMAP::StringPrep::Tables::IN_D_2 = T.let(T.unsafe(nil), Regexp)

# source://net-imap//lib/net/imap/stringprep/tables.rb#139
Net::IMAP::StringPrep::Tables::MAPPINGS = T.let(T.unsafe(nil), Hash)

# source://net-imap//lib/net/imap/stringprep/tables.rb#24
Net::IMAP::StringPrep::Tables::MAP_B_1 = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/stringprep/tables.rb#27
Net::IMAP::StringPrep::Tables::MAP_B_2 = T.let(T.unsafe(nil), Hash)

# source://net-imap//lib/net/imap/stringprep/tables.rb#30
Net::IMAP::StringPrep::Tables::MAP_B_3 = T.let(T.unsafe(nil), Hash)

# source://net-imap//lib/net/imap/stringprep/tables.rb#119
Net::IMAP::StringPrep::Tables::REGEXPS = T.let(T.unsafe(nil), Hash)

# source://net-imap//lib/net/imap/stringprep/tables.rb#96
Net::IMAP::StringPrep::Tables::TITLES = T.let(T.unsafe(nil), Hash)

# source://net-imap//lib/net/imap/stringprep/trace.rb#9
module Net::IMAP::StringPrep::Trace
  private

  # source://net-imap//lib/net/imap/stringprep/trace.rb#68
  def stringprep_trace(string, **opts); end

  class << self
    # source://net-imap//lib/net/imap/stringprep/trace.rb#68
    def stringprep_trace(string, **opts); end
  end
end

# source://net-imap//lib/net/imap/stringprep/trace.rb#46
Net::IMAP::StringPrep::Trace::CHECK_BIDI = T.let(T.unsafe(nil), TrueClass)

# source://net-imap//lib/net/imap/stringprep/trace.rb#20
Net::IMAP::StringPrep::Trace::MAPPING_TABLES = T.let(T.unsafe(nil), T.untyped)

# source://net-imap//lib/net/imap/stringprep/trace.rb#24
Net::IMAP::StringPrep::Trace::NORMALIZATION = T.let(T.unsafe(nil), T.untyped)

# source://net-imap//lib/net/imap/stringprep/trace.rb#41
Net::IMAP::StringPrep::Trace::PROHIBITED_TABLES = T.let(T.unsafe(nil), Array)

# source://net-imap//lib/net/imap/stringprep/trace.rb#12
Net::IMAP::StringPrep::Trace::STRINGPREP_PROFILE = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/stringprep/trace.rb#16
Net::IMAP::StringPrep::Trace::UNASSIGNED_TABLE = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/flags.rb#258
Net::IMAP::TRASH = T.let(T.unsafe(nil), Symbol)

# source://net-imap//lib/net/imap/response_data.rb#764
class Net::IMAP::ThreadMember < ::Struct
  # source://net-imap//lib/net/imap/response_data.rb#780
  def to_sequence_set; end

  protected

  # source://net-imap//lib/net/imap/response_data.rb#786
  def all_seqnos(node = T.unsafe(nil)); end
end

# source://net-imap//lib/net/imap/response_data.rb#346
class Net::IMAP::UIDPlusData < ::Struct
  # source://net-imap//lib/net/imap/response_data.rb#376
  def uid_mapping; end
end

# source://net-imap//lib/net/imap/errors.rb#71
class Net::IMAP::UnknownResponseError < ::Net::IMAP::ResponseError; end

# source://net-imap//lib/net/imap/response_data.rb#77
class Net::IMAP::UnparsedData < ::Struct; end

# source://net-imap//lib/net/imap/response_data.rb#93
class Net::IMAP::UnparsedNumericResponseData < ::Struct; end

# source://net-imap//lib/net/imap.rb#720
Net::IMAP::VERSION = T.let(T.unsafe(nil), String)

# source://net-imap//lib/net/imap/authenticators.rb#35
Net::IMAP::XOauth2Authenticator = Net::IMAP::SASL::XOAuth2Authenticator
