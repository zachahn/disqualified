# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rdoc` gem.
# Please instead update this file by running `bin/tapioca gem rdoc`.


module ERB::Escape
  private

  def html_escape(_arg0); end

  class << self
    def html_escape(_arg0); end
  end
end

# source://rdoc//lib/rdoc.rb#58
module RDoc
  class << self
    # source://rdoc//lib/rdoc.rb#134
    def home; end

    # source://rdoc//lib/rdoc.rb#107
    def load_yaml; end
  end
end

# source://rdoc//lib/rdoc/alias.rb#9
class RDoc::Alias < ::RDoc::CodeObject
  # source://rdoc//lib/rdoc/alias.rb#37
  def initialize(text, old_name, new_name, comment, singleton = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/alias.rb#50
  def <=>(other); end

  # source://rdoc//lib/rdoc/alias.rb#57
  def aref; end

  # source://rdoc//lib/rdoc/alias.rb#65
  def full_old_name; end

  # source://rdoc//lib/rdoc/alias.rb#72
  def html_name; end

  # source://rdoc//lib/rdoc/alias.rb#76
  def inspect; end

  # source://rdoc//lib/rdoc/alias.rb#14
  def name; end

  # source://rdoc//lib/rdoc/alias.rb#87
  def name_prefix; end

  # source://rdoc//lib/rdoc/alias.rb#14
  def new_name; end

  # source://rdoc//lib/rdoc/alias.rb#21
  def old_name; end

  # source://rdoc//lib/rdoc/alias.rb#101
  def pretty_name; end

  # source://rdoc//lib/rdoc/alias.rb#101
  def pretty_new_name; end

  # source://rdoc//lib/rdoc/alias.rb#94
  def pretty_old_name; end

  # source://rdoc//lib/rdoc/alias.rb#26
  def singleton; end

  # source://rdoc//lib/rdoc/alias.rb#26
  def singleton=(_arg0); end

  # source://rdoc//lib/rdoc/alias.rb#31
  def text; end

  # source://rdoc//lib/rdoc/alias.rb#107
  def to_s; end
end

# source://rdoc//lib/rdoc/any_method.rb#5
class RDoc::AnyMethod < ::RDoc::MethodAttr
  include ::RDoc::TokenStream

  # source://rdoc//lib/rdoc/any_method.rb#46
  def initialize(text, name); end

  # source://rdoc//lib/rdoc/any_method.rb#59
  def add_alias(an_alias, context = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/any_method.rb#76
  def aref_prefix; end

  # source://rdoc//lib/rdoc/any_method.rb#85
  def arglists; end

  # source://rdoc//lib/rdoc/any_method.rb#27
  def c_function; end

  # source://rdoc//lib/rdoc/any_method.rb#27
  def c_function=(_arg0); end

  # source://rdoc//lib/rdoc/any_method.rb#96
  def call_seq; end

  # source://rdoc//lib/rdoc/any_method.rb#112
  def call_seq=(call_seq); end

  # source://rdoc//lib/rdoc/any_method.rb#39
  def calls_super; end

  # source://rdoc//lib/rdoc/any_method.rb#39
  def calls_super=(_arg0); end

  # source://rdoc//lib/rdoc/any_method.rb#22
  def dont_rename_initialize; end

  # source://rdoc//lib/rdoc/any_method.rb#22
  def dont_rename_initialize=(_arg0); end

  # source://rdoc//lib/rdoc/any_method.rb#121
  def has_call_seq?; end

  # source://rdoc//lib/rdoc/any_method.rb#129
  def is_alias_for; end

  # source://rdoc//lib/rdoc/any_method.rb#147
  def marshal_dump; end

  # source://rdoc//lib/rdoc/any_method.rb#184
  def marshal_load(array); end

  # source://rdoc//lib/rdoc/any_method.rb#233
  def name; end

  # source://rdoc//lib/rdoc/any_method.rb#246
  def param_list; end

  # source://rdoc//lib/rdoc/any_method.rb#278
  def param_seq; end

  # source://rdoc//lib/rdoc/any_method.rb#34
  def params; end

  # source://rdoc//lib/rdoc/any_method.rb#34
  def params=(_arg0); end

  # source://rdoc//lib/rdoc/any_method.rb#30
  def section_title; end

  # source://rdoc//lib/rdoc/any_method.rb#30
  def section_title=(_arg0); end

  # source://rdoc//lib/rdoc/any_method.rb#310
  def skip_description?; end

  # source://rdoc//lib/rdoc/any_method.rb#317
  def store=(store); end

  # source://rdoc//lib/rdoc/any_method.rb#326
  def superclass_method; end

  protected

  # source://rdoc//lib/rdoc/any_method.rb#345
  def _call_seq; end

  private

  # source://rdoc//lib/rdoc/any_method.rb#355
  def deduplicate_call_seq(call_seq); end
end

# source://rdoc//lib/rdoc/attr.rb#6
class RDoc::Attr < ::RDoc::MethodAttr
  # source://rdoc//lib/rdoc/attr.rb#25
  def initialize(text, name, rw, comment, singleton = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/attr.rb#36
  def ==(other); end

  # source://rdoc//lib/rdoc/attr.rb#46
  def add_alias(an_alias, context); end

  # source://rdoc//lib/rdoc/attr.rb#61
  def aref_prefix; end

  # source://rdoc//lib/rdoc/attr.rb#71
  def calls_super; end

  # source://rdoc//lib/rdoc/attr.rb#78
  def definition; end

  # source://rdoc//lib/rdoc/attr.rb#86
  def inspect; end

  # source://rdoc//lib/rdoc/attr.rb#102
  def marshal_dump; end

  # source://rdoc//lib/rdoc/attr.rb#124
  def marshal_load(array); end

  # source://rdoc//lib/rdoc/attr.rb#151
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/attr.rb#19
  def rw; end

  # source://rdoc//lib/rdoc/attr.rb#19
  def rw=(_arg0); end

  # source://rdoc//lib/rdoc/attr.rb#162
  def to_s; end

  # source://rdoc//lib/rdoc/attr.rb#172
  def token_stream; end
end

# source://rdoc//lib/rdoc/class_module.rb#6
class RDoc::ClassModule < ::RDoc::Context
  # source://rdoc//lib/rdoc/class_module.rb#111
  def initialize(name, superclass = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/class_module.rb#127
  def add_comment(comment, location); end

  # source://rdoc//lib/rdoc/class_module.rb#148
  def add_things(my_things, other_things); end

  # source://rdoc//lib/rdoc/class_module.rb#171
  def ancestors; end

  # source://rdoc//lib/rdoc/class_module.rb#183
  def aref; end

  # source://rdoc//lib/rdoc/class_module.rb#175
  def aref_prefix; end

  # source://rdoc//lib/rdoc/class_module.rb#195
  def clear_comment; end

  # source://rdoc//lib/rdoc/class_module.rb#205
  def comment=(comment); end

  # source://rdoc//lib/rdoc/class_module.rb#35
  def comment_location; end

  # source://rdoc//lib/rdoc/class_module.rb#35
  def comment_location=(_arg0); end

  # source://rdoc//lib/rdoc/class_module.rb#223
  def complete(min_visibility); end

  # source://rdoc//lib/rdoc/class_module.rb#30
  def constant_aliases; end

  # source://rdoc//lib/rdoc/class_module.rb#30
  def constant_aliases=(_arg0); end

  # source://rdoc//lib/rdoc/generator/markup.rb#131
  def description; end

  # source://rdoc//lib/rdoc/class_module.rb#37
  def diagram; end

  # source://rdoc//lib/rdoc/class_module.rb#37
  def diagram=(_arg0); end

  # source://rdoc//lib/rdoc/class_module.rb#171
  def direct_ancestors; end

  # source://rdoc//lib/rdoc/class_module.rb#233
  def document_self_or_methods; end

  # source://rdoc//lib/rdoc/class_module.rb#241
  def documented?; end

  # source://rdoc//lib/rdoc/class_module.rb#251
  def each_ancestor; end

  # source://rdoc//lib/rdoc/class_module.rb#264
  def find_ancestor_local_symbol(symbol); end

  # source://rdoc//lib/rdoc/class_module.rb#276
  def find_class_named(name); end

  # source://rdoc//lib/rdoc/class_module.rb#289
  def full_name; end

  # source://rdoc//lib/rdoc/class_module.rb#42
  def is_alias_for; end

  # source://rdoc//lib/rdoc/class_module.rb#42
  def is_alias_for=(_arg0); end

  # source://rdoc//lib/rdoc/class_module.rb#300
  def marshal_dump; end

  # source://rdoc//lib/rdoc/class_module.rb#346
  def marshal_load(array); end

  # source://rdoc//lib/rdoc/class_module.rb#435
  def merge(class_module); end

  # source://rdoc//lib/rdoc/class_module.rb#519
  def merge_collections(mine, other, other_files, &block); end

  # source://rdoc//lib/rdoc/class_module.rb#531
  def merge_sections(cm); end

  # source://rdoc//lib/rdoc/class_module.rb#570
  def module?; end

  # source://rdoc//lib/rdoc/class_module.rb#579
  def name=(new_name); end

  # source://rdoc//lib/rdoc/class_module.rb#622
  def name_for_path; end

  # source://rdoc//lib/rdoc/class_module.rb#631
  def non_aliases; end

  # source://rdoc//lib/rdoc/class_module.rb#587
  def parse(comment_location); end

  # source://rdoc//lib/rdoc/class_module.rb#613
  def path; end

  # source://rdoc//lib/rdoc/class_module.rb#643
  def remove_nodoc_children; end

  # source://rdoc//lib/rdoc/class_module.rb#657
  def remove_things(my_things, other_files); end

  # source://rdoc//lib/rdoc/class_module.rb#672
  def search_record; end

  # source://rdoc//lib/rdoc/class_module.rb#687
  def store=(store); end

  # source://rdoc//lib/rdoc/class_module.rb#701
  def superclass; end

  # source://rdoc//lib/rdoc/class_module.rb#708
  def superclass=(superclass); end

  # source://rdoc//lib/rdoc/class_module.rb#713
  def to_s; end

  # source://rdoc//lib/rdoc/class_module.rb#724
  def type; end

  # source://rdoc//lib/rdoc/class_module.rb#743
  def update_aliases; end

  # source://rdoc//lib/rdoc/class_module.rb#791
  def update_extends; end

  # source://rdoc//lib/rdoc/class_module.rb#776
  def update_includes; end

  class << self
    # source://rdoc//lib/rdoc/class_module.rb#50
    def from_module(class_type, mod); end
  end
end

# source://rdoc//lib/rdoc/code_object.rb#28
class RDoc::CodeObject
  include ::RDoc::Text
  include ::RDoc::Generator::Markup

  # source://rdoc//lib/rdoc/code_object.rb#102
  def initialize; end

  # source://rdoc//lib/rdoc/code_object.rb#35
  def comment; end

  # source://rdoc//lib/rdoc/code_object.rb#135
  def comment=(comment); end

  # source://rdoc//lib/rdoc/code_object.rb#163
  def display?; end

  # source://rdoc//lib/rdoc/code_object.rb#40
  def document_children; end

  # source://rdoc//lib/rdoc/code_object.rb#172
  def document_children=(document_children); end

  # source://rdoc//lib/rdoc/code_object.rb#45
  def document_self; end

  # source://rdoc//lib/rdoc/code_object.rb#183
  def document_self=(document_self); end

  # source://rdoc//lib/rdoc/code_object.rb#194
  def documented?; end

  # source://rdoc//lib/rdoc/code_object.rb#50
  def done_documenting; end

  # source://rdoc//lib/rdoc/code_object.rb#207
  def done_documenting=(value); end

  # source://rdoc//lib/rdoc/code_object.rb#218
  def each_parent; end

  # source://rdoc//lib/rdoc/code_object.rb#55
  def file; end

  # source://rdoc//lib/rdoc/code_object.rb#233
  def file_name; end

  # source://rdoc//lib/rdoc/code_object.rb#60
  def force_documentation; end

  # source://rdoc//lib/rdoc/code_object.rb#245
  def force_documentation=(value); end

  # source://rdoc//lib/rdoc/code_object.rb#254
  def full_name=(full_name); end

  # source://rdoc//lib/rdoc/code_object.rb#274
  def ignore; end

  # source://rdoc//lib/rdoc/code_object.rb#287
  def ignored?; end

  # source://rdoc//lib/rdoc/code_object.rb#121
  def initialize_visibility; end

  # source://rdoc//lib/rdoc/code_object.rb#65
  def line; end

  # source://rdoc//lib/rdoc/code_object.rb#65
  def line=(_arg0); end

  # source://rdoc//lib/rdoc/code_object.rb#70
  def metadata; end

  # source://rdoc//lib/rdoc/code_object.rb#297
  def options; end

  # source://rdoc//lib/rdoc/code_object.rb#309
  def parent; end

  # source://rdoc//lib/rdoc/code_object.rb#75
  def parent=(_arg0); end

  # source://rdoc//lib/rdoc/code_object.rb#331
  def parent_file_name; end

  # source://rdoc//lib/rdoc/code_object.rb#338
  def parent_name; end

  # source://rdoc//lib/rdoc/code_object.rb#80
  def received_nodoc; end

  # source://rdoc//lib/rdoc/code_object.rb#345
  def record_location(top_level); end

  # source://rdoc//lib/rdoc/code_object.rb#355
  def section; end

  # source://rdoc//lib/rdoc/code_object.rb#85
  def section=(_arg0); end

  # source://rdoc//lib/rdoc/code_object.rb#365
  def start_doc; end

  # source://rdoc//lib/rdoc/code_object.rb#377
  def stop_doc; end

  # source://rdoc//lib/rdoc/code_object.rb#90
  def store; end

  # source://rdoc//lib/rdoc/code_object.rb#387
  def store=(store); end

  # source://rdoc//lib/rdoc/code_object.rb#404
  def suppress; end

  # source://rdoc//lib/rdoc/code_object.rb#417
  def suppressed?; end

  # source://rdoc//lib/rdoc/code_object.rb#97
  def viewer; end

  # source://rdoc//lib/rdoc/code_object.rb#97
  def viewer=(_arg0); end
end

# source://rdoc//lib/rdoc/comment.rb#12
class RDoc::Comment
  include ::RDoc::Text

  # source://rdoc//lib/rdoc/comment.rb#56
  def initialize(text = T.unsafe(nil), location = T.unsafe(nil), language = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/comment.rb#74
  def ==(other); end

  # source://rdoc//lib/rdoc/comment.rb#50
  def document=(_arg0); end

  # source://rdoc//lib/rdoc/comment.rb#128
  def empty?; end

  # source://rdoc//lib/rdoc/comment.rb#135
  def encode!(encoding); end

  # source://rdoc//lib/rdoc/comment.rb#95
  def extract_call_seq(method); end

  # source://rdoc//lib/rdoc/comment.rb#24
  def file; end

  # source://rdoc//lib/rdoc/comment.rb#19
  def format; end

  # source://rdoc//lib/rdoc/comment.rb#143
  def format=(format); end

  # source://rdoc//lib/rdoc/comment.rb#148
  def inspect; end

  # source://rdoc//lib/rdoc/comment.rb#29
  def line; end

  # source://rdoc//lib/rdoc/comment.rb#29
  def line=(_arg0); end

  # source://rdoc//lib/rdoc/comment.rb#24
  def location; end

  # source://rdoc//lib/rdoc/comment.rb#24
  def location=(_arg0); end

  # source://rdoc//lib/rdoc/comment.rb#157
  def normalize; end

  # source://rdoc//lib/rdoc/comment.rb#171
  def normalized?; end

  # source://rdoc//lib/rdoc/comment.rb#179
  def parse; end

  # source://rdoc//lib/rdoc/comment.rb#200
  def remove_private; end

  # source://rdoc//lib/rdoc/comment.rb#39
  def text; end

  # source://rdoc//lib/rdoc/comment.rb#214
  def text=(text); end

  # source://rdoc//lib/rdoc/comment.rb#39
  def to_s; end

  # source://rdoc//lib/rdoc/comment.rb#225
  def tomdoc?; end

  private

  # source://rdoc//lib/rdoc/comment.rb#70
  def initialize_copy(copy); end
end

# source://rdoc//lib/rdoc/constant.rb#5
class RDoc::Constant < ::RDoc::CodeObject
  # source://rdoc//lib/rdoc/constant.rb#32
  def initialize(name, value, comment); end

  # source://rdoc//lib/rdoc/constant.rb#47
  def <=>(other); end

  # source://rdoc//lib/rdoc/constant.rb#56
  def ==(other); end

  # source://rdoc//lib/rdoc/constant.rb#66
  def documented?; end

  # source://rdoc//lib/rdoc/constant.rb#81
  def full_name; end

  # source://rdoc//lib/rdoc/constant.rb#99
  def inspect; end

  # source://rdoc//lib/rdoc/constant.rb#88
  def is_alias_for; end

  # source://rdoc//lib/rdoc/constant.rb#12
  def is_alias_for=(_arg0); end

  # source://rdoc//lib/rdoc/constant.rb#109
  def marshal_dump; end

  # source://rdoc//lib/rdoc/constant.rb#135
  def marshal_load(array); end

  # source://rdoc//lib/rdoc/constant.rb#17
  def name; end

  # source://rdoc//lib/rdoc/constant.rb#17
  def name=(_arg0); end

  # source://rdoc//lib/rdoc/constant.rb#153
  def path; end

  # source://rdoc//lib/rdoc/constant.rb#157
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/constant.rb#171
  def store=(store); end

  # source://rdoc//lib/rdoc/constant.rb#177
  def to_s; end

  # source://rdoc//lib/rdoc/constant.rb#22
  def value; end

  # source://rdoc//lib/rdoc/constant.rb#22
  def value=(_arg0); end

  # source://rdoc//lib/rdoc/constant.rb#27
  def visibility; end

  # source://rdoc//lib/rdoc/constant.rb#27
  def visibility=(_arg0); end
end

# source://rdoc//lib/rdoc/context.rb#7
class RDoc::Context < ::RDoc::CodeObject
  include ::Comparable

  # source://rdoc//lib/rdoc/context.rb#123
  def initialize; end

  # source://rdoc//lib/rdoc/context.rb#171
  def <=>(other); end

  # source://rdoc//lib/rdoc/context.rb#183
  def add(klass, name, comment); end

  # source://rdoc//lib/rdoc/context.rb#198
  def add_alias(an_alias); end

  # source://rdoc//lib/rdoc/context.rb#225
  def add_attribute(attribute); end

  # source://rdoc//lib/rdoc/context.rb#288
  def add_class(class_type, given_name, superclass = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/context.rb#404
  def add_class_or_module(mod, self_hash, all_hash); end

  # source://rdoc//lib/rdoc/context.rb#429
  def add_constant(constant); end

  # source://rdoc//lib/rdoc/context.rb#463
  def add_extend(ext); end

  # source://rdoc//lib/rdoc/context.rb#454
  def add_include(include); end

  # source://rdoc//lib/rdoc/context.rb#473
  def add_method(method); end

  # source://rdoc//lib/rdoc/context.rb#506
  def add_module(class_type, name); end

  # source://rdoc//lib/rdoc/context.rb#527
  def add_module_alias(from, from_name, to, file); end

  # source://rdoc//lib/rdoc/context.rb#519
  def add_module_by_normal_module(mod); end

  # source://rdoc//lib/rdoc/context.rb#568
  def add_require(require); end

  # source://rdoc//lib/rdoc/context.rb#586
  def add_section(title, comment = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/context.rb#600
  def add_to(array, thing); end

  # source://rdoc//lib/rdoc/context.rb#25
  def aliases; end

  # source://rdoc//lib/rdoc/context.rb#616
  def any_content(includes = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/context.rb#30
  def attributes; end

  # source://rdoc//lib/rdoc/context.rb#35
  def block_params; end

  # source://rdoc//lib/rdoc/context.rb#35
  def block_params=(_arg0); end

  # source://rdoc//lib/rdoc/context.rb#632
  def child_name(name); end

  # source://rdoc//lib/rdoc/context.rb#645
  def class_attributes; end

  # source://rdoc//lib/rdoc/context.rb#652
  def class_method_list; end

  # source://rdoc//lib/rdoc/context.rb#659
  def classes; end

  # source://rdoc//lib/rdoc/context.rb#666
  def classes_and_modules; end

  # source://rdoc//lib/rdoc/context.rb#673
  def classes_hash; end

  # source://rdoc//lib/rdoc/context.rb#40
  def constants; end

  # source://rdoc//lib/rdoc/context.rb#118
  def constants_hash; end

  # source://rdoc//lib/rdoc/context.rb#102
  def current_line_visibility=(_arg0); end

  # source://rdoc//lib/rdoc/context.rb#681
  def current_section; end

  # source://rdoc//lib/rdoc/context.rb#45
  def current_section=(_arg0); end

  # source://rdoc//lib/rdoc/context.rb#694
  def defined_in?(file); end

  # source://rdoc//lib/rdoc/context.rb#698
  def display(method_attr); end

  # source://rdoc//lib/rdoc/context.rb#713
  def each_ancestor(&_); end

  # source://rdoc//lib/rdoc/context.rb#719
  def each_attribute; end

  # source://rdoc//lib/rdoc/context.rb#726
  def each_classmodule(&block); end

  # source://rdoc//lib/rdoc/context.rb#733
  def each_constant; end

  # source://rdoc//lib/rdoc/context.rb#747
  def each_extend; end

  # source://rdoc//lib/rdoc/context.rb#740
  def each_include; end

  # source://rdoc//lib/rdoc/context.rb#754
  def each_method; end

  # source://rdoc//lib/rdoc/context.rb#770
  def each_section; end

  # source://rdoc//lib/rdoc/context.rb#60
  def extends; end

  # source://rdoc//lib/rdoc/context.rb#92
  def external_aliases; end

  # source://rdoc//lib/rdoc/context.rb#787
  def find_attribute(name, singleton); end

  # source://rdoc//lib/rdoc/context.rb#795
  def find_attribute_named(name); end

  # source://rdoc//lib/rdoc/context.rb#809
  def find_class_method_named(name); end

  # source://rdoc//lib/rdoc/context.rb#816
  def find_constant_named(name); end

  # source://rdoc//lib/rdoc/context.rb#825
  def find_enclosing_module_named(name); end

  # source://rdoc//lib/rdoc/context.rb#832
  def find_external_alias(name, singleton); end

  # source://rdoc//lib/rdoc/context.rb#839
  def find_external_alias_named(name); end

  # source://rdoc//lib/rdoc/context.rb#853
  def find_file_named(name); end

  # source://rdoc//lib/rdoc/context.rb#860
  def find_instance_method_named(name); end

  # source://rdoc//lib/rdoc/context.rb#868
  def find_local_symbol(symbol); end

  # source://rdoc//lib/rdoc/context.rb#880
  def find_method(name, singleton); end

  # source://rdoc//lib/rdoc/context.rb#893
  def find_method_named(name); end

  # source://rdoc//lib/rdoc/context.rb#907
  def find_module_named(name); end

  # source://rdoc//lib/rdoc/context.rb#917
  def find_symbol(symbol); end

  # source://rdoc//lib/rdoc/context.rb#924
  def find_symbol_module(symbol); end

  # source://rdoc//lib/rdoc/context.rb#957
  def full_name; end

  # source://rdoc//lib/rdoc/context.rb#966
  def fully_documented?; end

  # source://rdoc//lib/rdoc/context.rb#976
  def http_url(prefix); end

  # source://rdoc//lib/rdoc/context.rb#50
  def in_files; end

  # source://rdoc//lib/rdoc/context.rb#55
  def includes; end

  # source://rdoc//lib/rdoc/context.rb#145
  def initialize_methods_etc; end

  # source://rdoc//lib/rdoc/context.rb#987
  def instance_attributes; end

  # source://rdoc//lib/rdoc/context.rb#1003
  def instance_method_list; end

  # source://rdoc//lib/rdoc/context.rb#994
  def instance_methods; end

  # source://rdoc//lib/rdoc/context.rb#65
  def method_list; end

  # source://rdoc//lib/rdoc/context.rb#1015
  def methods_by_type(section = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/context.rb#108
  def methods_hash; end

  # source://rdoc//lib/rdoc/context.rb#1038
  def methods_matching(methods, singleton = T.unsafe(nil), &block); end

  # source://rdoc//lib/rdoc/context.rb#1051
  def modules; end

  # source://rdoc//lib/rdoc/context.rb#1058
  def modules_hash; end

  # source://rdoc//lib/rdoc/context.rb#70
  def name; end

  # source://rdoc//lib/rdoc/context.rb#1066
  def name_for_path; end

  # source://rdoc//lib/rdoc/context.rb#1073
  def ongoing_visibility=(visibility); end

  # source://rdoc//lib/rdoc/context.rb#113
  def params; end

  # source://rdoc//lib/rdoc/context.rb#113
  def params=(_arg0); end

  # source://rdoc//lib/rdoc/context.rb#1080
  def record_location(top_level); end

  # source://rdoc//lib/rdoc/context.rb#1094
  def remove_from_documentation?; end

  # source://rdoc//lib/rdoc/context.rb#1107
  def remove_invisible(min_visibility); end

  # source://rdoc//lib/rdoc/context.rb#1117
  def remove_invisible_in(array, min_visibility); end

  # source://rdoc//lib/rdoc/context.rb#75
  def requires; end

  # source://rdoc//lib/rdoc/context.rb#1133
  def resolve_aliases(added); end

  # source://rdoc//lib/rdoc/context.rb#1149
  def section_contents; end

  # source://rdoc//lib/rdoc/context.rb#1173
  def sections; end

  # source://rdoc//lib/rdoc/context.rb#1177
  def sections_hash; end

  # source://rdoc//lib/rdoc/context.rb#1202
  def set_constant_visibility_for(names, visibility); end

  # source://rdoc//lib/rdoc/context.rb#1184
  def set_current_section(title, comment); end

  # source://rdoc//lib/rdoc/context.rb#1192
  def set_visibility_for(methods, visibility, singleton = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/context.rb#1213
  def sort_sections; end

  # source://rdoc//lib/rdoc/context.rb#80
  def temporary_section; end

  # source://rdoc//lib/rdoc/context.rb#80
  def temporary_section=(_arg0); end

  # source://rdoc//lib/rdoc/context.rb#1229
  def to_s; end

  # source://rdoc//lib/rdoc/context.rb#1239
  def top_level; end

  # source://rdoc//lib/rdoc/context.rb#87
  def unmatched_alias_lists; end

  # source://rdoc//lib/rdoc/context.rb#87
  def unmatched_alias_lists=(_arg0); end

  # source://rdoc//lib/rdoc/context.rb#1249
  def upgrade_to_class(mod, class_type, enclosing); end

  # source://rdoc//lib/rdoc/context.rb#97
  def visibility; end

  # source://rdoc//lib/rdoc/context.rb#97
  def visibility=(_arg0); end
end

# source://rdoc//lib/rdoc/context/section.rb#13
class RDoc::Context::Section
  include ::RDoc::Text
  include ::RDoc::Generator::Markup

  # source://rdoc//lib/rdoc/context/section.rb#42
  def initialize(parent, title, comment); end

  # source://rdoc//lib/rdoc/context/section.rb#54
  def ==(other); end

  # source://rdoc//lib/rdoc/context/section.rb#63
  def add_comment(comment); end

  # source://rdoc//lib/rdoc/context/section.rb#83
  def aref; end

  # source://rdoc//lib/rdoc/context/section.rb#22
  def comment; end

  # source://rdoc//lib/rdoc/context/section.rb#27
  def comments; end

  # source://rdoc//lib/rdoc/context/section.rb#54
  def eql?(other); end

  # source://rdoc//lib/rdoc/context/section.rb#98
  def extract_comment(comment); end

  # source://rdoc//lib/rdoc/context/section.rb#130
  def hash; end

  # source://rdoc//lib/rdoc/context/section.rb#137
  def in_files; end

  # source://rdoc//lib/rdoc/context/section.rb#126
  def inspect; end

  # source://rdoc//lib/rdoc/context/section.rb#158
  def marshal_dump; end

  # source://rdoc//lib/rdoc/context/section.rb#169
  def marshal_load(array); end

  # source://rdoc//lib/rdoc/context/section.rb#32
  def parent; end

  # source://rdoc//lib/rdoc/context/section.rb#180
  def parse; end

  # source://rdoc//lib/rdoc/context/section.rb#208
  def plain_html; end

  # source://rdoc//lib/rdoc/context/section.rb#216
  def remove_comment(comment); end

  # source://rdoc//lib/rdoc/context/section.rb#37
  def title; end
end

# source://rdoc//lib/rdoc/cross_reference.rb#8
class RDoc::CrossReference
  # source://rdoc//lib/rdoc/cross_reference.rb#127
  def initialize(context); end

  # source://rdoc//lib/rdoc/cross_reference.rb#190
  def resolve(name, text); end

  # source://rdoc//lib/rdoc/cross_reference.rb#137
  def resolve_method(name); end

  # source://rdoc//lib/rdoc/cross_reference.rb#121
  def seen; end

  # source://rdoc//lib/rdoc/cross_reference.rb#121
  def seen=(_arg0); end
end

# source://rdoc//lib/rdoc/cross_reference.rb#28
RDoc::CrossReference::METHOD_ARGS_REGEXP_STR = T.let(T.unsafe(nil), String)

# source://rdoc//lib/rdoc/cross_reference.rb#23
RDoc::CrossReference::METHOD_ARG_REGEXP_STR = T.let(T.unsafe(nil), String)

# source://rdoc//lib/rdoc/erbio.rb#18
class RDoc::ERBIO < ::ERB
  # source://rdoc//lib/rdoc/erbio.rb#23
  def initialize(str, trim_mode: T.unsafe(nil), eoutvar: T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/erbio.rb#30
  def set_eoutvar(compiler, io_variable); end
end

# source://rdoc//lib/rdoc/erb_partial.rb#6
class RDoc::ERBPartial < ::ERB
  # source://rdoc//lib/rdoc/erb_partial.rb#12
  def set_eoutvar(compiler, eoutvar = T.unsafe(nil)); end
end

# source://rdoc//lib/rdoc/encoding.rb#8
module RDoc::Encoding
  class << self
    # source://rdoc//lib/rdoc/encoding.rb#112
    def change_encoding(text, encoding); end

    # source://rdoc//lib/rdoc/encoding.rb#92
    def detect_encoding(string); end

    # source://rdoc//lib/rdoc/encoding.rb#32
    def read_file(filename, encoding, force_transcode = T.unsafe(nil)); end

    # source://rdoc//lib/rdoc/encoding.rb#102
    def remove_magic_comment(string); end
  end
end

# source://rdoc//lib/rdoc/encoding.rb#10
RDoc::Encoding::HEADER_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://rdoc//lib/rdoc/generator/darkfish.rb#55
class RDoc::Generator::Darkfish
  include ::ERB::Escape
  include ::ERB::Util
  include ::ActiveSupport::CoreExt::ERBUtil
  include ::ActiveSupport::CoreExt::ERBUtilPrivate

  # source://rdoc//lib/rdoc/generator/darkfish.rb#159
  def initialize(store, options); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#675
  def assemble_template(body_file); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#96
  def asset_rel_path; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#96
  def asset_rel_path=(_arg0); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#102
  def base_dir; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#191
  def class_dir; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#108
  def classes; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#265
  def copy_static; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#182
  def debug_msg(*msg); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#113
  def dry_run; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#113
  def dry_run=(_arg0); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#199
  def file_dir; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#119
  def file_output; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#119
  def file_output=(_arg0); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#124
  def files; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#207
  def gen_sub_directories; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#241
  def generate; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#337
  def generate_class(klass, template_file = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#368
  def generate_class_files; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#395
  def generate_file_files; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#303
  def generate_index; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#464
  def generate_page(file); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#493
  def generate_servlet_not_found(message); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#526
  def generate_servlet_root(installed); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#553
  def generate_table_of_contents; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#294
  def get_sorted_module_list(classes); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#652
  def get_svninfo(klass); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#584
  def install_rdoc_static_file(source, destination, options); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#129
  def json_index; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#134
  def methods; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#139
  def modsort; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#154
  def outputdir; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#699
  def render(file_name); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#717
  def render_template(template_file, out_file = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#604
  def setup; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#144
  def store; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#149
  def template_dir; end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#764
  def template_for(file, page = T.unsafe(nil), klass = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#751
  def template_result(template, context, template_file); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#621
  def time_delta_string(seconds); end

  # source://rdoc//lib/rdoc/generator/darkfish.rb#215
  def write_style_sheet; end
end

# source://rdoc//lib/rdoc/generator/json_index.rb#77
class RDoc::Generator::JsonIndex
  include ::RDoc::Text

  # source://rdoc//lib/rdoc/generator/json_index.rb#94
  def initialize(parent_generator, options); end

  # source://rdoc//lib/rdoc/generator/json_index.rb#110
  def build_index; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#271
  def class_dir; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#123
  def debug_msg(*msg); end

  # source://rdoc//lib/rdoc/generator/json_index.rb#278
  def file_dir; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#131
  def generate; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#166
  def generate_gzipped; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#86
  def index; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#211
  def index_classes; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#230
  def index_methods; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#251
  def index_pages; end

  # source://rdoc//lib/rdoc/generator/json_index.rb#282
  def reset(files, classes); end

  # source://rdoc//lib/rdoc/generator/json_index.rb#296
  def search_string(string); end
end

# source://rdoc//lib/rdoc/generator/pot.rb#56
class RDoc::Generator::POT
  # source://rdoc//lib/rdoc/generator/pot.rb#68
  def initialize(store, options); end

  # source://rdoc//lib/rdoc/generator/pot.rb#85
  def class_dir; end

  # source://rdoc//lib/rdoc/generator/pot.rb#76
  def generate; end

  private

  # source://rdoc//lib/rdoc/generator/pot.rb#90
  def extract_messages; end
end

# source://rdoc//lib/rdoc/generator/pot/message_extractor.rb#5
class RDoc::Generator::POT::MessageExtractor
  # source://rdoc//lib/rdoc/generator/pot/message_extractor.rb#10
  def initialize(store); end

  # source://rdoc//lib/rdoc/generator/pot/message_extractor.rb#19
  def extract; end

  private

  # source://rdoc//lib/rdoc/generator/pot/message_extractor.rb#64
  def entry(msgid, options); end

  # source://rdoc//lib/rdoc/generator/pot/message_extractor.rb#28
  def extract_from_klass(klass); end

  # source://rdoc//lib/rdoc/generator/pot/message_extractor.rb#51
  def extract_text(text, comment, location = T.unsafe(nil)); end
end

# source://rdoc//lib/rdoc/generator/pot/po.rb#5
class RDoc::Generator::POT::PO
  # source://rdoc//lib/rdoc/generator/pot/po.rb#10
  def initialize; end

  # source://rdoc//lib/rdoc/generator/pot/po.rb#18
  def add(entry); end

  # source://rdoc//lib/rdoc/generator/pot/po.rb#29
  def to_s; end

  private

  # source://rdoc//lib/rdoc/generator/pot/po.rb#40
  def add_header; end

  # source://rdoc//lib/rdoc/generator/pot/po.rb#44
  def header_entry; end

  # source://rdoc//lib/rdoc/generator/pot/po.rb#73
  def sort_entries; end
end

# source://rdoc//lib/rdoc/generator/pot/po_entry.rb#5
class RDoc::Generator::POT::POEntry
  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#29
  def initialize(msgid, options = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#17
  def extracted_comment; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#23
  def flags; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#56
  def merge(other_entry); end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#8
  def msgid; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#11
  def msgstr; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#20
  def references; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#41
  def to_s; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#14
  def translator_comment; end

  private

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#120
  def escape(string); end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#72
  def format_comment(mark, comment); end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#88
  def format_extracted_comment; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#102
  def format_flags; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#109
  def format_message(message); end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#92
  def format_references; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#84
  def format_translator_comment; end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#137
  def merge_array(array1, array2); end

  # source://rdoc//lib/rdoc/generator/pot/po_entry.rb#133
  def merge_string(string1, string2); end
end

# source://rdoc//lib/rdoc/generator/ri.rb#5
class RDoc::Generator::RI
  # source://rdoc//lib/rdoc/generator/ri.rb#17
  def initialize(store, options); end

  # source://rdoc//lib/rdoc/generator/ri.rb#26
  def generate; end
end

# source://rdoc//lib/rdoc/i18n/locale.rb#10
class RDoc::I18n::Locale
  # source://rdoc//lib/rdoc/i18n/locale.rb#48
  def initialize(name); end

  # source://rdoc//lib/rdoc/i18n/locale.rb#63
  def load(locale_directory); end

  # source://rdoc//lib/rdoc/i18n/locale.rb#42
  def name; end

  # source://rdoc//lib/rdoc/i18n/locale.rb#98
  def translate(message); end

  class << self
    # source://rdoc//lib/rdoc/i18n/locale.rb#19
    def [](locale_name); end

    # source://rdoc//lib/rdoc/i18n/locale.rb#29
    def []=(locale_name, locale); end
  end
end

# source://rdoc//lib/rdoc/i18n/text.rb#12
class RDoc::I18n::Text
  # source://rdoc//lib/rdoc/i18n/text.rb#17
  def initialize(raw); end

  # source://rdoc//lib/rdoc/i18n/text.rb#32
  def extract_messages; end

  # source://rdoc//lib/rdoc/i18n/text.rb#44
  def translate(locale); end

  private

  # source://rdoc//lib/rdoc/i18n/text.rb#88
  def each_line(raw, &block); end

  # source://rdoc//lib/rdoc/i18n/text.rb#101
  def emit_empty_line_event(line, line_no); end

  # source://rdoc//lib/rdoc/i18n/text.rb#110
  def emit_paragraph_event(paragraph, paragraph_start_line, line_no, &block); end

  # source://rdoc//lib/rdoc/i18n/text.rb#60
  def parse(&block); end
end

# source://rdoc//lib/rdoc/markdown.rb#182
class RDoc::Markdown
  # source://rdoc//lib/rdoc/markdown.rb#668
  def initialize(extensions = T.unsafe(nil), debug = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#14705
  def _Alphanumeric; end

  # source://rdoc//lib/rdoc/markdown.rb#14712
  def _AlphanumericAscii; end

  # source://rdoc//lib/rdoc/markdown.rb#1162
  def _AtxHeading; end

  # source://rdoc//lib/rdoc/markdown.rb#1080
  def _AtxInline; end

  # source://rdoc//lib/rdoc/markdown.rb#1136
  def _AtxStart; end

  # source://rdoc//lib/rdoc/markdown.rb#11574
  def _AutoLink; end

  # source://rdoc//lib/rdoc/markdown.rb#11707
  def _AutoLinkEmail; end

  # source://rdoc//lib/rdoc/markdown.rb#11592
  def _AutoLinkUrl; end

  # source://rdoc//lib/rdoc/markdown.rb#14719
  def _BOM; end

  # source://rdoc//lib/rdoc/markdown.rb#14148
  def _BlankLine; end

  # source://rdoc//lib/rdoc/markdown.rb#939
  def _Block; end

  # source://rdoc//lib/rdoc/markdown.rb#1566
  def _BlockQuote; end

  # source://rdoc//lib/rdoc/markdown.rb#1589
  def _BlockQuoteRaw; end

  # source://rdoc//lib/rdoc/markdown.rb#2154
  def _Bullet; end

  # source://rdoc//lib/rdoc/markdown.rb#2198
  def _BulletList; end

  # source://rdoc//lib/rdoc/markdown.rb#14812
  def _CharEntity; end

  # source://rdoc//lib/rdoc/markdown.rb#12511
  def _Code; end

  # source://rdoc//lib/rdoc/markdown.rb#15681
  def _CodeFence; end

  # source://rdoc//lib/rdoc/markdown.rb#14776
  def _DecEntity; end

  # source://rdoc//lib/rdoc/markdown.rb#16339
  def _DefinitionList; end

  # source://rdoc//lib/rdoc/markdown.rb#16482
  def _DefinitionListDefinition; end

  # source://rdoc//lib/rdoc/markdown.rb#16383
  def _DefinitionListItem; end

  # source://rdoc//lib/rdoc/markdown.rb#16449
  def _DefinitionListLabel; end

  # source://rdoc//lib/rdoc/markdown.rb#14691
  def _Digit; end

  # source://rdoc//lib/rdoc/markdown.rb#899
  def _Doc; end

  # source://rdoc//lib/rdoc/markdown.rb#10283
  def _Emph; end

  # source://rdoc//lib/rdoc/markdown.rb#10319
  def _EmphStar; end

  # source://rdoc//lib/rdoc/markdown.rb#10477
  def _EmphUl; end

  # source://rdoc//lib/rdoc/markdown.rb#12086
  def _EmptyTitle; end

  # source://rdoc//lib/rdoc/markdown.rb#9917
  def _Endline; end

  # source://rdoc//lib/rdoc/markdown.rb#9880
  def _Entity; end

  # source://rdoc//lib/rdoc/markdown.rb#2687
  def _Enumerator; end

  # source://rdoc//lib/rdoc/markdown.rb#14542
  def _Eof; end

  # source://rdoc//lib/rdoc/markdown.rb#9841
  def _EscapedChar; end

  # source://rdoc//lib/rdoc/markdown.rb#11147
  def _ExplicitLink; end

  # source://rdoc//lib/rdoc/markdown.rb#15184
  def _ExtendedSpecialChar; end

  # source://rdoc//lib/rdoc/markdown.rb#1548
  def _Heading; end

  # source://rdoc//lib/rdoc/markdown.rb#14740
  def _HexEntity; end

  # source://rdoc//lib/rdoc/markdown.rb#1932
  def _HorizontalRule; end

  # source://rdoc//lib/rdoc/markdown.rb#2971
  def _HtmlAnchor; end

  # source://rdoc//lib/rdoc/markdown.rb#14273
  def _HtmlAttribute; end

  # source://rdoc//lib/rdoc/markdown.rb#8768
  def _HtmlBlock; end

  # source://rdoc//lib/rdoc/markdown.rb#3137
  def _HtmlBlockAddress; end

  # source://rdoc//lib/rdoc/markdown.rb#3303
  def _HtmlBlockBlockquote; end

  # source://rdoc//lib/rdoc/markdown.rb#3469
  def _HtmlBlockCenter; end

  # source://rdoc//lib/rdoc/markdown.rb#3085
  def _HtmlBlockCloseAddress; end

  # source://rdoc//lib/rdoc/markdown.rb#3251
  def _HtmlBlockCloseBlockquote; end

  # source://rdoc//lib/rdoc/markdown.rb#3417
  def _HtmlBlockCloseCenter; end

  # source://rdoc//lib/rdoc/markdown.rb#6737
  def _HtmlBlockCloseDd; end

  # source://rdoc//lib/rdoc/markdown.rb#3583
  def _HtmlBlockCloseDir; end

  # source://rdoc//lib/rdoc/markdown.rb#3749
  def _HtmlBlockCloseDiv; end

  # source://rdoc//lib/rdoc/markdown.rb#3915
  def _HtmlBlockCloseDl; end

  # source://rdoc//lib/rdoc/markdown.rb#6903
  def _HtmlBlockCloseDt; end

  # source://rdoc//lib/rdoc/markdown.rb#4081
  def _HtmlBlockCloseFieldset; end

  # source://rdoc//lib/rdoc/markdown.rb#4247
  def _HtmlBlockCloseForm; end

  # source://rdoc//lib/rdoc/markdown.rb#7069
  def _HtmlBlockCloseFrameset; end

  # source://rdoc//lib/rdoc/markdown.rb#4413
  def _HtmlBlockCloseH1; end

  # source://rdoc//lib/rdoc/markdown.rb#4579
  def _HtmlBlockCloseH2; end

  # source://rdoc//lib/rdoc/markdown.rb#4745
  def _HtmlBlockCloseH3; end

  # source://rdoc//lib/rdoc/markdown.rb#4911
  def _HtmlBlockCloseH4; end

  # source://rdoc//lib/rdoc/markdown.rb#5077
  def _HtmlBlockCloseH5; end

  # source://rdoc//lib/rdoc/markdown.rb#5243
  def _HtmlBlockCloseH6; end

  # source://rdoc//lib/rdoc/markdown.rb#8552
  def _HtmlBlockCloseHead; end

  # source://rdoc//lib/rdoc/markdown.rb#7235
  def _HtmlBlockCloseLi; end

  # source://rdoc//lib/rdoc/markdown.rb#5409
  def _HtmlBlockCloseMenu; end

  # source://rdoc//lib/rdoc/markdown.rb#5575
  def _HtmlBlockCloseNoframes; end

  # source://rdoc//lib/rdoc/markdown.rb#5741
  def _HtmlBlockCloseNoscript; end

  # source://rdoc//lib/rdoc/markdown.rb#5907
  def _HtmlBlockCloseOl; end

  # source://rdoc//lib/rdoc/markdown.rb#6073
  def _HtmlBlockCloseP; end

  # source://rdoc//lib/rdoc/markdown.rb#6239
  def _HtmlBlockClosePre; end

  # source://rdoc//lib/rdoc/markdown.rb#8397
  def _HtmlBlockCloseScript; end

  # source://rdoc//lib/rdoc/markdown.rb#6405
  def _HtmlBlockCloseTable; end

  # source://rdoc//lib/rdoc/markdown.rb#7401
  def _HtmlBlockCloseTbody; end

  # source://rdoc//lib/rdoc/markdown.rb#7567
  def _HtmlBlockCloseTd; end

  # source://rdoc//lib/rdoc/markdown.rb#7733
  def _HtmlBlockCloseTfoot; end

  # source://rdoc//lib/rdoc/markdown.rb#7899
  def _HtmlBlockCloseTh; end

  # source://rdoc//lib/rdoc/markdown.rb#8065
  def _HtmlBlockCloseThead; end

  # source://rdoc//lib/rdoc/markdown.rb#8231
  def _HtmlBlockCloseTr; end

  # source://rdoc//lib/rdoc/markdown.rb#6571
  def _HtmlBlockCloseUl; end

  # source://rdoc//lib/rdoc/markdown.rb#6789
  def _HtmlBlockDd; end

  # source://rdoc//lib/rdoc/markdown.rb#3635
  def _HtmlBlockDir; end

  # source://rdoc//lib/rdoc/markdown.rb#3801
  def _HtmlBlockDiv; end

  # source://rdoc//lib/rdoc/markdown.rb#3967
  def _HtmlBlockDl; end

  # source://rdoc//lib/rdoc/markdown.rb#6955
  def _HtmlBlockDt; end

  # source://rdoc//lib/rdoc/markdown.rb#4133
  def _HtmlBlockFieldset; end

  # source://rdoc//lib/rdoc/markdown.rb#4299
  def _HtmlBlockForm; end

  # source://rdoc//lib/rdoc/markdown.rb#7121
  def _HtmlBlockFrameset; end

  # source://rdoc//lib/rdoc/markdown.rb#4465
  def _HtmlBlockH1; end

  # source://rdoc//lib/rdoc/markdown.rb#4631
  def _HtmlBlockH2; end

  # source://rdoc//lib/rdoc/markdown.rb#4797
  def _HtmlBlockH3; end

  # source://rdoc//lib/rdoc/markdown.rb#4963
  def _HtmlBlockH4; end

  # source://rdoc//lib/rdoc/markdown.rb#5129
  def _HtmlBlockH5; end

  # source://rdoc//lib/rdoc/markdown.rb#5295
  def _HtmlBlockH6; end

  # source://rdoc//lib/rdoc/markdown.rb#8604
  def _HtmlBlockHead; end

  # source://rdoc//lib/rdoc/markdown.rb#8651
  def _HtmlBlockInTags; end

  # source://rdoc//lib/rdoc/markdown.rb#7287
  def _HtmlBlockLi; end

  # source://rdoc//lib/rdoc/markdown.rb#5461
  def _HtmlBlockMenu; end

  # source://rdoc//lib/rdoc/markdown.rb#5627
  def _HtmlBlockNoframes; end

  # source://rdoc//lib/rdoc/markdown.rb#5793
  def _HtmlBlockNoscript; end

  # source://rdoc//lib/rdoc/markdown.rb#5959
  def _HtmlBlockOl; end

  # source://rdoc//lib/rdoc/markdown.rb#3029
  def _HtmlBlockOpenAddress; end

  # source://rdoc//lib/rdoc/markdown.rb#3195
  def _HtmlBlockOpenBlockquote; end

  # source://rdoc//lib/rdoc/markdown.rb#3361
  def _HtmlBlockOpenCenter; end

  # source://rdoc//lib/rdoc/markdown.rb#6681
  def _HtmlBlockOpenDd; end

  # source://rdoc//lib/rdoc/markdown.rb#3527
  def _HtmlBlockOpenDir; end

  # source://rdoc//lib/rdoc/markdown.rb#3693
  def _HtmlBlockOpenDiv; end

  # source://rdoc//lib/rdoc/markdown.rb#3859
  def _HtmlBlockOpenDl; end

  # source://rdoc//lib/rdoc/markdown.rb#6847
  def _HtmlBlockOpenDt; end

  # source://rdoc//lib/rdoc/markdown.rb#4025
  def _HtmlBlockOpenFieldset; end

  # source://rdoc//lib/rdoc/markdown.rb#4191
  def _HtmlBlockOpenForm; end

  # source://rdoc//lib/rdoc/markdown.rb#7013
  def _HtmlBlockOpenFrameset; end

  # source://rdoc//lib/rdoc/markdown.rb#4357
  def _HtmlBlockOpenH1; end

  # source://rdoc//lib/rdoc/markdown.rb#4523
  def _HtmlBlockOpenH2; end

  # source://rdoc//lib/rdoc/markdown.rb#4689
  def _HtmlBlockOpenH3; end

  # source://rdoc//lib/rdoc/markdown.rb#4855
  def _HtmlBlockOpenH4; end

  # source://rdoc//lib/rdoc/markdown.rb#5021
  def _HtmlBlockOpenH5; end

  # source://rdoc//lib/rdoc/markdown.rb#5187
  def _HtmlBlockOpenH6; end

  # source://rdoc//lib/rdoc/markdown.rb#8496
  def _HtmlBlockOpenHead; end

  # source://rdoc//lib/rdoc/markdown.rb#7179
  def _HtmlBlockOpenLi; end

  # source://rdoc//lib/rdoc/markdown.rb#5353
  def _HtmlBlockOpenMenu; end

  # source://rdoc//lib/rdoc/markdown.rb#5519
  def _HtmlBlockOpenNoframes; end

  # source://rdoc//lib/rdoc/markdown.rb#5685
  def _HtmlBlockOpenNoscript; end

  # source://rdoc//lib/rdoc/markdown.rb#5851
  def _HtmlBlockOpenOl; end

  # source://rdoc//lib/rdoc/markdown.rb#6017
  def _HtmlBlockOpenP; end

  # source://rdoc//lib/rdoc/markdown.rb#6183
  def _HtmlBlockOpenPre; end

  # source://rdoc//lib/rdoc/markdown.rb#8341
  def _HtmlBlockOpenScript; end

  # source://rdoc//lib/rdoc/markdown.rb#6349
  def _HtmlBlockOpenTable; end

  # source://rdoc//lib/rdoc/markdown.rb#7345
  def _HtmlBlockOpenTbody; end

  # source://rdoc//lib/rdoc/markdown.rb#7511
  def _HtmlBlockOpenTd; end

  # source://rdoc//lib/rdoc/markdown.rb#7677
  def _HtmlBlockOpenTfoot; end

  # source://rdoc//lib/rdoc/markdown.rb#7843
  def _HtmlBlockOpenTh; end

  # source://rdoc//lib/rdoc/markdown.rb#8009
  def _HtmlBlockOpenThead; end

  # source://rdoc//lib/rdoc/markdown.rb#8175
  def _HtmlBlockOpenTr; end

  # source://rdoc//lib/rdoc/markdown.rb#6515
  def _HtmlBlockOpenUl; end

  # source://rdoc//lib/rdoc/markdown.rb#6125
  def _HtmlBlockP; end

  # source://rdoc//lib/rdoc/markdown.rb#6291
  def _HtmlBlockPre; end

  # source://rdoc//lib/rdoc/markdown.rb#8449
  def _HtmlBlockScript; end

  # source://rdoc//lib/rdoc/markdown.rb#8896
  def _HtmlBlockSelfClosing; end

  # source://rdoc//lib/rdoc/markdown.rb#6457
  def _HtmlBlockTable; end

  # source://rdoc//lib/rdoc/markdown.rb#7453
  def _HtmlBlockTbody; end

  # source://rdoc//lib/rdoc/markdown.rb#7619
  def _HtmlBlockTd; end

  # source://rdoc//lib/rdoc/markdown.rb#7785
  def _HtmlBlockTfoot; end

  # source://rdoc//lib/rdoc/markdown.rb#7951
  def _HtmlBlockTh; end

  # source://rdoc//lib/rdoc/markdown.rb#8117
  def _HtmlBlockThead; end

  # source://rdoc//lib/rdoc/markdown.rb#8283
  def _HtmlBlockTr; end

  # source://rdoc//lib/rdoc/markdown.rb#8951
  def _HtmlBlockType; end

  # source://rdoc//lib/rdoc/markdown.rb#6623
  def _HtmlBlockUl; end

  # source://rdoc//lib/rdoc/markdown.rb#2919
  def _HtmlCloseAnchor; end

  # source://rdoc//lib/rdoc/markdown.rb#14415
  def _HtmlComment; end

  # source://rdoc//lib/rdoc/markdown.rb#2863
  def _HtmlOpenAnchor; end

  # source://rdoc//lib/rdoc/markdown.rb#14462
  def _HtmlTag; end

  # source://rdoc//lib/rdoc/markdown.rb#8828
  def _HtmlUnclosed; end

  # source://rdoc//lib/rdoc/markdown.rb#8878
  def _HtmlUnclosedType; end

  # source://rdoc//lib/rdoc/markdown.rb#10972
  def _Image; end

  # source://rdoc//lib/rdoc/markdown.rb#9281
  def _InStyleTags; end

  # source://rdoc//lib/rdoc/markdown.rb#14860
  def _Indent; end

  # source://rdoc//lib/rdoc/markdown.rb#14867
  def _IndentedLine; end

  # source://rdoc//lib/rdoc/markdown.rb#9586
  def _Inline; end

  # source://rdoc//lib/rdoc/markdown.rb#15431
  def _InlineNote; end

  # source://rdoc//lib/rdoc/markdown.rb#9365
  def _Inlines; end

  # source://rdoc//lib/rdoc/markdown.rb#11907
  def _Label; end

  # source://rdoc//lib/rdoc/markdown.rb#14938
  def _Line; end

  # source://rdoc//lib/rdoc/markdown.rb#10042
  def _LineBreak; end

  # source://rdoc//lib/rdoc/markdown.rb#11011
  def _Link; end

  # source://rdoc//lib/rdoc/markdown.rb#2548
  def _ListBlock; end

  # source://rdoc//lib/rdoc/markdown.rb#2793
  def _ListBlockLine; end

  # source://rdoc//lib/rdoc/markdown.rb#2592
  def _ListContinuationBlock; end

  # source://rdoc//lib/rdoc/markdown.rb#2392
  def _ListItem; end

  # source://rdoc//lib/rdoc/markdown.rb#2468
  def _ListItemTight; end

  # source://rdoc//lib/rdoc/markdown.rb#2304
  def _ListLoose; end

  # source://rdoc//lib/rdoc/markdown.rb#2239
  def _ListTight; end

  # source://rdoc//lib/rdoc/markdown.rb#14726
  def _Newline; end

  # source://rdoc//lib/rdoc/markdown.rb#1821
  def _NonblankIndentedLine; end

  # source://rdoc//lib/rdoc/markdown.rb#14853
  def _NonindentSpace; end

  # source://rdoc//lib/rdoc/markdown.rb#14552
  def _Nonspacechar; end

  # source://rdoc//lib/rdoc/markdown.rb#14653
  def _NormalChar; end

  # source://rdoc//lib/rdoc/markdown.rb#9938
  def _NormalEndline; end

  # source://rdoc//lib/rdoc/markdown.rb#15333
  def _Note; end

  # source://rdoc//lib/rdoc/markdown.rb#15207
  def _NoteReference; end

  # source://rdoc//lib/rdoc/markdown.rb#15538
  def _Notes; end

  # source://rdoc//lib/rdoc/markdown.rb#14888
  def _OptionallyIndentedLine; end

  # source://rdoc//lib/rdoc/markdown.rb#2752
  def _OrderedList; end

  # source://rdoc//lib/rdoc/markdown.rb#1014
  def _Para; end

  # source://rdoc//lib/rdoc/markdown.rb#1057
  def _Plain; end

  # source://rdoc//lib/rdoc/markdown.rb#14175
  def _Quoted; end

  # source://rdoc//lib/rdoc/markdown.rb#14108
  def _RawHtml; end

  # source://rdoc//lib/rdoc/markdown.rb#14961
  def _RawLine; end

  # source://rdoc//lib/rdoc/markdown.rb#15560
  def _RawNoteBlock; end

  # source://rdoc//lib/rdoc/markdown.rb#15237
  def _RawNoteReference; end

  # source://rdoc//lib/rdoc/markdown.rb#12026
  def _RefSrc; end

  # source://rdoc//lib/rdoc/markdown.rb#12062
  def _RefTitle; end

  # source://rdoc//lib/rdoc/markdown.rb#12185
  def _RefTitleDouble; end

  # source://rdoc//lib/rdoc/markdown.rb#12277
  def _RefTitleParens; end

  # source://rdoc//lib/rdoc/markdown.rb#12093
  def _RefTitleSingle; end

  # source://rdoc//lib/rdoc/markdown.rb#11832
  def _Reference; end

  # source://rdoc//lib/rdoc/markdown.rb#11032
  def _ReferenceLink; end

  # source://rdoc//lib/rdoc/markdown.rb#11050
  def _ReferenceLinkDouble; end

  # source://rdoc//lib/rdoc/markdown.rb#11096
  def _ReferenceLinkSingle; end

  # source://rdoc//lib/rdoc/markdown.rb#12369
  def _References; end

  # source://rdoc//lib/rdoc/markdown.rb#1262
  def _SetextBottom1; end

  # source://rdoc//lib/rdoc/markdown.rb#1283
  def _SetextBottom2; end

  # source://rdoc//lib/rdoc/markdown.rb#1244
  def _SetextHeading; end

  # source://rdoc//lib/rdoc/markdown.rb#1304
  def _SetextHeading1; end

  # source://rdoc//lib/rdoc/markdown.rb#1426
  def _SetextHeading2; end

  # source://rdoc//lib/rdoc/markdown.rb#15040
  def _SkipBlock; end

  # source://rdoc//lib/rdoc/markdown.rb#11206
  def _Source; end

  # source://rdoc//lib/rdoc/markdown.rb#11266
  def _SourceContents; end

  # source://rdoc//lib/rdoc/markdown.rb#14584
  def _Sp; end

  # source://rdoc//lib/rdoc/markdown.rb#9646
  def _Space; end

  # source://rdoc//lib/rdoc/markdown.rb#14733
  def _Spacechar; end

  # source://rdoc//lib/rdoc/markdown.rb#14635
  def _SpecialChar; end

  # source://rdoc//lib/rdoc/markdown.rb#14595
  def _Spnl; end

  # source://rdoc//lib/rdoc/markdown.rb#10129
  def _StarLine; end

  # source://rdoc//lib/rdoc/markdown.rb#14914
  def _StartList; end

  # source://rdoc//lib/rdoc/markdown.rb#9678
  def _Str; end

  # source://rdoc//lib/rdoc/markdown.rb#9751
  def _StrChunk; end

  # source://rdoc//lib/rdoc/markdown.rb#10861
  def _Strike; end

  # source://rdoc//lib/rdoc/markdown.rb#10635
  def _Strong; end

  # source://rdoc//lib/rdoc/markdown.rb#10653
  def _StrongStar; end

  # source://rdoc//lib/rdoc/markdown.rb#10757
  def _StrongUl; end

  # source://rdoc//lib/rdoc/markdown.rb#9328
  def _StyleBlock; end

  # source://rdoc//lib/rdoc/markdown.rb#9229
  def _StyleClose; end

  # source://rdoc//lib/rdoc/markdown.rb#9173
  def _StyleOpen; end

  # source://rdoc//lib/rdoc/markdown.rb#10069
  def _Symbol; end

  # source://rdoc//lib/rdoc/markdown.rb#15937
  def _Table; end

  # source://rdoc//lib/rdoc/markdown.rb#16304
  def _TableAlign; end

  # source://rdoc//lib/rdoc/markdown.rb#16278
  def _TableAlign2; end

  # source://rdoc//lib/rdoc/markdown.rb#15993
  def _TableHead; end

  # source://rdoc//lib/rdoc/markdown.rb#16159
  def _TableItem; end

  # source://rdoc//lib/rdoc/markdown.rb#16138
  def _TableItem2; end

  # source://rdoc//lib/rdoc/markdown.rb#16185
  def _TableLine; end

  # source://rdoc//lib/rdoc/markdown.rb#16045
  def _TableRow; end

  # source://rdoc//lib/rdoc/markdown.rb#10016
  def _TerminalEndline; end

  # source://rdoc//lib/rdoc/markdown.rb#12391
  def _Ticks1; end

  # source://rdoc//lib/rdoc/markdown.rb#12415
  def _Ticks2; end

  # source://rdoc//lib/rdoc/markdown.rb#12439
  def _Ticks3; end

  # source://rdoc//lib/rdoc/markdown.rb#12463
  def _Ticks4; end

  # source://rdoc//lib/rdoc/markdown.rb#12487
  def _Ticks5; end

  # source://rdoc//lib/rdoc/markdown.rb#11383
  def _Title; end

  # source://rdoc//lib/rdoc/markdown.rb#11497
  def _TitleDouble; end

  # source://rdoc//lib/rdoc/markdown.rb#11420
  def _TitleSingle; end

  # source://rdoc//lib/rdoc/markdown.rb#10206
  def _UlLine; end

  # source://rdoc//lib/rdoc/markdown.rb#10095
  def _UlOrStarLine; end

  # source://rdoc//lib/rdoc/markdown.rb#1895
  def _Verbatim; end

  # source://rdoc//lib/rdoc/markdown.rb#1845
  def _VerbatimChunk; end

  # source://rdoc//lib/rdoc/markdown.rb#10301
  def _Whitespace; end

  # source://rdoc//lib/rdoc/markdown.rb#892
  def _root; end

  # source://rdoc//lib/rdoc/markdown.rb#502
  def apply(rule); end

  # source://rdoc//lib/rdoc/markdown.rb#468
  def apply_with_args(rule, *args); end

  # source://rdoc//lib/rdoc/markdown.rb#610
  def break_on_newline=(enable); end

  # source://rdoc//lib/rdoc/markdown.rb#606
  def break_on_newline?; end

  # source://rdoc//lib/rdoc/markdown.rb#610
  def css=(enable); end

  # source://rdoc//lib/rdoc/markdown.rb#606
  def css?; end

  # source://rdoc//lib/rdoc/markdown.rb#250
  def current_character(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#211
  def current_column(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#234
  def current_line(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#259
  def current_pos_info(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#610
  def definition_lists=(enable); end

  # source://rdoc//lib/rdoc/markdown.rb#606
  def definition_lists?; end

  # source://rdoc//lib/rdoc/markdown.rb#683
  def emphasis(text); end

  # source://rdoc//lib/rdoc/markdown.rb#705
  def extension(name, enable); end

  # source://rdoc//lib/rdoc/markdown.rb#696
  def extension?(name); end

  # source://rdoc//lib/rdoc/markdown.rb#449
  def external_invoke(other, rule, *args); end

  # source://rdoc//lib/rdoc/markdown.rb#371
  def failed_rule; end

  # source://rdoc//lib/rdoc/markdown.rb#208
  def failing_rule_offset; end

  # source://rdoc//lib/rdoc/markdown.rb#318
  def failure_caret; end

  # source://rdoc//lib/rdoc/markdown.rb#323
  def failure_character; end

  # source://rdoc//lib/rdoc/markdown.rb#306
  def failure_info; end

  # source://rdoc//lib/rdoc/markdown.rb#327
  def failure_oneline; end

  # source://rdoc//lib/rdoc/markdown.rb#393
  def get_byte; end

  # source://rdoc//lib/rdoc/markdown.rb#271
  def get_line(no); end

  # source://rdoc//lib/rdoc/markdown.rb#285
  def get_text(start); end

  # source://rdoc//lib/rdoc/markdown.rb#610
  def github=(enable); end

  # source://rdoc//lib/rdoc/markdown.rb#606
  def github?; end

  # source://rdoc//lib/rdoc/markdown.rb#535
  def grow_lr(rule, args, start_pos, m); end

  # source://rdoc//lib/rdoc/markdown.rb#610
  def html=(enable); end

  # source://rdoc//lib/rdoc/markdown.rb#606
  def html?; end

  # source://rdoc//lib/rdoc/markdown.rb#717
  def inner_parse(text); end

  # source://rdoc//lib/rdoc/markdown.rb#267
  def lines; end

  # source://rdoc//lib/rdoc/markdown.rb#737
  def link_to(content, label = T.unsafe(nil), text = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#754
  def list_item_from(unparsed); end

  # source://rdoc//lib/rdoc/markdown.rb#373
  def match_string(str); end

  # source://rdoc//lib/rdoc/markdown.rb#762
  def note(label); end

  # source://rdoc//lib/rdoc/markdown.rb#776
  def note_for(ref); end

  # source://rdoc//lib/rdoc/markdown.rb#610
  def notes=(enable); end

  # source://rdoc//lib/rdoc/markdown.rb#606
  def notes?; end

  # source://rdoc//lib/rdoc/markdown.rb#793
  def paragraph(parts); end

  # source://rdoc//lib/rdoc/markdown.rb#808
  def parse(markdown); end

  # source://rdoc//lib/rdoc/markdown.rb#414
  def peg_parse(rule = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#209
  def pos; end

  # source://rdoc//lib/rdoc/markdown.rb#209
  def pos=(_arg0); end

  # source://rdoc//lib/rdoc/markdown.rb#221
  def position_line_offsets; end

  # source://rdoc//lib/rdoc/markdown.rb#341
  def raise_error; end

  # source://rdoc//lib/rdoc/markdown.rb#855
  def reference(label, link); end

  # source://rdoc//lib/rdoc/markdown.rb#209
  def result; end

  # source://rdoc//lib/rdoc/markdown.rb#209
  def result=(_arg0); end

  # source://rdoc//lib/rdoc/markdown.rb#383
  def scan(reg); end

  # source://rdoc//lib/rdoc/markdown.rb#364
  def set_failed_rule(name); end

  # source://rdoc//lib/rdoc/markdown.rb#290
  def set_string(string, pos); end

  # source://rdoc//lib/rdoc/markdown.rb#887
  def setup_foreign_grammar; end

  # source://rdoc//lib/rdoc/markdown.rb#196
  def setup_parser(str, debug = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#345
  def show_error(io = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown.rb#297
  def show_pos; end

  # source://rdoc//lib/rdoc/markdown.rb#877
  def strike(text); end

  # source://rdoc//lib/rdoc/markdown.rb#610
  def strike=(enable); end

  # source://rdoc//lib/rdoc/markdown.rb#606
  def strike?; end

  # source://rdoc//lib/rdoc/markdown.rb#207
  def string; end

  # source://rdoc//lib/rdoc/markdown.rb#866
  def strong(text); end

  private

  # source://rdoc//lib/rdoc/markdown.rb#188
  def orig_initialize(str, debug = T.unsafe(nil)); end

  class << self
    # source://rdoc//lib/rdoc/markdown.rb#603
    def extension(name); end

    # source://rdoc//lib/rdoc/markdown.rb#656
    def parse(markdown); end

    # source://rdoc//lib/rdoc/markdown.rb#566
    def rule_info(name, rendered); end
  end
end

# source://rdoc//lib/rdoc/markdown.rb#257
class RDoc::Markdown::KpegPosInfo < ::Struct
  def char; end
  def char=(_); end
  def col; end
  def col=(_); end
  def line; end
  def line=(_); end
  def lno; end
  def lno=(_); end
  def pos; end
  def pos=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rdoc//lib/rdoc/markdown/literals.rb#11
class RDoc::Markdown::Literals
  # source://rdoc//lib/rdoc/markdown/literals.rb#17
  def initialize(str, debug = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#405
  def _Alphanumeric; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#412
  def _AlphanumericAscii; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#419
  def _BOM; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#426
  def _Newline; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#433
  def _NonAlphanumeric; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#440
  def _Spacechar; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#331
  def apply(rule); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#297
  def apply_with_args(rule, *args); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#79
  def current_character(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#40
  def current_column(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#63
  def current_line(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#88
  def current_pos_info(target = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#278
  def external_invoke(other, rule, *args); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#200
  def failed_rule; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#37
  def failing_rule_offset; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#147
  def failure_caret; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#152
  def failure_character; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#135
  def failure_info; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#156
  def failure_oneline; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#222
  def get_byte; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#100
  def get_line(no); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#114
  def get_text(start); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#364
  def grow_lr(rule, args, start_pos, m); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#96
  def lines; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#202
  def match_string(str); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#243
  def parse(rule = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#38
  def pos; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#38
  def pos=(_arg0); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#50
  def position_line_offsets; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#170
  def raise_error; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#38
  def result; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#38
  def result=(_arg0); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#212
  def scan(reg); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#193
  def set_failed_rule(name); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#119
  def set_string(string, pos); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#402
  def setup_foreign_grammar; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#25
  def setup_parser(str, debug = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#174
  def show_error(io = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#126
  def show_pos; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#36
  def string; end

  class << self
    # source://rdoc//lib/rdoc/markdown/literals.rb#395
    def rule_info(name, rendered); end
  end
end

# source://rdoc//lib/rdoc/markdown/literals.rb#86
class RDoc::Markdown::Literals::KpegPosInfo < ::Struct
  def char; end
  def char=(_); end
  def col; end
  def col=(_); end
  def line; end
  def line=(_); end
  def lno; end
  def lno=(_); end
  def pos; end
  def pos=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rdoc//lib/rdoc/markdown/literals.rb#257
class RDoc::Markdown::Literals::MemoEntry
  # source://rdoc//lib/rdoc/markdown/literals.rb#258
  def initialize(ans, pos); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#266
  def ans; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#267
  def left_rec; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#267
  def left_rec=(_arg0); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#269
  def move!(ans, pos, result); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#266
  def pos; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#266
  def result; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#266
  def set; end
end

# source://rdoc//lib/rdoc/markdown/literals.rb#386
class RDoc::Markdown::Literals::RuleInfo
  # source://rdoc//lib/rdoc/markdown/literals.rb#387
  def initialize(name, rendered); end

  # source://rdoc//lib/rdoc/markdown/literals.rb#392
  def name; end

  # source://rdoc//lib/rdoc/markdown/literals.rb#392
  def rendered; end
end

# source://rdoc//lib/rdoc/markdown.rb#428
class RDoc::Markdown::MemoEntry
  # source://rdoc//lib/rdoc/markdown.rb#429
  def initialize(ans, pos); end

  # source://rdoc//lib/rdoc/markdown.rb#437
  def ans; end

  # source://rdoc//lib/rdoc/markdown.rb#438
  def left_rec; end

  # source://rdoc//lib/rdoc/markdown.rb#438
  def left_rec=(_arg0); end

  # source://rdoc//lib/rdoc/markdown.rb#440
  def move!(ans, pos, result); end

  # source://rdoc//lib/rdoc/markdown.rb#437
  def pos; end

  # source://rdoc//lib/rdoc/markdown.rb#437
  def result; end

  # source://rdoc//lib/rdoc/markdown.rb#437
  def set; end
end

# source://rdoc//lib/rdoc/markdown.rb#557
class RDoc::Markdown::RuleInfo
  # source://rdoc//lib/rdoc/markdown.rb#558
  def initialize(name, rendered); end

  # source://rdoc//lib/rdoc/markdown.rb#563
  def name; end

  # source://rdoc//lib/rdoc/markdown.rb#563
  def rendered; end
end

# source://rdoc//lib/rdoc/markup.rb#106
class RDoc::Markup
  # source://rdoc//lib/rdoc/markup.rb#146
  def initialize(attribute_manager = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup.rb#163
  def add_html(tag, name); end

  # source://rdoc//lib/rdoc/markup.rb#175
  def add_regexp_handling(pattern, name); end

  # source://rdoc//lib/rdoc/markup.rb#156
  def add_word_pair(start, stop, name); end

  # source://rdoc//lib/rdoc/markup.rb#111
  def attribute_manager; end

  # source://rdoc//lib/rdoc/markup.rb#183
  def convert(input, formatter); end

  class << self
    # source://rdoc//lib/rdoc/markup.rb#116
    def parse(str); end
  end
end

# source://rdoc//lib/rdoc/markup/attr_changer.rb#4
class RDoc::Markup::AttrChanger < ::Struct
  # source://rdoc//lib/rdoc/markup/attr_changer.rb#18
  def inspect; end

  # source://rdoc//lib/rdoc/markup/attr_changer.rb#14
  def to_s; end
end

# source://rdoc//lib/rdoc/markup/attr_span.rb#5
class RDoc::Markup::AttrSpan
  # source://rdoc//lib/rdoc/markup/attr_span.rb#10
  def initialize(length, exclusive); end

  # source://rdoc//lib/rdoc/markup/attr_span.rb#31
  def [](n); end

  # source://rdoc//lib/rdoc/markup/attr_span.rb#17
  def set_attrs(start, length, bits); end
end

# source://rdoc//lib/rdoc/markup/attribute_manager.rb#6
class RDoc::Markup::AttributeManager
  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#80
  def initialize; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#286
  def add_html(tag, name, exclusive = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#298
  def add_regexp_handling(pattern, name, exclusive = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#261
  def add_word_pair(start, stop, name, exclusive = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#103
  def attribute(turn_on, turn_off); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#40
  def attributes; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#110
  def change_attribute(current, new); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#119
  def changed_attribute_by_name(current_set, new_set); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#154
  def convert_attrs(str, attrs, exclusive = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#160
  def convert_attrs_matching_word_pairs(str, attrs, exclusive); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#185
  def convert_attrs_word_pair_map(str, attrs, exclusive); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#206
  def convert_html(str, attrs, exclusive = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#223
  def convert_regexp_handlings(str, attrs, exclusive = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#135
  def copy_string(start_pos, end_pos); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#329
  def display_attributes; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#142
  def exclusive?(attr); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#74
  def exclusive_bitmap; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#307
  def flow(str); end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#58
  def html_tags; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#239
  def mask_protected_sequences; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#47
  def matching_word_pairs; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#64
  def protectable; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#70
  def regexp_handlings; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#354
  def split_into_flow; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#251
  def unmask_protected_sequences; end

  # source://rdoc//lib/rdoc/markup/attribute_manager.rb#53
  def word_pair_map; end
end

# source://rdoc//lib/rdoc/markup/attribute_manager.rb#147
RDoc::Markup::AttributeManager::NON_PRINTING_END = T.let(T.unsafe(nil), String)

# source://rdoc//lib/rdoc/markup/attribute_manager.rb#146
RDoc::Markup::AttributeManager::NON_PRINTING_START = T.let(T.unsafe(nil), String)

# source://rdoc//lib/rdoc/markup/attributes.rb#6
class RDoc::Markup::Attributes
  # source://rdoc//lib/rdoc/markup/attributes.rb#16
  def initialize; end

  # source://rdoc//lib/rdoc/markup/attributes.rb#46
  def as_string(bitmap); end

  # source://rdoc//lib/rdoc/markup/attributes.rb#29
  def bitmap_for(name); end

  # source://rdoc//lib/rdoc/markup/attributes.rb#60
  def each_name_of(bitmap); end

  # source://rdoc//lib/rdoc/markup/attributes.rb#11
  def regexp_handling; end
end

# source://rdoc//lib/rdoc/markup/blank_line.rb#5
class RDoc::Markup::BlankLine
  # source://rdoc//lib/rdoc/markup/blank_line.rb#19
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/blank_line.rb#23
  def pretty_print(q); end

  class << self
    # source://rdoc//lib/rdoc/markup/blank_line.rb#12
    def new; end
  end
end

# source://rdoc//lib/rdoc/markup/block_quote.rb#5
class RDoc::Markup::BlockQuote < ::RDoc::Markup::Raw
  # source://rdoc//lib/rdoc/markup/block_quote.rb#10
  def accept(visitor); end
end

# source://rdoc//lib/rdoc/markup/document.rb#5
class RDoc::Markup::Document
  include ::Enumerable

  # source://rdoc//lib/rdoc/markup/document.rb#29
  def initialize(*parts); end

  # source://rdoc//lib/rdoc/markup/document.rb#40
  def <<(part); end

  # source://rdoc//lib/rdoc/markup/document.rb#56
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/document.rb#65
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/document.rb#76
  def concat(parts); end

  # source://rdoc//lib/rdoc/markup/document.rb#83
  def each(&block); end

  # source://rdoc//lib/rdoc/markup/document.rb#90
  def empty?; end

  # source://rdoc//lib/rdoc/markup/document.rb#13
  def file; end

  # source://rdoc//lib/rdoc/markup/document.rb#97
  def file=(location); end

  # source://rdoc//lib/rdoc/markup/document.rb#114
  def merge(other); end

  # source://rdoc//lib/rdoc/markup/document.rb#134
  def merged?; end

  # source://rdoc//lib/rdoc/markup/document.rb#19
  def omit_headings_below; end

  # source://rdoc//lib/rdoc/markup/document.rb#19
  def omit_headings_below=(_arg0); end

  # source://rdoc//lib/rdoc/markup/document.rb#24
  def parts; end

  # source://rdoc//lib/rdoc/markup/document.rb#138
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/markup/document.rb#151
  def push(*parts); end

  # source://rdoc//lib/rdoc/markup/document.rb#160
  def table_of_contents; end
end

# source://rdoc//lib/rdoc/markup/formatter.rb#13
class RDoc::Markup::Formatter
  # source://rdoc//lib/rdoc/markup/formatter.rb#48
  def initialize(options, markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#69
  def accept_document(document); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#83
  def add_regexp_handling_RDOCLINK; end

  # source://rdoc//lib/rdoc/markup/formatter.rb#91
  def add_regexp_handling_TIDYLINK; end

  # source://rdoc//lib/rdoc/markup/formatter.rb#105
  def add_tag(name, start, stop); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#113
  def annotate(tag); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#120
  def convert(content); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#127
  def convert_flow(flow); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#150
  def convert_regexp_handling(target); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#176
  def convert_string(string); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def ignore(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#194
  def in_tt?; end

  # source://rdoc//lib/rdoc/markup/formatter.rb#216
  def off_tags(res, item); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#201
  def on_tags(res, item); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#231
  def parse_url(url); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#261
  def tt?(tag); end

  class << self
    # source://rdoc//lib/rdoc/markup/formatter.rb#24
    def gen_relative_url(path, target); end
  end
end

# source://rdoc//lib/rdoc/markup/hard_break.rb#5
class RDoc::Markup::HardBreak
  # source://rdoc//lib/rdoc/markup/hard_break.rb#23
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/hard_break.rb#19
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/hard_break.rb#27
  def pretty_print(q); end

  class << self
    # source://rdoc//lib/rdoc/markup/hard_break.rb#12
    def new; end
  end
end

# source://rdoc//lib/rdoc/markup/heading.rb#6
class RDoc::Markup::Heading < ::Struct
  # source://rdoc//lib/rdoc/markup/heading.rb#40
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/heading.rb#47
  def aref; end

  # source://rdoc//lib/rdoc/markup/heading.rb#55
  def label(context = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/heading.rb#68
  def plain_html; end

  # source://rdoc//lib/rdoc/markup/heading.rb#72
  def pretty_print(q); end

  class << self
    # source://rdoc//lib/rdoc/markup/heading.rb#22
    def to_html; end

    # source://rdoc//lib/rdoc/markup/heading.rb#14
    def to_label; end
  end
end

# source://rdoc//lib/rdoc/markup/include.rb#8
class RDoc::Markup::Include
  # source://rdoc//lib/rdoc/markup/include.rb#23
  def initialize(file, include_path); end

  # source://rdoc//lib/rdoc/markup/include.rb#28
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/include.rb#13
  def file; end

  # source://rdoc//lib/rdoc/markup/include.rb#18
  def include_path; end

  # source://rdoc//lib/rdoc/markup/include.rb#33
  def pretty_print(q); end
end

# source://rdoc//lib/rdoc/markup/indented_paragraph.rb#5
class RDoc::Markup::IndentedParagraph < ::RDoc::Markup::Raw
  # source://rdoc//lib/rdoc/markup/indented_paragraph.rb#16
  def initialize(indent, *parts); end

  # source://rdoc//lib/rdoc/markup/indented_paragraph.rb#22
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/indented_paragraph.rb#29
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/indented_paragraph.rb#10
  def indent; end

  # source://rdoc//lib/rdoc/markup/indented_paragraph.rb#37
  def text(hard_break = T.unsafe(nil)); end
end

# source://rdoc//lib/rdoc/markup/list.rb#24
class RDoc::Markup::List
  # source://rdoc//lib/rdoc/markup/list.rb#40
  def initialize(type = T.unsafe(nil), *items); end

  # source://rdoc//lib/rdoc/markup/list.rb#49
  def <<(item); end

  # source://rdoc//lib/rdoc/markup/list.rb#53
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/list.rb#62
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/list.rb#75
  def empty?; end

  # source://rdoc//lib/rdoc/markup/list.rb#34
  def items; end

  # source://rdoc//lib/rdoc/markup/list.rb#82
  def last; end

  # source://rdoc//lib/rdoc/markup/list.rb#86
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/markup/list.rb#97
  def push(*items); end

  # source://rdoc//lib/rdoc/markup/list.rb#29
  def type; end

  # source://rdoc//lib/rdoc/markup/list.rb#29
  def type=(_arg0); end
end

# source://rdoc//lib/rdoc/markup/list_item.rb#12
class RDoc::Markup::ListItem
  # source://rdoc//lib/rdoc/markup/list_item.rb#27
  def initialize(label = T.unsafe(nil), *parts); end

  # source://rdoc//lib/rdoc/markup/list_item.rb#36
  def <<(part); end

  # source://rdoc//lib/rdoc/markup/list_item.rb#40
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/list_item.rb#49
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/list_item.rb#62
  def empty?; end

  # source://rdoc//lib/rdoc/markup/list_item.rb#17
  def label; end

  # source://rdoc//lib/rdoc/markup/list_item.rb#17
  def label=(_arg0); end

  # source://rdoc//lib/rdoc/markup/list_item.rb#69
  def length; end

  # source://rdoc//lib/rdoc/markup/list_item.rb#22
  def parts; end

  # source://rdoc//lib/rdoc/markup/list_item.rb#73
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/markup/list_item.rb#95
  def push(*parts); end
end

# source://rdoc//lib/rdoc/markup/paragraph.rb#5
class RDoc::Markup::Paragraph < ::RDoc::Markup::Raw
  # source://rdoc//lib/rdoc/markup/paragraph.rb#10
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/paragraph.rb#18
  def text(hard_break = T.unsafe(nil)); end
end

# source://rdoc//lib/rdoc/markup/parser.rb#19
class RDoc::Markup::Parser
  include ::RDoc::Text

  # source://rdoc//lib/rdoc/markup/parser.rb#79
  def initialize; end

  # source://rdoc//lib/rdoc/markup/parser.rb#90
  def build_heading(level); end

  # source://rdoc//lib/rdoc/markup/parser.rb#108
  def build_list(margin); end

  # source://rdoc//lib/rdoc/markup/parser.rb#208
  def build_paragraph(margin); end

  # source://rdoc//lib/rdoc/markup/parser.rb#243
  def build_verbatim(margin); end

  # source://rdoc//lib/rdoc/markup/parser.rb#48
  def debug; end

  # source://rdoc//lib/rdoc/markup/parser.rb#48
  def debug=(_arg0); end

  # source://rdoc//lib/rdoc/markup/parser.rb#327
  def get; end

  # source://rdoc//lib/rdoc/markup/parser.rb#342
  def parse(parent, indent = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/parser.rb#406
  def parse_text(parent, indent); end

  # source://rdoc//lib/rdoc/markup/parser.rb#413
  def peek_token; end

  # source://rdoc//lib/rdoc/markup/parser.rb#468
  def setup_scanner(input); end

  # source://rdoc//lib/rdoc/markup/parser.rb#477
  def skip(token_type, error = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/parser.rb#488
  def tokenize(input); end

  # source://rdoc//lib/rdoc/markup/parser.rb#53
  def tokens; end

  # source://rdoc//lib/rdoc/markup/parser.rb#578
  def unget; end

  class << self
    # source://rdoc//lib/rdoc/markup/parser.rb#60
    def parse(str); end

    # source://rdoc//lib/rdoc/markup/parser.rb#70
    def tokenize(str); end
  end
end

# source://rdoc//lib/rdoc/markup/parser.rb#422
class RDoc::Markup::Parser::MyStringScanner
  # source://rdoc//lib/rdoc/markup/parser.rb#425
  def initialize(input); end

  # source://rdoc//lib/rdoc/markup/parser.rb#458
  def [](i); end

  # source://rdoc//lib/rdoc/markup/parser.rb#450
  def eos?; end

  # source://rdoc//lib/rdoc/markup/parser.rb#454
  def matched; end

  # source://rdoc//lib/rdoc/markup/parser.rb#445
  def newline!; end

  # source://rdoc//lib/rdoc/markup/parser.rb#441
  def pos; end

  # source://rdoc//lib/rdoc/markup/parser.rb#430
  def scan(re); end

  # source://rdoc//lib/rdoc/markup/parser.rb#436
  def unscan(s); end
end

# source://rdoc//lib/rdoc/markup/pre_process.rb#17
class RDoc::Markup::PreProcess
  # source://rdoc//lib/rdoc/markup/pre_process.rb#78
  def initialize(input_file_name, include_path); end

  # source://rdoc//lib/rdoc/markup/pre_process.rb#288
  def find_include_file(name); end

  # source://rdoc//lib/rdoc/markup/pre_process.rb#99
  def handle(text, code_object = T.unsafe(nil), &block); end

  # source://rdoc//lib/rdoc/markup/pre_process.rb#150
  def handle_directive(prefix, directive, param, code_object = T.unsafe(nil), encoding = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/pre_process.rb#262
  def include_file(name, indent, encoding); end

  # source://rdoc//lib/rdoc/markup/pre_process.rb#23
  def options; end

  # source://rdoc//lib/rdoc/markup/pre_process.rb#23
  def options=(_arg0); end

  class << self
    # source://rdoc//lib/rdoc/markup/pre_process.rb#30
    def post_process(&block); end

    # source://rdoc//lib/rdoc/markup/pre_process.rb#37
    def post_processors; end

    # source://rdoc//lib/rdoc/markup/pre_process.rb#53
    def register(directive, &block); end

    # source://rdoc//lib/rdoc/markup/pre_process.rb#60
    def registered; end

    # source://rdoc//lib/rdoc/markup/pre_process.rb#67
    def reset; end
  end
end

# source://rdoc//lib/rdoc/markup/raw.rb#5
class RDoc::Markup::Raw
  # source://rdoc//lib/rdoc/markup/raw.rb#15
  def initialize(*parts); end

  # source://rdoc//lib/rdoc/markup/raw.rb#23
  def <<(text); end

  # source://rdoc//lib/rdoc/markup/raw.rb#27
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/raw.rb#34
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/raw.rb#41
  def merge(other); end

  # source://rdoc//lib/rdoc/markup/raw.rb#10
  def parts; end

  # source://rdoc//lib/rdoc/markup/raw.rb#45
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/markup/raw.rb#58
  def push(*texts); end

  # source://rdoc//lib/rdoc/markup/raw.rb#65
  def text; end
end

# source://rdoc//lib/rdoc/markup/regexp_handling.rb#5
class RDoc::Markup::RegexpHandling
  # source://rdoc//lib/rdoc/markup/regexp_handling.rb#20
  def initialize(type, text); end

  # source://rdoc//lib/rdoc/markup/regexp_handling.rb#27
  def ==(o); end

  # source://rdoc//lib/rdoc/markup/regexp_handling.rb#31
  def inspect; end

  # source://rdoc//lib/rdoc/markup/regexp_handling.rb#15
  def text; end

  # source://rdoc//lib/rdoc/markup/regexp_handling.rb#15
  def text=(_arg0); end

  # source://rdoc//lib/rdoc/markup/regexp_handling.rb#36
  def to_s; end

  # source://rdoc//lib/rdoc/markup/regexp_handling.rb#10
  def type; end
end

# source://rdoc//lib/rdoc/markup/rule.rb#5
class RDoc::Markup::Rule < ::Struct
  # source://rdoc//lib/rdoc/markup/rule.rb#10
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/rule.rb#14
  def pretty_print(q); end
end

# source://rdoc//lib/rdoc/markup/table.rb#5
class RDoc::Markup::Table
  # source://rdoc//lib/rdoc/markup/table.rb#16
  def initialize(header, align, body); end

  # source://rdoc//lib/rdoc/markup/table.rb#21
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/table.rb#28
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/table.rb#10
  def align; end

  # source://rdoc//lib/rdoc/markup/table.rb#10
  def align=(_arg0); end

  # source://rdoc//lib/rdoc/markup/table.rb#13
  def body; end

  # source://rdoc//lib/rdoc/markup/table.rb#13
  def body=(_arg0); end

  # source://rdoc//lib/rdoc/markup/table.rb#7
  def header; end

  # source://rdoc//lib/rdoc/markup/table.rb#7
  def header=(_arg0); end

  # source://rdoc//lib/rdoc/markup/table.rb#32
  def pretty_print(q); end
end

# source://rdoc//lib/rdoc/markup/to_ansi.rb#5
class RDoc::Markup::ToAnsi < ::RDoc::Markup::ToRdoc
  # source://rdoc//lib/rdoc/markup/to_ansi.rb#10
  def initialize(markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_ansi.rb#31
  def accept_list_item_end(list_item); end

  # source://rdoc//lib/rdoc/markup/to_ansi.rb#55
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_ansi.rb#22
  def init_tags; end

  # source://rdoc//lib/rdoc/markup/to_ansi.rb#87
  def start_accepting; end
end

# source://rdoc//lib/rdoc/markup/to_bs.rb#8
class RDoc::Markup::ToBs < ::RDoc::Markup::ToRdoc
  # source://rdoc//lib/rdoc/markup/to_bs.rb#13
  def initialize(markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_bs.rb#33
  def accept_heading(heading); end

  # source://rdoc//lib/rdoc/markup/to_bs.rb#46
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_bs.rb#71
  def annotate(tag); end

  # source://rdoc//lib/rdoc/markup/to_bs.rb#84
  def convert_regexp_handling(target); end

  # source://rdoc//lib/rdoc/markup/to_bs.rb#91
  def convert_string(string); end

  # source://rdoc//lib/rdoc/markup/to_bs.rb#24
  def init_tags; end
end

# source://rdoc//lib/rdoc/markup/to_html.rb#7
class RDoc::Markup::ToHtml < ::RDoc::Markup::Formatter
  include ::RDoc::Text

  # source://rdoc//lib/rdoc/markup/to_html.rb#45
  def initialize(options, markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#291
  def accept_blank_line(blank_line); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#190
  def accept_block_quote(block_quote); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#299
  def accept_heading(heading); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#262
  def accept_list_end(list); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#284
  def accept_list_item_end(list_item); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#273
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#253
  def accept_list_start(list); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#203
  def accept_paragraph(paragraph); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#320
  def accept_raw(raw); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#246
  def accept_rule(rule); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#327
  def accept_table(header, body, aligns); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#216
  def accept_verbatim(verbatim); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#33
  def code_object; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#33
  def code_object=(_arg0); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#352
  def convert_string(text); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#183
  def end_accepting; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#38
  def from_path; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#38
  def from_path=(_arg0); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#360
  def gen_url(url, text); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#85
  def handle_RDOCLINK(url); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#110
  def handle_regexp_HARD_BREAK(target); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#126
  def handle_regexp_HYPERLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#141
  def handle_regexp_RDOCLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#149
  def handle_regexp_TIDYLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#385
  def html_list_name(list_type, open_tag); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#26
  def in_list_entry; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#80
  def init_link_notation_regexp_handlings; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#70
  def init_regexp_handlings; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#394
  def init_tags; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#27
  def list; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#420
  def list_end_for(list_type); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#404
  def list_item_start(list_item, list_type); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#434
  def parseable?(text); end

  # source://rdoc//lib/rdoc/markup/to_html.rb#25
  def res; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#174
  def start_accepting; end

  # source://rdoc//lib/rdoc/markup/to_html.rb#448
  def to_html(item); end
end

# source://rdoc//lib/rdoc/markup/to_html.rb#65
RDoc::Markup::ToHtml::URL_CHARACTERS_REGEXP_STR = T.let(T.unsafe(nil), String)

# source://rdoc//lib/rdoc/markup/to_html_crossref.rb#7
class RDoc::Markup::ToHtmlCrossref < ::RDoc::Markup::ToHtml
  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#32
  def initialize(options, from_path, context, markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#19
  def context; end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#19
  def context=(_arg0); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#61
  def cross_reference(name, text = T.unsafe(nil), code = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#131
  def gen_url(url, text); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#83
  def handle_regexp_CROSSREF(target); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#102
  def handle_regexp_HYPERLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#116
  def handle_regexp_RDOCLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#46
  def init_link_notation_regexp_handlings; end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#141
  def link(name, text, code = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#24
  def show_hash; end

  # source://rdoc//lib/rdoc/markup/to_html_crossref.rb#24
  def show_hash=(_arg0); end
end

# source://rdoc//lib/rdoc/markup/to_html_snippet.rb#5
class RDoc::Markup::ToHtmlSnippet < ::RDoc::Markup::ToHtml
  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#37
  def initialize(options, characters = T.unsafe(nil), paragraphs = T.unsafe(nil), markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#53
  def accept_heading(heading); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#85
  def accept_list_item_end(list_item); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#91
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#98
  def accept_list_start(list); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#72
  def accept_paragraph(paragraph); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_raw(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_rule(*node); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#107
  def accept_verbatim(verbatim); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#198
  def add_paragraph; end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#10
  def character_limit; end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#15
  def characters; end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#207
  def convert(content); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#218
  def convert_flow(flow); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#171
  def gen_url(url, text); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#131
  def handle_regexp_CROSSREF(target); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#138
  def handle_regexp_HARD_BREAK(target); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#191
  def html_list_name(list_type, open_tag); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#146
  def list_item_start(list_item, list_type); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#20
  def mask; end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#264
  def off_tags(res, item); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#254
  def on_tags(res, item); end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#25
  def paragraph_limit; end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#30
  def paragraphs; end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#122
  def start_accepting; end

  # source://rdoc//lib/rdoc/markup/to_html_snippet.rb#273
  def truncate(text); end
end

# source://rdoc//lib/rdoc/markup/to_joined_paragraph.rb#10
class RDoc::Markup::ToJoinedParagraph < ::RDoc::Markup::Formatter
  # source://rdoc//lib/rdoc/markup/to_joined_paragraph.rb#12
  def initialize; end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_block_quote(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_heading(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_end(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_item_end(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_item_start(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_start(*node); end

  # source://rdoc//lib/rdoc/markup/to_joined_paragraph.rb#25
  def accept_paragraph(paragraph); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_raw(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_rule(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_table(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_verbatim(*node); end

  # source://rdoc//lib/rdoc/markup/to_joined_paragraph.rb#19
  def end_accepting; end

  # source://rdoc//lib/rdoc/markup/to_joined_paragraph.rb#16
  def start_accepting; end
end

# source://rdoc//lib/rdoc/markup/to_label.rb#9
class RDoc::Markup::ToLabel < ::RDoc::Markup::Formatter
  # source://rdoc//lib/rdoc/markup/to_label.rb#16
  def initialize(markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_blank_line(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_block_quote(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_heading(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_end(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_item_end(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_item_start(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_start(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_paragraph(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_raw(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_rule(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_verbatim(*node); end

  # source://rdoc//lib/rdoc/markup/to_label.rb#32
  def convert(text); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def end_accepting(*node); end

  # source://rdoc//lib/rdoc/markup/to_label.rb#42
  def handle_regexp_CROSSREF(target); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def handle_regexp_HARD_BREAK(*node); end

  # source://rdoc//lib/rdoc/markup/to_label.rb#51
  def handle_regexp_TIDYLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_label.rb#11
  def res; end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def start_accepting(*node); end
end

# source://rdoc//lib/rdoc/markup/to_markdown.rb#7
class RDoc::Markup::ToMarkdown < ::RDoc::Markup::ToRdoc
  # source://rdoc//lib/rdoc/markup/to_markdown.rb#12
  def initialize(markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#47
  def accept_list_end(list); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#54
  def accept_list_item_end(list_item); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#75
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#100
  def accept_list_start(list); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#117
  def accept_rule(rule); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#126
  def accept_verbatim(verbatim); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#140
  def gen_url(url, text); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#149
  def handle_rdoc_link(url); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#40
  def handle_regexp_HARD_BREAK(target); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#187
  def handle_regexp_RDOCLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#169
  def handle_regexp_TIDYLINK(target); end

  # source://rdoc//lib/rdoc/markup/to_markdown.rb#31
  def init_tags; end
end

# source://rdoc//lib/rdoc/markup/to_rdoc.rb#5
class RDoc::Markup::ToRdoc < ::RDoc::Markup::Formatter
  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#45
  def initialize(markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#77
  def accept_blank_line(blank_line); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#84
  def accept_block_quote(block_quote); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#99
  def accept_heading(heading); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#211
  def accept_indented_paragraph(paragraph); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#110
  def accept_list_end(list); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#119
  def accept_list_item_end(list_item); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#143
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#176
  def accept_list_start(list); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#203
  def accept_paragraph(paragraph); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#221
  def accept_raw(raw); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#228
  def accept_rule(rule); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#251
  def accept_table(header, body, aligns); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#237
  def accept_verbatim(verbatim); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#279
  def attributes(text); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#287
  def end_accepting; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#303
  def handle_regexp_HARD_BREAK(target); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#294
  def handle_regexp_SUPPRESSED_CROSSREF(target); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#10
  def indent; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#10
  def indent=(_arg0); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#68
  def init_tags; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#20
  def list_index; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#25
  def list_type; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#30
  def list_width; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#35
  def prefix; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#40
  def res; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#310
  def start_accepting; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#324
  def use_prefix; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#15
  def width; end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#15
  def width=(_arg0); end

  # source://rdoc//lib/rdoc/markup/to_rdoc.rb#334
  def wrap(text); end
end

# source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#6
class RDoc::Markup::ToTableOfContents < ::RDoc::Markup::Formatter
  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#27
  def initialize; end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_blank_line(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_block_quote(*node); end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#36
  def accept_document(document); end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#45
  def accept_heading(heading); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_end(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_end_bullet(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_item_end(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_item_start(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_list_start(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_paragraph(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_raw(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_rule(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_table(*node); end

  # source://rdoc//lib/rdoc/markup/formatter.rb#188
  def accept_verbatim(*node); end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#52
  def end_accepting; end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#25
  def omit_headings_below; end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#25
  def omit_headings_below=(_arg0); end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#20
  def res; end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#59
  def start_accepting; end

  # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#67
  def suppressed?(heading); end

  class << self
    # source://rdoc//lib/rdoc/markup/to_table_of_contents.rb#13
    def to_toc; end
  end
end

# source://rdoc//lib/rdoc/markup/to_test.rb#5
class RDoc::Markup::ToTest < ::RDoc::Markup::Formatter
  # source://rdoc//lib/rdoc/markup/to_test.rb#55
  def accept_blank_line(blank_line); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#59
  def accept_heading(heading); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#44
  def accept_list_end(list); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#52
  def accept_list_item_end(list_item); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#48
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#33
  def accept_list_start(list); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#21
  def accept_paragraph(paragraph); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#25
  def accept_raw(raw); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#63
  def accept_rule(rule); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#29
  def accept_verbatim(verbatim); end

  # source://rdoc//lib/rdoc/markup/to_test.rb#17
  def end_accepting; end

  # source://rdoc//lib/rdoc/markup/to_test.rb#12
  def start_accepting; end
end

# source://rdoc//lib/rdoc/markup/to_tt_only.rb#6
class RDoc::Markup::ToTtOnly < ::RDoc::Markup::Formatter
  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#21
  def initialize(markup = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#71
  def accept_blank_line(markup_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#30
  def accept_block_quote(block_quote); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#71
  def accept_heading(markup_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#37
  def accept_list_end(list); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#71
  def accept_list_item_end(markup_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#51
  def accept_list_item_start(list_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#44
  def accept_list_start(list); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#63
  def accept_paragraph(paragraph); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#71
  def accept_raw(markup_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#71
  def accept_rule(markup_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#71
  def accept_verbatim(markup_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#71
  def do_nothing(markup_item); end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#107
  def end_accepting; end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#11
  def list_type; end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#16
  def res; end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#114
  def start_accepting; end

  # source://rdoc//lib/rdoc/markup/to_tt_only.rb#84
  def tt_sections(text); end
end

# source://rdoc//lib/rdoc/markup/verbatim.rb#5
class RDoc::Markup::Verbatim < ::RDoc::Markup::Raw
  # source://rdoc//lib/rdoc/markup/verbatim.rb#12
  def initialize(*parts); end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#18
  def ==(other); end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#25
  def accept(visitor); end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#10
  def format; end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#10
  def format=(_arg0); end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#32
  def normalize; end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#53
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#71
  def ruby?; end

  # source://rdoc//lib/rdoc/markup/verbatim.rb#79
  def text; end
end

# source://rdoc//lib/rdoc/method_attr.rb#5
class RDoc::MethodAttr < ::RDoc::CodeObject
  include ::Comparable

  # source://rdoc//lib/rdoc/method_attr.rb#78
  def initialize(text, name); end

  # source://rdoc//lib/rdoc/method_attr.rb#113
  def <=>(other); end

  # source://rdoc//lib/rdoc/method_attr.rb#121
  def ==(other); end

  # source://rdoc//lib/rdoc/method_attr.rb#209
  def add_alias(an_alias, context); end

  # source://rdoc//lib/rdoc/generator/markup.rb#77
  def add_line_numbers(src); end

  # source://rdoc//lib/rdoc/method_attr.rb#32
  def aliases; end

  # source://rdoc//lib/rdoc/method_attr.rb#216
  def aref; end

  # source://rdoc//lib/rdoc/method_attr.rb#225
  def aref_prefix; end

  # source://rdoc//lib/rdoc/method_attr.rb#64
  def arglists; end

  # source://rdoc//lib/rdoc/method_attr.rb#49
  def block_params; end

  # source://rdoc//lib/rdoc/method_attr.rb#233
  def block_params=(value); end

  # source://rdoc//lib/rdoc/method_attr.rb#59
  def call_seq; end

  # source://rdoc//lib/rdoc/method_attr.rb#59
  def call_seq=(_arg0); end

  # source://rdoc//lib/rdoc/method_attr.rb#132
  def documented?; end

  # source://rdoc//lib/rdoc/method_attr.rb#178
  def find_method_or_attribute(name); end

  # source://rdoc//lib/rdoc/method_attr.rb#166
  def find_see; end

  # source://rdoc//lib/rdoc/method_attr.rb#300
  def full_name; end

  # source://rdoc//lib/rdoc/method_attr.rb#291
  def html_name; end

  # source://rdoc//lib/rdoc/method_attr.rb#105
  def initialize_visibility; end

  # source://rdoc//lib/rdoc/method_attr.rb#304
  def inspect; end

  # source://rdoc//lib/rdoc/method_attr.rb#37
  def is_alias_for; end

  # source://rdoc//lib/rdoc/method_attr.rb#37
  def is_alias_for=(_arg0); end

  # source://rdoc//lib/rdoc/generator/markup.rb#101
  def markup_code; end

  # source://rdoc//lib/rdoc/method_attr.rb#12
  def name; end

  # source://rdoc//lib/rdoc/method_attr.rb#12
  def name=(_arg0); end

  # source://rdoc//lib/rdoc/method_attr.rb#319
  def name_prefix; end

  # source://rdoc//lib/rdoc/method_attr.rb#330
  def output_name(context); end

  # source://rdoc//lib/rdoc/method_attr.rb#69
  def param_seq; end

  # source://rdoc//lib/rdoc/method_attr.rb#54
  def params; end

  # source://rdoc//lib/rdoc/method_attr.rb#54
  def params=(_arg0); end

  # source://rdoc//lib/rdoc/method_attr.rb#360
  def parent_name; end

  # source://rdoc//lib/rdoc/method_attr.rb#353
  def path; end

  # source://rdoc//lib/rdoc/method_attr.rb#339
  def pretty_name; end

  # source://rdoc//lib/rdoc/method_attr.rb#364
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/method_attr.rb#398
  def search_record; end

  # source://rdoc//lib/rdoc/method_attr.rb#152
  def see; end

  # source://rdoc//lib/rdoc/method_attr.rb#22
  def singleton; end

  # source://rdoc//lib/rdoc/method_attr.rb#22
  def singleton=(_arg0); end

  # source://rdoc//lib/rdoc/method_attr.rb#160
  def store=(store); end

  # source://rdoc//lib/rdoc/method_attr.rb#27
  def text; end

  # source://rdoc//lib/rdoc/method_attr.rb#410
  def to_s; end

  # source://rdoc//lib/rdoc/method_attr.rb#346
  def type; end

  # source://rdoc//lib/rdoc/method_attr.rb#17
  def visibility; end

  # source://rdoc//lib/rdoc/method_attr.rb#17
  def visibility=(_arg0); end

  private

  # source://rdoc//lib/rdoc/method_attr.rb#101
  def initialize_copy(other); end
end

# source://rdoc//lib/rdoc/mixin.rb#6
class RDoc::Mixin < ::RDoc::CodeObject
  # source://rdoc//lib/rdoc/mixin.rb#16
  def initialize(name, comment); end

  # source://rdoc//lib/rdoc/mixin.rb#26
  def <=>(other); end

  # source://rdoc//lib/rdoc/mixin.rb#32
  def ==(other); end

  # source://rdoc//lib/rdoc/mixin.rb#32
  def eql?(other); end

  # source://rdoc//lib/rdoc/mixin.rb#41
  def full_name; end

  # source://rdoc//lib/rdoc/mixin.rb#46
  def hash; end

  # source://rdoc//lib/rdoc/mixin.rb#50
  def inspect; end

  # source://rdoc//lib/rdoc/mixin.rb#75
  def module; end

  # source://rdoc//lib/rdoc/mixin.rb#11
  def name; end

  # source://rdoc//lib/rdoc/mixin.rb#11
  def name=(_arg0); end

  # source://rdoc//lib/rdoc/mixin.rb#110
  def store=(store); end

  # source://rdoc//lib/rdoc/mixin.rb#116
  def to_s; end
end

# source://rdoc//lib/rdoc/normal_class.rb#5
class RDoc::NormalClass < ::RDoc::ClassModule
  # source://rdoc//lib/rdoc/normal_class.rb#12
  def ancestors; end

  # source://rdoc//lib/rdoc/normal_class.rb#24
  def aref_prefix; end

  # source://rdoc//lib/rdoc/normal_class.rb#31
  def definition; end

  # source://rdoc//lib/rdoc/normal_class.rb#35
  def direct_ancestors; end

  # source://rdoc//lib/rdoc/normal_class.rb#39
  def inspect; end

  # source://rdoc//lib/rdoc/normal_class.rb#56
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/normal_class.rb#47
  def to_s; end
end

# source://rdoc//lib/rdoc/normal_module.rb#5
class RDoc::NormalModule < ::RDoc::ClassModule
  # source://rdoc//lib/rdoc/normal_module.rb#7
  def aref_prefix; end

  # source://rdoc//lib/rdoc/normal_module.rb#21
  def definition; end

  # source://rdoc//lib/rdoc/normal_module.rb#11
  def inspect; end

  # source://rdoc//lib/rdoc/normal_module.rb#28
  def module?; end

  # source://rdoc//lib/rdoc/normal_module.rb#32
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/normal_module.rb#69
  def superclass; end
end

# source://rdoc//lib/rdoc/options.rb#75
class RDoc::Options
  # source://rdoc//lib/rdoc/options.rb#347
  def initialize(loaded_options = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/options.rb#460
  def ==(other); end

  # source://rdoc//lib/rdoc/options.rb#152
  def charset; end

  # source://rdoc//lib/rdoc/options.rb#152
  def charset=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#484
  def check_files; end

  # source://rdoc//lib/rdoc/options.rb#505
  def check_generator; end

  # source://rdoc//lib/rdoc/options.rb#244
  def coverage_report; end

  # source://rdoc//lib/rdoc/options.rb#244
  def coverage_report=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#517
  def default_title=(string); end

  # source://rdoc//lib/rdoc/options.rb#157
  def dry_run; end

  # source://rdoc//lib/rdoc/options.rb#157
  def dry_run=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#164
  def encoding; end

  # source://rdoc//lib/rdoc/options.rb#164
  def encoding=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#545
  def exclude; end

  # source://rdoc//lib/rdoc/options.rb#169
  def exclude=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#174
  def files; end

  # source://rdoc//lib/rdoc/options.rb#174
  def files=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#561
  def finish; end

  # source://rdoc//lib/rdoc/options.rb#602
  def finish_page_dir; end

  # source://rdoc//lib/rdoc/options.rb#180
  def force_output; end

  # source://rdoc//lib/rdoc/options.rb#180
  def force_output=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#185
  def force_update; end

  # source://rdoc//lib/rdoc/options.rb#185
  def force_update=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#190
  def formatter; end

  # source://rdoc//lib/rdoc/options.rb#190
  def formatter=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#195
  def generator; end

  # source://rdoc//lib/rdoc/options.rb#195
  def generator=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#621
  def generator_descriptions; end

  # source://rdoc//lib/rdoc/options.rb#200
  def generator_name; end

  # source://rdoc//lib/rdoc/options.rb#206
  def generator_options; end

  # source://rdoc//lib/rdoc/options.rb#206
  def generator_options=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#212
  def hyperlink_all; end

  # source://rdoc//lib/rdoc/options.rb#212
  def hyperlink_all=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#352
  def init_ivars; end

  # source://rdoc//lib/rdoc/options.rb#397
  def init_with(map); end

  # source://rdoc//lib/rdoc/options.rb#217
  def line_numbers; end

  # source://rdoc//lib/rdoc/options.rb#217
  def line_numbers=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#222
  def locale; end

  # source://rdoc//lib/rdoc/options.rb#222
  def locale=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#227
  def locale_dir; end

  # source://rdoc//lib/rdoc/options.rb#227
  def locale_dir=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#233
  def main_page; end

  # source://rdoc//lib/rdoc/options.rb#233
  def main_page=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#239
  def markup; end

  # source://rdoc//lib/rdoc/options.rb#239
  def markup=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#249
  def op_dir; end

  # source://rdoc//lib/rdoc/options.rb#249
  def op_dir=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#254
  def option_parser; end

  # source://rdoc//lib/rdoc/options.rb#254
  def option_parser=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#258
  def output_decoration; end

  # source://rdoc//lib/rdoc/options.rb#258
  def output_decoration=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#428
  def override(map); end

  # source://rdoc//lib/rdoc/options.rb#264
  def page_dir; end

  # source://rdoc//lib/rdoc/options.rb#264
  def page_dir=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#647
  def parse(argv); end

  # source://rdoc//lib/rdoc/options.rb#269
  def pipe; end

  # source://rdoc//lib/rdoc/options.rb#269
  def pipe=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#1192
  def quiet; end

  # source://rdoc//lib/rdoc/options.rb#1199
  def quiet=(bool); end

  # source://rdoc//lib/rdoc/options.rb#274
  def rdoc_include; end

  # source://rdoc//lib/rdoc/options.rb#274
  def rdoc_include=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#281
  def root; end

  # source://rdoc//lib/rdoc/options.rb#281
  def root=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#1206
  def sanitize_path(path); end

  # source://rdoc//lib/rdoc/options.rb#1233
  def setup_generator(generator_name = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/options.rb#286
  def show_hash; end

  # source://rdoc//lib/rdoc/options.rb#286
  def show_hash=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#345
  def skip_tests; end

  # source://rdoc//lib/rdoc/options.rb#345
  def skip_tests=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#291
  def static_path; end

  # source://rdoc//lib/rdoc/options.rb#291
  def static_path=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#296
  def tab_width; end

  # source://rdoc//lib/rdoc/options.rb#296
  def tab_width=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#301
  def template; end

  # source://rdoc//lib/rdoc/options.rb#301
  def template=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#306
  def template_dir; end

  # source://rdoc//lib/rdoc/options.rb#306
  def template_dir=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#1255
  def template_dir_for(template); end

  # source://rdoc//lib/rdoc/options.rb#311
  def template_stylesheets; end

  # source://rdoc//lib/rdoc/options.rb#311
  def template_stylesheets=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#316
  def title; end

  # source://rdoc//lib/rdoc/options.rb#316
  def title=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#524
  def to_yaml(*options); end

  # source://rdoc//lib/rdoc/options.rb#321
  def update_output_dir; end

  # source://rdoc//lib/rdoc/options.rb#321
  def update_output_dir=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#326
  def verbosity; end

  # source://rdoc//lib/rdoc/options.rb#326
  def verbosity=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#341
  def visibility; end

  # source://rdoc//lib/rdoc/options.rb#1272
  def visibility=(visibility); end

  # source://rdoc//lib/rdoc/options.rb#1284
  def warn(message); end

  # source://rdoc//lib/rdoc/options.rb#331
  def webcvs; end

  # source://rdoc//lib/rdoc/options.rb#331
  def webcvs=(_arg0); end

  # source://rdoc//lib/rdoc/options.rb#1292
  def write_options; end

  # source://rdoc//lib/rdoc/options.rb#424
  def yaml_initialize(tag, map); end

  class << self
    # source://rdoc//lib/rdoc/options.rb#1306
    def load_options; end
  end
end

# source://rdoc//lib/rdoc/parser.rb#33
class RDoc::Parser
  # source://rdoc//lib/rdoc/parser.rb#254
  def initialize(top_level, file_name, content, options, stats); end

  # source://rdoc//lib/rdoc/parser.rb#52
  def file_name; end

  # source://rdoc//lib/rdoc/parser.rb#274
  def handle_tab_width(body); end

  class << self
    # source://rdoc//lib/rdoc/parser.rb#58
    def alias_extension(old_ext, new_ext); end

    # source://rdoc//lib/rdoc/parser.rb#74
    def binary?(file); end

    # source://rdoc//lib/rdoc/parser.rb#107
    def can_parse(file_name); end

    # source://rdoc//lib/rdoc/parser.rb#120
    def can_parse_by_name(file_name); end

    # source://rdoc//lib/rdoc/parser.rb#143
    def check_modeline(file_name); end

    # source://rdoc//lib/rdoc/parser.rb#169
    def for(top_level, file_name, content, options, stats); end

    # source://rdoc//lib/rdoc/parser.rb#203
    def parse_files_matching(regexp); end

    # source://rdoc//lib/rdoc/parser.rb#45
    def parsers; end

    # source://rdoc//lib/rdoc/parser.rb#210
    def remove_modeline(content); end

    # source://rdoc//lib/rdoc/parser.rb#231
    def use_markup(content); end

    # source://rdoc//lib/rdoc/parser.rb#94
    def zip?(file); end
  end
end

# source://rdoc//lib/rdoc/parser/c.rb#119
class RDoc::Parser::C < ::RDoc::Parser
  include ::RDoc::Text

  # source://rdoc//lib/rdoc/parser/c.rb#171
  def initialize(top_level, file_name, content, options, stats); end

  # source://rdoc//lib/rdoc/parser/c.rb#250
  def add_alias(var_name, class_obj, old_name, new_name, comment); end

  # source://rdoc//lib/rdoc/parser/c.rb#133
  def classes; end

  # source://rdoc//lib/rdoc/parser/c.rb#138
  def content; end

  # source://rdoc//lib/rdoc/parser/c.rb#138
  def content=(_arg0); end

  # source://rdoc//lib/rdoc/parser/c.rb#222
  def do_aliases; end

  # source://rdoc//lib/rdoc/parser/c.rb#263
  def do_attrs; end

  # source://rdoc//lib/rdoc/parser/c.rb#286
  def do_boot_defclass; end

  # source://rdoc//lib/rdoc/parser/c.rb#298
  def do_classes_and_modules; end

  # source://rdoc//lib/rdoc/parser/c.rb#396
  def do_constants; end

  # source://rdoc//lib/rdoc/parser/c.rb#442
  def do_includes; end

  # source://rdoc//lib/rdoc/parser/c.rb#458
  def do_methods; end

  # source://rdoc//lib/rdoc/parser/c.rb#507
  def do_missing; end

  # source://rdoc//lib/rdoc/parser/c.rb#144
  def enclosure_dependencies; end

  # source://rdoc//lib/rdoc/parser/c.rb#523
  def find_alias_comment(class_name, new_name, old_name); end

  # source://rdoc//lib/rdoc/parser/c.rb#541
  def find_attr_comment(var_name, attr_name, read = T.unsafe(nil), write = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/c.rb#598
  def find_body(class_name, meth_name, meth_obj, file_content, quiet = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/c.rb#682
  def find_class(raw_name, name, base_name = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/c.rb#723
  def find_class_comment(class_name, class_mod); end

  # source://rdoc//lib/rdoc/parser/c.rb#789
  def find_const_comment(type, const_name, class_name = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/c.rb#806
  def find_modifiers(comment, meth_obj); end

  # source://rdoc//lib/rdoc/parser/c.rb#816
  def find_override_comment(class_name, meth_obj); end

  # source://rdoc//lib/rdoc/parser/c.rb#574
  def gen_body_table(file_content); end

  # source://rdoc//lib/rdoc/parser/c.rb#756
  def gen_const_table(file_content); end

  # source://rdoc//lib/rdoc/parser/c.rb#838
  def handle_attr(var_name, attr_name, read, write); end

  # source://rdoc//lib/rdoc/parser/c.rb#867
  def handle_class_module(var_name, type, class_name, parent, in_module); end

  # source://rdoc//lib/rdoc/parser/c.rb#932
  def handle_constants(type, var_name, const_name, definition); end

  # source://rdoc//lib/rdoc/parser/c.rb#982
  def handle_ifdefs_in(body); end

  # source://rdoc//lib/rdoc/parser/c.rb#991
  def handle_method(type, var_name, meth_name, function, param_count, source_file = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/c.rb#1061
  def handle_singleton(sclass_var, class_var); end

  # source://rdoc//lib/rdoc/parser/c.rb#149
  def known_classes; end

  # source://rdoc//lib/rdoc/parser/c.rb#1072
  def load_variable_map(map_name); end

  # source://rdoc//lib/rdoc/parser/c.rb#1101
  def look_for_directives_in(context, comment); end

  # source://rdoc//lib/rdoc/parser/c.rb#155
  def missing_dependencies; end

  # source://rdoc//lib/rdoc/parser/c.rb#1231
  def new_comment(text = T.unsafe(nil), location = T.unsafe(nil), language = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/c.rb#1120
  def rb_scan_args(method_body); end

  # source://rdoc//lib/rdoc/parser/c.rb#1203
  def remove_commented_out_lines; end

  # source://rdoc//lib/rdoc/parser/c.rb#1211
  def scan; end

  # source://rdoc//lib/rdoc/parser/c.rb#160
  def singleton_classes; end

  # source://rdoc//lib/rdoc/parser/c.rb#165
  def top_level; end
end

# source://rdoc//lib/rdoc/parser/c.rb#126
RDoc::Parser::C::BOOL_ARG_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://rdoc//lib/rdoc/parser/c.rb#127
RDoc::Parser::C::TRUE_VALUES = T.let(T.unsafe(nil), Array)

# source://rdoc//lib/rdoc/parser/changelog.rb#14
class RDoc::Parser::ChangeLog < ::RDoc::Parser
  include ::RDoc::Parser::Text

  # source://rdoc//lib/rdoc/parser/changelog.rb#26
  def continue_entry_body(entry_body, continuation); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#44
  def create_document(groups); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#66
  def create_entries(entries); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#83
  def create_items(items); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#103
  def group_entries(entries); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#119
  def parse_date(date); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#149
  def parse_entries; end

  # source://rdoc//lib/rdoc/parser/changelog.rb#206
  def scan; end
end

# source://rdoc//lib/rdoc/parser/changelog.rb#222
module RDoc::Parser::ChangeLog::Git
  # source://rdoc//lib/rdoc/parser/changelog.rb#262
  def create_entries(entries); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#235
  def parse_entries; end

  # source://rdoc//lib/rdoc/parser/changelog.rb#227
  def parse_info(info); end
end

# source://rdoc//lib/rdoc/parser/changelog.rb#271
RDoc::Parser::ChangeLog::Git::HEADING_LEVEL = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/changelog.rb#270
class RDoc::Parser::ChangeLog::Git::LogEntry < ::Struct
  # source://rdoc//lib/rdoc/parser/changelog.rb#273
  def initialize(base, commit, author, email, date, contents); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#313
  def accept(visitor); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#294
  def aref; end

  def author; end
  def author=(_); end
  def base; end
  def base=(_); end
  def commit; end
  def commit=(_); end
  def contents; end
  def contents=(_); end
  def date; end
  def date=(_); end
  def email; end
  def email=(_); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#298
  def label(context = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#290
  def level; end

  # source://rdoc//lib/rdoc/parser/changelog.rb#330
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/parser/changelog.rb#302
  def text; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rdoc//lib/rdoc/parser/markdown.rb#6
class RDoc::Parser::Markdown < ::RDoc::Parser
  include ::RDoc::Parser::Text

  # source://rdoc//lib/rdoc/parser/markdown.rb#15
  def scan; end
end

# source://rdoc//lib/rdoc/parser/rd.rb#6
class RDoc::Parser::RD < ::RDoc::Parser
  include ::RDoc::Parser::Text

  # source://rdoc//lib/rdoc/parser/rd.rb#15
  def scan; end
end

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#7
class RDoc::Parser::RipperStateLex
  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#576
  def initialize(code); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#322
  def get_squashed_tk; end

  private

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#465
  def get_embdoc_tk(tk); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#474
  def get_heredoc_tk(heredoc_name, indent); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#549
  def get_op_tk(tk); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#447
  def get_regexp_tk(tk); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#420
  def get_string_tk(tk); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#373
  def get_symbol_tk(tk); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#511
  def get_words_tk(tk); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#499
  def heredoc_end?(name, indent, tk); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#493
  def retrieve_heredoc_info(tk); end

  class << self
    # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#597
    def end?(token); end

    # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#584
    def parse(code); end
  end
end

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#20
RDoc::Parser::RipperStateLex::EXPR_ARG = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#31
RDoc::Parser::RipperStateLex::EXPR_ARG_ANY = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#16
RDoc::Parser::RipperStateLex::EXPR_BEG = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#30
RDoc::Parser::RipperStateLex::EXPR_BEG_ANY = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#25
RDoc::Parser::RipperStateLex::EXPR_CLASS = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#21
RDoc::Parser::RipperStateLex::EXPR_CMDARG = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#24
RDoc::Parser::RipperStateLex::EXPR_DOT = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#17
RDoc::Parser::RipperStateLex::EXPR_END = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#18
RDoc::Parser::RipperStateLex::EXPR_ENDARG = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#19
RDoc::Parser::RipperStateLex::EXPR_ENDFN = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#32
RDoc::Parser::RipperStateLex::EXPR_END_ANY = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#28
RDoc::Parser::RipperStateLex::EXPR_FITEM = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#23
RDoc::Parser::RipperStateLex::EXPR_FNAME = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#26
RDoc::Parser::RipperStateLex::EXPR_LABEL = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#27
RDoc::Parser::RipperStateLex::EXPR_LABELED = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#22
RDoc::Parser::RipperStateLex::EXPR_MID = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#15
RDoc::Parser::RipperStateLex::EXPR_NONE = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#29
RDoc::Parser::RipperStateLex::EXPR_VALUE = T.let(T.unsafe(nil), Integer)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#312
class RDoc::Parser::RipperStateLex::InnerStateLex < ::Ripper::Filter
  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#313
  def initialize(code); end

  # source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#317
  def on_default(event, tok, data); end
end

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#11
RDoc::Parser::RipperStateLex::RIPPER_HAS_LEX_STATE = T.let(T.unsafe(nil), TrueClass)

# source://rdoc//lib/rdoc/parser/ripper_state_lex.rb#13
class RDoc::Parser::RipperStateLex::Token < ::Struct
  def char_no; end
  def char_no=(_); end
  def kind; end
  def kind=(_); end
  def line_no; end
  def line_no=(_); end
  def state; end
  def state=(_); end
  def text; end
  def text=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rdoc//lib/rdoc/parser/ruby.rb#144
class RDoc::Parser::Ruby < ::RDoc::Parser
  include ::RDoc::TokenStream
  include ::RDoc::Parser::RubyTools

  # source://rdoc//lib/rdoc/parser/ruby.rb#164
  def initialize(top_level, file_name, content, options, stats); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#236
  def collect_first_comment; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#279
  def consume_trailing_spaces; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#286
  def create_attr(container, single, name, rw, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#300
  def create_module_alias(container, constant, rhs_name); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#313
  def error(msg); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#322
  def get_bool; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#340
  def get_class_or_module(container, ignore_constants = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#423
  def get_class_specification; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#456
  def get_constant; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#558
  def get_end_token(tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#473
  def get_included_module_with_optional_parens; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#578
  def get_method_container(container, name_t); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#621
  def get_symbol_or_name; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#194
  def get_tkread_clean(pattern, replacement); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#208
  def get_visibility_information(tk, single); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#661
  def look_for_directives_in(container, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#681
  def make_message(message); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#693
  def new_comment(comment, line_no = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#762
  def parse_alias(context, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#704
  def parse_attr(context, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#733
  def parse_attr_accessor(context, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#803
  def parse_call_parameters(tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#846
  def parse_class(container, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#880
  def parse_class_regular(container, declaration_context, single, name_t, given_name, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#920
  def parse_class_singleton(container, name, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1085
  def parse_comment(container, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1113
  def parse_comment_attr(container, type, name, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1125
  def parse_comment_ghost(container, text, name, column, line_no, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1164
  def parse_comment_tomdoc(container, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#959
  def parse_constant(container, tk, comment, ignore_constants = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1026
  def parse_constant_body(container, constant, is_array_or_hash); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2103
  def parse_constant_visibility(container, single, tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1199
  def parse_extend_or_include(klass, container, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1237
  def parse_identifier(container, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1219
  def parse_included_with_activesupport_concern(container, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1301
  def parse_meta_attr(context, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1335
  def parse_meta_method(container, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1381
  def parse_meta_method_name(comment, tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1405
  def parse_meta_method_params(container, single, meth, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1437
  def parse_method(container, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1522
  def parse_method_dummy(container); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1535
  def parse_method_name(container); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1562
  def parse_method_name_regular(container, name_t); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1580
  def parse_method_name_singleton(container, name_t); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1624
  def parse_method_or_yield_parameters(method = T.unsafe(nil), modifiers = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1691
  def parse_method_parameters(method); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1492
  def parse_method_params_and_body(container, single, meth, added_container); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1706
  def parse_module(container, single, tk, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1728
  def parse_require(context, comment); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1749
  def parse_rescue; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1780
  def parse_statements(container, single = T.unsafe(nil), current_method = T.unsafe(nil), comment = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1971
  def parse_symbol_arg(no = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1986
  def parse_symbol_arg_paren(no); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2014
  def parse_symbol_arg_space(no, tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2045
  def parse_symbol_in_arg; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2062
  def parse_top_level_statements(container); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2080
  def parse_visibility(container, single, tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2119
  def parse_yield(context, single, tk, method); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2140
  def read_directive(allowed); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2172
  def read_documentation_modifiers(context, allowed); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2191
  def record_location(container); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#1769
  def retrieve_comment_body(tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2203
  def scan; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2291
  def skip_for_variable; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2302
  def skip_method(container); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2250
  def skip_optional_do_after_expression; end

  # source://rdoc//lib/rdoc/parser/ruby.rb#401
  def skip_parentheses(&block); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2311
  def skip_tkspace_comment(skip_nl = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#646
  def suppress_parents(container, ancestor); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#186
  def tk_nl?(tk); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2323
  def update_visibility(container, vis_type, vis, singleton); end

  # source://rdoc//lib/rdoc/parser/ruby.rb#2368
  def warn(message); end
end

# source://rdoc//lib/rdoc/parser/ruby_tools.rb#5
module RDoc::Parser::RubyTools
  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#10
  def add_token_listener(obj); end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#18
  def get_tk; end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#52
  def get_tk_until(*tokens); end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#73
  def get_tkread; end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#82
  def peek_read; end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#89
  def peek_tk; end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#97
  def remove_token_listener(obj); end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#104
  def reset; end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#115
  def skip_tkspace; end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#129
  def skip_tkspace_without_nl; end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#143
  def token_listener(obj); end

  # source://rdoc//lib/rdoc/parser/ruby_tools.rb#153
  def unget_tk(tk); end
end

# source://rdoc//lib/rdoc/parser/simple.rb#6
class RDoc::Parser::Simple < ::RDoc::Parser
  include ::RDoc::Parser::Text

  # source://rdoc//lib/rdoc/parser/simple.rb#17
  def initialize(top_level, file_name, content, options, stats); end

  # source://rdoc//lib/rdoc/parser/simple.rb#12
  def content; end

  # source://rdoc//lib/rdoc/parser/simple.rb#41
  def remove_coding_comment(text); end

  # source://rdoc//lib/rdoc/parser/simple.rb#52
  def remove_private_comment(comment); end

  # source://rdoc//lib/rdoc/parser/simple.rb#28
  def scan; end
end

# source://rdoc//lib/rdoc/rd.rb#72
class RDoc::RD
  class << self
    # source://rdoc//lib/rdoc/rd.rb#78
    def parse(rd); end
  end
end

# source://rdoc//lib/rdoc/rd/block_parser.rb#660
class RDoc::RD::BlockParser < ::Racc::Parser
  # source://rdoc//lib/rdoc/rd/block_parser.rb#695
  def initialize; end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1330
  def _reduce_1(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1372
  def _reduce_10(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1377
  def _reduce_11(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1382
  def _reduce_12(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1390
  def _reduce_13(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1396
  def _reduce_14(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1403
  def _reduce_15(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1408
  def _reduce_16(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1413
  def _reduce_17(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1424
  def _reduce_18(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1435
  def _reduce_19(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1335
  def _reduce_2(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1441
  def _reduce_20(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1447
  def _reduce_21(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1453
  def _reduce_22(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1469
  def _reduce_27(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1475
  def _reduce_28(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1481
  def _reduce_29(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1340
  def _reduce_3(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1487
  def _reduce_30(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1492
  def _reduce_31(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1497
  def _reduce_32(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1503
  def _reduce_33(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1508
  def _reduce_34(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1513
  def _reduce_35(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1519
  def _reduce_36(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1525
  def _reduce_37(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1530
  def _reduce_38(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1535
  def _reduce_39(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1345
  def _reduce_4(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1541
  def _reduce_40(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1547
  def _reduce_41(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1552
  def _reduce_42(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1557
  def _reduce_43(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1565
  def _reduce_44(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1571
  def _reduce_45(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1576
  def _reduce_46(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1581
  def _reduce_47(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1587
  def _reduce_48(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1593
  def _reduce_49(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1350
  def _reduce_5(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1599
  def _reduce_50(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1605
  def _reduce_51(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1611
  def _reduce_52(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1618
  def _reduce_54(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1623
  def _reduce_55(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1630
  def _reduce_57(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1355
  def _reduce_6(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1643
  def _reduce_62(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1649
  def _reduce_63(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1655
  def _reduce_64(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1661
  def _reduce_65(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1667
  def _reduce_66(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1673
  def _reduce_67(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1678
  def _reduce_68(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1683
  def _reduce_69(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1690
  def _reduce_71(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1695
  def _reduce_72(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1362
  def _reduce_8(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1367
  def _reduce_9(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1700
  def _reduce_none(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1045
  def add_footnote(content); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1059
  def add_label(label); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1028
  def content(values); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#679
  def footnotes; end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#689
  def include_path; end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#689
  def include_path=(_arg0); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#684
  def labels; end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#983
  def line_index; end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#751
  def next_token; end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#967
  def on_error(et, ev, _values); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1035
  def paragraph(value); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#707
  def parse(src); end

  private

  # source://rdoc//lib/rdoc/rd/block_parser.rb#931
  def cut_off(src); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1019
  def format_line_num(*line_numbers); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#1000
  def get_included(file); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#913
  def if_current_indent_equal(indent); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#990
  def parse_subtree(src); end

  # source://rdoc//lib/rdoc/rd/block_parser.rb#958
  def set_term_to_element(parent, term); end
end

# source://rdoc//lib/rdoc/rd/block_parser.rb#1324
RDoc::RD::BlockParser::Racc_debug_parser = T.let(T.unsafe(nil), FalseClass)

# source://rdoc//lib/rdoc/rd/inline.rb#5
class RDoc::RD::Inline
  # source://rdoc//lib/rdoc/rd/inline.rb#34
  def initialize(rdoc, reference); end

  # source://rdoc//lib/rdoc/rd/inline.rb#42
  def ==(other); end

  # source://rdoc//lib/rdoc/rd/inline.rb#50
  def append(more); end

  # source://rdoc//lib/rdoc/rd/inline.rb#65
  def inspect; end

  # source://rdoc//lib/rdoc/rd/inline.rb#15
  def rdoc; end

  # source://rdoc//lib/rdoc/rd/inline.rb#10
  def reference; end

  # source://rdoc//lib/rdoc/rd/inline.rb#15
  def to_s; end

  class << self
    # source://rdoc//lib/rdoc/rd/inline.rb#23
    def new(rdoc, reference = T.unsafe(nil)); end
  end
end

# source://rdoc//lib/rdoc/rd/inline_parser.rb#661
class RDoc::RD::InlineParser < ::Racc::Parser
  # source://rdoc//lib/rdoc/rd/inline_parser.rb#734
  def initialize(block_parser); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1746
  def _reduce_101(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1753
  def _reduce_102(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1771
  def _reduce_109(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1778
  def _reduce_111(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1786
  def _reduce_113(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1791
  def _reduce_114(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1796
  def _reduce_115(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1409
  def _reduce_13(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1841
  def _reduce_136(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1416
  def _reduce_14(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1423
  def _reduce_15(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1430
  def _reduce_16(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1437
  def _reduce_17(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1445
  def _reduce_18(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1451
  def _reduce_19(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1381
  def _reduce_2(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1459
  def _reduce_20(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1465
  def _reduce_21(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1474
  def _reduce_22(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1480
  def _reduce_23(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1486
  def _reduce_24(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1492
  def _reduce_25(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1501
  def _reduce_26(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1507
  def _reduce_27(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1516
  def _reduce_29(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1386
  def _reduce_3(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1521
  def _reduce_30(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1526
  def _reduce_31(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1532
  def _reduce_32(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1538
  def _reduce_33(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1544
  def _reduce_34(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1552
  def _reduce_36(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1557
  def _reduce_37(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1562
  def _reduce_38(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1568
  def _reduce_39(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1574
  def _reduce_40(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1580
  def _reduce_41(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1588
  def _reduce_43(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1594
  def _reduce_44(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1600
  def _reduce_45(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1606
  def _reduce_46(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1632
  def _reduce_57(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1638
  def _reduce_58(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1644
  def _reduce_59(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1650
  def _reduce_60(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1657
  def _reduce_62(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1665
  def _reduce_64(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1697
  def _reduce_78(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#1848
  def _reduce_none(val, _values, result); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#883
  def inline(rdoc, reference = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#752
  def next_token; end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#872
  def next_words_on_error; end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#832
  def on_error(et, ev, values); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#741
  def parse(inline); end

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#849
  def prev_words_on_error(ev); end

  private

  # source://rdoc//lib/rdoc/rd/inline_parser.rb#860
  def last_line(src); end
end

# source://rdoc//lib/rdoc/rd/inline_parser.rb#1373
RDoc::RD::InlineParser::Racc_debug_parser = T.let(T.unsafe(nil), FalseClass)

# source://rdoc//lib/rdoc/rdoc.rb#29
class RDoc::RDoc
  # source://rdoc//lib/rdoc/rdoc.rb#100
  def initialize; end

  # source://rdoc//lib/rdoc/rdoc.rb#450
  def document(options); end

  # source://rdoc//lib/rdoc/rdoc.rb#113
  def error(msg); end

  # source://rdoc//lib/rdoc/rdoc.rb#121
  def gather_files(files); end

  # source://rdoc//lib/rdoc/rdoc.rb#515
  def generate; end

  # source://rdoc//lib/rdoc/rdoc.rb#52
  def generator; end

  # source://rdoc//lib/rdoc/rdoc.rb#52
  def generator=(_arg0); end

  # source://rdoc//lib/rdoc/rdoc.rb#142
  def handle_pipe; end

  # source://rdoc//lib/rdoc/rdoc.rb#157
  def install_siginfo_handler; end

  # source://rdoc//lib/rdoc/rdoc.rb#57
  def last_modified; end

  # source://rdoc//lib/rdoc/rdoc.rb#323
  def list_files_in_directory(dir); end

  # source://rdoc//lib/rdoc/rdoc.rb#275
  def normalized_file_list(relative_files, force_doc = T.unsafe(nil), exclude_pattern = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/rdoc.rb#62
  def options; end

  # source://rdoc//lib/rdoc/rdoc.rb#62
  def options=(_arg0); end

  # source://rdoc//lib/rdoc/rdoc.rb#240
  def output_flag_file(op_dir); end

  # source://rdoc//lib/rdoc/rdoc.rb#249
  def parse_dot_doc_file(in_dir, filename); end

  # source://rdoc//lib/rdoc/rdoc.rb#332
  def parse_file(filename); end

  # source://rdoc//lib/rdoc/rdoc.rb#404
  def parse_files(files); end

  # source://rdoc//lib/rdoc/rdoc.rb#534
  def remove_siginfo_handler; end

  # source://rdoc//lib/rdoc/rdoc.rb#428
  def remove_unparseable(files); end

  # source://rdoc//lib/rdoc/rdoc.rb#170
  def setup_output_dir(dir, force); end

  # source://rdoc//lib/rdoc/rdoc.rb#67
  def stats; end

  # source://rdoc//lib/rdoc/rdoc.rb#72
  def store; end

  # source://rdoc//lib/rdoc/rdoc.rb#215
  def store=(store); end

  # source://rdoc//lib/rdoc/rdoc.rb#223
  def update_output_dir(op_dir, time, last = T.unsafe(nil)); end

  class << self
    # source://rdoc//lib/rdoc/rdoc.rb#77
    def add_generator(klass); end

    # source://rdoc//lib/rdoc/rdoc.rb#85
    def current; end

    # source://rdoc//lib/rdoc/rdoc.rb#92
    def current=(rdoc); end
  end
end

# source://rdoc//lib/rdoc/rdoc.rb#46
RDoc::RDoc::TEST_SUITE_DIRECTORY_NAMES = T.let(T.unsafe(nil), Array)

# source://rdoc//lib/rdoc/rdoc.rb#41
RDoc::RDoc::UNCONDITIONALLY_SKIPPED_DIRECTORIES = T.let(T.unsafe(nil), Array)

# source://rdoc//lib/rdoc/ri/driver.rb#25
class RDoc::RI::Driver
  # source://rdoc//lib/rdoc/ri/driver.rb#391
  def initialize(initial_options = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/ri/driver.rb#429
  def add_also_in(out, also_in); end

  # source://rdoc//lib/rdoc/ri/driver.rb#446
  def add_class(out, name, classes); end

  # source://rdoc//lib/rdoc/ri/driver.rb#473
  def add_extends(out, extends); end

  # source://rdoc//lib/rdoc/ri/driver.rb#481
  def add_extension_modules(out, type, extensions); end

  # source://rdoc//lib/rdoc/ri/driver.rb#499
  def add_extension_modules_multiple(out, store, modules); end

  # source://rdoc//lib/rdoc/ri/driver.rb#526
  def add_extension_modules_single(out, store, include); end

  # source://rdoc//lib/rdoc/ri/driver.rb#466
  def add_from(out, store); end

  # source://rdoc//lib/rdoc/ri/driver.rb#540
  def add_includes(out, includes); end

  # source://rdoc//lib/rdoc/ri/driver.rb#547
  def add_method(out, name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#558
  def add_method_documentation(out, klass); end

  # source://rdoc//lib/rdoc/ri/driver.rb#571
  def add_method_list(out, methods, name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#591
  def ancestors_of(klass); end

  # source://rdoc//lib/rdoc/ri/driver.rb#926
  def check_did_you_mean; end

  # source://rdoc//lib/rdoc/ri/driver.rb#622
  def class_cache; end

  # source://rdoc//lib/rdoc/ri/driver.rb#628
  def class_document(name, found, klasses, includes, extends); end

  # source://rdoc//lib/rdoc/ri/driver.rb#650
  def class_document_comment(out, comment); end

  # source://rdoc//lib/rdoc/ri/driver.rb#670
  def class_document_constants(out, klass); end

  # source://rdoc//lib/rdoc/ri/driver.rb#694
  def classes; end

  # source://rdoc//lib/rdoc/ri/driver.rb#714
  def classes_and_includes_and_extends_for(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#739
  def complete(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#750
  def complete_klass(name, klass, selector, method, completions); end

  # source://rdoc//lib/rdoc/ri/driver.rb#769
  def complete_method(name, klass, selector, completions); end

  # source://rdoc//lib/rdoc/ri/driver.rb#789
  def display(document); end

  # source://rdoc//lib/rdoc/ri/driver.rb#802
  def display_class(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#818
  def display_method(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#832
  def display_name(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#861
  def display_names(names); end

  # source://rdoc//lib/rdoc/ri/driver.rb#872
  def display_page(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#903
  def display_page_list(store, pages = T.unsafe(nil), search = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/ri/driver.rb#947
  def expand_class(klass); end

  # source://rdoc//lib/rdoc/ri/driver.rb#965
  def expand_name(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#981
  def filter_methods(found, name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#999
  def find_methods(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1045
  def find_store(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1062
  def formatter(io); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1075
  def interactive; end

  # source://rdoc//lib/rdoc/ri/driver.rb#1114
  def list_known_classes(names = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1146
  def list_methods_matching(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1185
  def load_method(store, cache, klass, type, name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1208
  def load_methods_matching(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1229
  def lookup_method(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1254
  def method_document(name, filtered); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1272
  def method_type(selector); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1284
  def name_regexp(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1298
  def page; end

  # source://rdoc//lib/rdoc/ri/driver.rb#1316
  def paging?; end

  # source://rdoc//lib/rdoc/ri/driver.rb#1327
  def parse_name(name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1359
  def render_class(out, store, klass, also_in); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1389
  def render_method(out, store, method, name); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1409
  def render_method_arguments(out, arglists); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1418
  def render_method_comment(out, method, alias_for = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1436
  def render_method_superclass(out, method); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1448
  def run; end

  # source://rdoc//lib/rdoc/ri/driver.rb#1468
  def setup_pager; end

  # source://rdoc//lib/rdoc/ri/driver.rb#62
  def show_all; end

  # source://rdoc//lib/rdoc/ri/driver.rb#62
  def show_all=(_arg0); end

  # source://rdoc//lib/rdoc/ri/driver.rb#1494
  def start_server; end

  # source://rdoc//lib/rdoc/ri/driver.rb#67
  def stores; end

  # source://rdoc//lib/rdoc/ri/driver.rb#67
  def stores=(_arg0); end

  # source://rdoc//lib/rdoc/ri/driver.rb#72
  def use_stdout; end

  # source://rdoc//lib/rdoc/ri/driver.rb#72
  def use_stdout=(_arg0); end

  class << self
    # source://rdoc//lib/rdoc/ri/driver.rb#77
    def default_options; end

    # source://rdoc//lib/rdoc/ri/driver.rb#98
    def dump(data_path); end

    # source://rdoc//lib/rdoc/ri/driver.rb#109
    def process_args(argv); end

    # source://rdoc//lib/rdoc/ri/driver.rb#376
    def run(argv = T.unsafe(nil)); end
  end
end

# source://rdoc//lib/rdoc/ri/driver.rb#35
class RDoc::RI::Driver::NotFoundError < ::RDoc::RI::Driver::Error
  # source://rdoc//lib/rdoc/ri/driver.rb#37
  def initialize(klass, suggestion_proc = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/ri/driver.rb#49
  def message; end

  # source://rdoc//lib/rdoc/ri/driver.rb#45
  def name; end
end

# source://rdoc//lib/rdoc/ri/formatter.rb#5
module RDoc::RI::Formatter; end

# source://rdoc//lib/rdoc/ri/store.rb#4
RDoc::RI::Store = RDoc::Store

# source://rdoc//lib/rdoc/require.rb#5
class RDoc::Require < ::RDoc::CodeObject
  # source://rdoc//lib/rdoc/require.rb#15
  def initialize(name, comment); end

  # source://rdoc//lib/rdoc/require.rb#22
  def inspect; end

  # source://rdoc//lib/rdoc/require.rb#10
  def name; end

  # source://rdoc//lib/rdoc/require.rb#10
  def name=(_arg0); end

  # source://rdoc//lib/rdoc/require.rb#31
  def to_s; end

  # source://rdoc//lib/rdoc/require.rb#38
  def top_level; end
end

# source://rdoc//lib/rdoc/servlet.rb#34
class RDoc::Servlet < ::WEBrick::HTTPServlet::AbstractServlet
  # source://rdoc//lib/rdoc/servlet.rb#69
  def initialize(server, stores, cache, mount_path = T.unsafe(nil), extra_doc_dirs = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/servlet.rb#100
  def asset(generator_name, req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#42
  def asset_dirs; end

  # source://rdoc//lib/rdoc/servlet.rb#119
  def do_GET(req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#152
  def documentation_page(store, generator, path, req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#171
  def documentation_search(store, generator, req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#185
  def documentation_source(path); end

  # source://rdoc//lib/rdoc/servlet.rb#203
  def error(exception, req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#246
  def generator_for(store); end

  # source://rdoc//lib/rdoc/servlet.rb#267
  def if_modified_since(req, res, path = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/servlet.rb#290
  def installed_docs; end

  # source://rdoc//lib/rdoc/servlet.rb#318
  def not_found(generator, req, res, message = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/servlet.rb#47
  def options; end

  # source://rdoc//lib/rdoc/servlet.rb#327
  def ri_paths(&block); end

  # source://rdoc//lib/rdoc/servlet.rb#334
  def root(req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#345
  def root_search(req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#395
  def show_documentation(req, res); end

  # source://rdoc//lib/rdoc/servlet.rb#419
  def store_for(source_name); end

  class << self
    # source://rdoc//lib/rdoc/servlet.rb#53
    def get_instance(server, *options); end
  end
end

# source://rdoc//lib/rdoc/single_class.rb#5
class RDoc::SingleClass < ::RDoc::ClassModule
  # source://rdoc//lib/rdoc/single_class.rb#10
  def ancestors; end

  # source://rdoc//lib/rdoc/single_class.rb#14
  def aref_prefix; end

  # source://rdoc//lib/rdoc/single_class.rb#21
  def definition; end

  # source://rdoc//lib/rdoc/single_class.rb#25
  def pretty_print(q); end
end

# source://rdoc//lib/rdoc/stats.rb#6
class RDoc::Stats
  include ::RDoc::Text

  # source://rdoc//lib/rdoc/stats.rb#29
  def initialize(store, num_files, verbosity = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/stats.rb#52
  def add_alias(as); end

  # source://rdoc//lib/rdoc/stats.rb#59
  def add_attribute(attribute); end

  # source://rdoc//lib/rdoc/stats.rb#66
  def add_class(klass); end

  # source://rdoc//lib/rdoc/stats.rb#73
  def add_constant(constant); end

  # source://rdoc//lib/rdoc/stats.rb#80
  def add_file(file); end

  # source://rdoc//lib/rdoc/stats.rb#88
  def add_method(method); end

  # source://rdoc//lib/rdoc/stats.rb#95
  def add_module(mod); end

  # source://rdoc//lib/rdoc/stats.rb#102
  def begin_adding; end

  # source://rdoc//lib/rdoc/stats.rb#110
  def calculate; end

  # source://rdoc//lib/rdoc/stats.rb#13
  def coverage_level; end

  # source://rdoc//lib/rdoc/stats.rb#158
  def coverage_level=(level); end

  # source://rdoc//lib/rdoc/stats.rb#167
  def doc_stats(collection); end

  # source://rdoc//lib/rdoc/stats.rb#175
  def done_adding; end

  # source://rdoc//lib/rdoc/stats.rb#18
  def files_so_far; end

  # source://rdoc//lib/rdoc/stats.rb#185
  def fully_documented?; end

  # source://rdoc//lib/rdoc/stats.rb#192
  def great_job; end

  # source://rdoc//lib/rdoc/stats.rb#23
  def num_files; end

  # source://rdoc//lib/rdoc/stats.rb#204
  def percent_doc; end

  # source://rdoc//lib/rdoc/stats.rb#218
  def report; end

  # source://rdoc//lib/rdoc/stats.rb#259
  def report_attributes(cm); end

  # source://rdoc//lib/rdoc/stats.rb#277
  def report_class_module(cm); end

  # source://rdoc//lib/rdoc/stats.rb#329
  def report_constants(cm); end

  # source://rdoc//lib/rdoc/stats.rb#351
  def report_methods(cm); end

  # source://rdoc//lib/rdoc/stats.rb#389
  def summary; end

  # source://rdoc//lib/rdoc/stats.rb#439
  def undoc_params(method); end
end

# source://rdoc//lib/rdoc/stats/normal.rb#13
class RDoc::Stats::Normal < ::RDoc::Stats::Quiet
  # source://rdoc//lib/rdoc/stats/normal.rb#15
  def begin_adding; end

  # source://rdoc//lib/rdoc/stats/normal.rb#54
  def done_adding; end

  # source://rdoc//lib/rdoc/stats/normal.rb#23
  def print_file(files_so_far, filename); end
end

# source://rdoc//lib/rdoc/stats/quiet.rb#5
class RDoc::Stats::Quiet
  # source://rdoc//lib/rdoc/stats/quiet.rb#10
  def initialize(num_files); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#17
  def begin_adding(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#57
  def done_adding(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#22
  def print_alias(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#27
  def print_attribute(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#32
  def print_class(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#37
  def print_constant(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#42
  def print_file(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#47
  def print_method(*_arg0); end

  # source://rdoc//lib/rdoc/stats/quiet.rb#52
  def print_module(*_arg0); end
end

# source://rdoc//lib/rdoc/stats/verbose.rb#6
class RDoc::Stats::Verbose < ::RDoc::Stats::Normal
  # source://rdoc//lib/rdoc/stats/verbose.rb#11
  def nodoc(co); end

  # source://rdoc//lib/rdoc/stats/verbose.rb#15
  def print_alias(as); end

  # source://rdoc//lib/rdoc/stats/verbose.rb#19
  def print_attribute(attribute); end

  # source://rdoc//lib/rdoc/stats/verbose.rb#23
  def print_class(klass); end

  # source://rdoc//lib/rdoc/stats/verbose.rb#27
  def print_constant(constant); end

  # source://rdoc//lib/rdoc/stats/verbose.rb#31
  def print_file(files_so_far, file); end

  # source://rdoc//lib/rdoc/stats/verbose.rb#36
  def print_method(method); end

  # source://rdoc//lib/rdoc/stats/verbose.rb#40
  def print_module(mod); end
end

# source://rdoc//lib/rdoc/store.rb#25
class RDoc::Store
  # source://rdoc//lib/rdoc/store.rb#127
  def initialize(path = T.unsafe(nil), type = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/store.rb#169
  def add_c_enclosure(variable, namespace); end

  # source://rdoc//lib/rdoc/store.rb#176
  def add_c_variables(c_parser); end

  # source://rdoc//lib/rdoc/store.rb#188
  def add_file(absolute_name, relative_name: T.unsafe(nil), parser: T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/store.rb#212
  def all_classes; end

  # source://rdoc//lib/rdoc/store.rb#219
  def all_classes_and_modules; end

  # source://rdoc//lib/rdoc/store.rb#226
  def all_files; end

  # source://rdoc//lib/rdoc/store.rb#233
  def all_modules; end

  # source://rdoc//lib/rdoc/store.rb#242
  def ancestors; end

  # source://rdoc//lib/rdoc/store.rb#249
  def attributes; end

  # source://rdoc//lib/rdoc/store.rb#80
  def c_class_variables; end

  # source://rdoc//lib/rdoc/store.rb#73
  def c_enclosure_classes; end

  # source://rdoc//lib/rdoc/store.rb#75
  def c_enclosure_names; end

  # source://rdoc//lib/rdoc/store.rb#85
  def c_singleton_class_variables; end

  # source://rdoc//lib/rdoc/store.rb#112
  def cache; end

  # source://rdoc//lib/rdoc/store.rb#256
  def cache_path; end

  # source://rdoc//lib/rdoc/store.rb#263
  def class_file(klass_name); end

  # source://rdoc//lib/rdoc/store.rb#272
  def class_methods; end

  # source://rdoc//lib/rdoc/store.rb#279
  def class_path(klass_name); end

  # source://rdoc//lib/rdoc/store.rb#286
  def classes_hash; end

  # source://rdoc//lib/rdoc/store.rb#294
  def clean_cache_collection(collection); end

  # source://rdoc//lib/rdoc/store.rb#322
  def complete(min_visibility); end

  # source://rdoc//lib/rdoc/store.rb#90
  def dry_run; end

  # source://rdoc//lib/rdoc/store.rb#90
  def dry_run=(_arg0); end

  # source://rdoc//lib/rdoc/store.rb#117
  def encoding; end

  # source://rdoc//lib/rdoc/store.rb#117
  def encoding=(_arg0); end

  # source://rdoc//lib/rdoc/store.rb#362
  def files_hash; end

  # source://rdoc//lib/rdoc/store.rb#369
  def find_c_enclosure(variable); end

  # source://rdoc//lib/rdoc/store.rb#394
  def find_class_named(name); end

  # source://rdoc//lib/rdoc/store.rb#401
  def find_class_named_from(name, from); end

  # source://rdoc//lib/rdoc/store.rb#419
  def find_class_or_module(name); end

  # source://rdoc//lib/rdoc/store.rb#427
  def find_file_named(name); end

  # source://rdoc//lib/rdoc/store.rb#434
  def find_module_named(name); end

  # source://rdoc//lib/rdoc/store.rb#442
  def find_text_page(file_name); end

  # source://rdoc//lib/rdoc/store.rb#455
  def find_unique(all_hash); end

  # source://rdoc//lib/rdoc/store.rb#474
  def fix_basic_object_inheritance; end

  # source://rdoc//lib/rdoc/store.rb#483
  def friendly_path; end

  # source://rdoc//lib/rdoc/store.rb#495
  def inspect; end

  # source://rdoc//lib/rdoc/store.rb#503
  def instance_methods; end

  # source://rdoc//lib/rdoc/store.rb#511
  def load_all; end

  # source://rdoc//lib/rdoc/store.rb#559
  def load_cache; end

  # source://rdoc//lib/rdoc/store.rb#598
  def load_class(klass_name); end

  # source://rdoc//lib/rdoc/store.rb#616
  def load_class_data(klass_name); end

  # source://rdoc//lib/rdoc/store.rb#629
  def load_method(klass_name, method_name); end

  # source://rdoc//lib/rdoc/store.rb#645
  def load_page(page_name); end

  # source://rdoc//lib/rdoc/store.rb#661
  def main; end

  # source://rdoc//lib/rdoc/store.rb#668
  def main=(page); end

  # source://rdoc//lib/rdoc/store.rb#676
  def make_variable_map(variables); end

  # source://rdoc//lib/rdoc/store.rb#689
  def method_file(klass_name, method_name); end

  # source://rdoc//lib/rdoc/store.rb#703
  def module_names; end

  # source://rdoc//lib/rdoc/store.rb#710
  def modules_hash; end

  # source://rdoc//lib/rdoc/store.rb#717
  def page(name); end

  # source://rdoc//lib/rdoc/store.rb#726
  def page_file(page_name); end

  # source://rdoc//lib/rdoc/store.rb#95
  def path; end

  # source://rdoc//lib/rdoc/store.rb#95
  def path=(_arg0); end

  # source://rdoc//lib/rdoc/store.rb#101
  def rdoc; end

  # source://rdoc//lib/rdoc/store.rb#101
  def rdoc=(_arg0); end

  # source://rdoc//lib/rdoc/store.rb#737
  def remove_nodoc(all_hash); end

  # source://rdoc//lib/rdoc/store.rb#747
  def save; end

  # source://rdoc//lib/rdoc/store.rb#772
  def save_cache; end

  # source://rdoc//lib/rdoc/store.rb#799
  def save_class(klass); end

  # source://rdoc//lib/rdoc/store.rb#873
  def save_method(klass, method); end

  # source://rdoc//lib/rdoc/store.rb#896
  def save_page(page); end

  # source://rdoc//lib/rdoc/store.rb#922
  def source; end

  # source://rdoc//lib/rdoc/store.rb#936
  def title; end

  # source://rdoc//lib/rdoc/store.rb#943
  def title=(title); end

  # source://rdoc//lib/rdoc/store.rb#107
  def type; end

  # source://rdoc//lib/rdoc/store.rb#107
  def type=(_arg0); end

  # source://rdoc//lib/rdoc/store.rb#952
  def unique_classes; end

  # source://rdoc//lib/rdoc/store.rb#960
  def unique_classes_and_modules; end

  # source://rdoc//lib/rdoc/store.rb#968
  def unique_modules; end

  # source://rdoc//lib/rdoc/store.rb#122
  def unmatched_constant_alias; end

  # source://rdoc//lib/rdoc/store.rb#203
  def update_parser_of_file(absolute_name, parser); end

  private

  # source://rdoc//lib/rdoc/store.rb#973
  def marshal_load(file); end
end

# source://rdoc//lib/rdoc/store.rb#977
RDoc::Store::MarshalFilter = T.let(T.unsafe(nil), Proc)

# source://rdoc//lib/rdoc/store.rb#36
class RDoc::Store::MissingFileError < ::RDoc::Store::Error
  # source://rdoc//lib/rdoc/store.rb#57
  def initialize(store, file, name); end

  # source://rdoc//lib/rdoc/store.rb#46
  def file; end

  # source://rdoc//lib/rdoc/store.rb#63
  def message; end

  # source://rdoc//lib/rdoc/store.rb#51
  def name; end

  # source://rdoc//lib/rdoc/store.rb#41
  def store; end
end

# source://rdoc//lib/rdoc/task.rb#99
class RDoc::Task < ::Rake::TaskLib
  # source://rdoc//lib/rdoc/task.rb#158
  def initialize(name = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/task.rb#288
  def before_running_rdoc(&block); end

  # source://rdoc//lib/rdoc/task.rb#174
  def check_names(names); end

  # source://rdoc//lib/rdoc/task.rb#188
  def clobber_task_description; end

  # source://rdoc//lib/rdoc/task.rb#309
  def coverage_task_description; end

  # source://rdoc//lib/rdoc/task.rb#195
  def defaults; end

  # source://rdoc//lib/rdoc/task.rb#224
  def define; end

  # source://rdoc//lib/rdoc/task.rb#152
  def external; end

  # source://rdoc//lib/rdoc/task.rb#152
  def external=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#137
  def generator; end

  # source://rdoc//lib/rdoc/task.rb#137
  def generator=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#209
  def inline_source; end

  # source://rdoc//lib/rdoc/task.rb#217
  def inline_source=(value); end

  # source://rdoc//lib/rdoc/task.rb#126
  def main; end

  # source://rdoc//lib/rdoc/task.rb#126
  def main=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#110
  def markup; end

  # source://rdoc//lib/rdoc/task.rb#110
  def markup=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#104
  def name; end

  # source://rdoc//lib/rdoc/task.rb#104
  def name=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#272
  def option_list; end

  # source://rdoc//lib/rdoc/task.rb#147
  def options; end

  # source://rdoc//lib/rdoc/task.rb#147
  def options=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#115
  def rdoc_dir; end

  # source://rdoc//lib/rdoc/task.rb#115
  def rdoc_dir=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#142
  def rdoc_files; end

  # source://rdoc//lib/rdoc/task.rb#142
  def rdoc_files=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#295
  def rdoc_task_description; end

  # source://rdoc//lib/rdoc/task.rb#302
  def rerdoc_task_description; end

  # source://rdoc//lib/rdoc/task.rb#131
  def template; end

  # source://rdoc//lib/rdoc/task.rb#131
  def template=(_arg0); end

  # source://rdoc//lib/rdoc/task.rb#120
  def title; end

  # source://rdoc//lib/rdoc/task.rb#120
  def title=(_arg0); end

  private

  # source://rdoc//lib/rdoc/task.rb#326
  def clobber_task_name; end

  # source://rdoc//lib/rdoc/task.rb#340
  def coverage_task_name; end

  # source://rdoc//lib/rdoc/task.rb#315
  def rdoc_target; end

  # source://rdoc//lib/rdoc/task.rb#319
  def rdoc_task_name; end

  # source://rdoc//lib/rdoc/task.rb#333
  def rerdoc_task_name; end
end

# source://rdoc//lib/rdoc/text.rb#11
module RDoc::Text
  # source://rdoc//lib/rdoc/text.rb#63
  def expand_tabs(text); end

  # source://rdoc//lib/rdoc/text.rb#82
  def flush_left(text); end

  # source://rdoc//lib/rdoc/text.rb#17
  def language; end

  # source://rdoc//lib/rdoc/text.rb#17
  def language=(_arg0); end

  # source://rdoc//lib/rdoc/text.rb#101
  def markup(text); end

  # source://rdoc//lib/rdoc/text.rb#117
  def normalize_comment(text); end

  # source://rdoc//lib/rdoc/text.rb#135
  def parse(text, format = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/text.rb#149
  def snippet(text, limit = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/text.rb#158
  def strip_hashes(text); end

  # source://rdoc//lib/rdoc/text.rb#170
  def strip_newlines(text); end

  # source://rdoc//lib/rdoc/text.rb#177
  def strip_stars(text); end

  # source://rdoc//lib/rdoc/text.rb#200
  def to_html(text); end

  # source://rdoc//lib/rdoc/text.rb#287
  def wrap(txt, line_len = T.unsafe(nil)); end

  class << self
    # source://rdoc//lib/rdoc/text.rb#55
    def encode_fallback(character, encoding, fallback); end
  end
end

# source://rdoc//lib/rdoc/text.rb#320
RDoc::Text::SPACE_SEPARATED_LETTER_CLASS = T.let(T.unsafe(nil), Regexp)

# source://rdoc//lib/rdoc/token_stream.rb#9
module RDoc::TokenStream
  # source://rdoc//lib/rdoc/token_stream.rb#84
  def add_token(token); end

  # source://rdoc//lib/rdoc/token_stream.rb#77
  def add_tokens(tokens); end

  # source://rdoc//lib/rdoc/token_stream.rb#91
  def collect_tokens; end

  # source://rdoc//lib/rdoc/token_stream.rb#100
  def pop_token; end

  # source://rdoc//lib/rdoc/token_stream.rb#91
  def start_collecting_tokens; end

  # source://rdoc//lib/rdoc/token_stream.rb#107
  def token_stream; end

  # source://rdoc//lib/rdoc/token_stream.rb#114
  def tokens_to_s; end

  class << self
    # source://rdoc//lib/rdoc/token_stream.rb#16
    def to_html(token_stream); end
  end
end

# source://rdoc//lib/rdoc/tom_doc.rb#42
class RDoc::TomDoc < ::RDoc::Markup::Parser
  # source://rdoc//lib/rdoc/tom_doc.rb#130
  def initialize; end

  # source://rdoc//lib/rdoc/tom_doc.rb#143
  def build_heading(level); end

  # source://rdoc//lib/rdoc/tom_doc.rb#173
  def build_paragraph(margin); end

  # source://rdoc//lib/rdoc/tom_doc.rb#159
  def build_verbatim(margin); end

  # source://rdoc//lib/rdoc/tom_doc.rb#213
  def parse_text(parent, indent); end

  # source://rdoc//lib/rdoc/tom_doc.rb#231
  def tokenize(text); end

  # source://rdoc//lib/rdoc/tom_doc.rb#46
  def tokens; end

  class << self
    # source://rdoc//lib/rdoc/tom_doc.rb#53
    def add_post_processor; end

    # source://rdoc//lib/rdoc/tom_doc.rb#84
    def parse(text); end

    # source://rdoc//lib/rdoc/tom_doc.rb#100
    def signature(comment); end
  end
end

# source://rdoc//lib/rdoc/top_level.rb#5
class RDoc::TopLevel < ::RDoc::Context
  # source://rdoc//lib/rdoc/top_level.rb#43
  def initialize(absolute_name, relative_name = T.unsafe(nil)); end

  # source://rdoc//lib/rdoc/top_level.rb#67
  def ==(other); end

  # source://rdoc//lib/rdoc/top_level.rb#22
  def absolute_name; end

  # source://rdoc//lib/rdoc/top_level.rb#22
  def absolute_name=(_arg0); end

  # source://rdoc//lib/rdoc/top_level.rb#76
  def add_alias(an_alias); end

  # source://rdoc//lib/rdoc/top_level.rb#85
  def add_constant(constant); end

  # source://rdoc//lib/rdoc/top_level.rb#94
  def add_include(include); end

  # source://rdoc//lib/rdoc/top_level.rb#103
  def add_method(method); end

  # source://rdoc//lib/rdoc/top_level.rb#113
  def add_to_classes_or_modules(mod); end

  # source://rdoc//lib/rdoc/top_level.rb#120
  def base_name; end

  # source://rdoc//lib/rdoc/top_level.rb#29
  def classes_or_modules; end

  # source://rdoc//lib/rdoc/generator/markup.rb#149
  def cvs_url; end

  # source://rdoc//lib/rdoc/top_level.rb#31
  def diagram; end

  # source://rdoc//lib/rdoc/top_level.rb#31
  def diagram=(_arg0); end

  # source://rdoc//lib/rdoc/top_level.rb#130
  def display?; end

  # source://rdoc//lib/rdoc/top_level.rb#67
  def eql?(other); end

  # source://rdoc//lib/rdoc/top_level.rb#12
  def file_stat; end

  # source://rdoc//lib/rdoc/top_level.rb#12
  def file_stat=(_arg0); end

  # source://rdoc//lib/rdoc/top_level.rb#140
  def find_class_or_module(name); end

  # source://rdoc//lib/rdoc/top_level.rb#147
  def find_local_symbol(symbol); end

  # source://rdoc//lib/rdoc/top_level.rb#154
  def find_module_named(name); end

  # source://rdoc//lib/rdoc/top_level.rb#161
  def full_name; end

  # source://rdoc//lib/rdoc/top_level.rb#169
  def hash; end

  # source://rdoc//lib/rdoc/top_level.rb#176
  def http_url(prefix); end

  # source://rdoc//lib/rdoc/top_level.rb#182
  def inspect; end

  # source://rdoc//lib/rdoc/top_level.rb#194
  def last_modified; end

  # source://rdoc//lib/rdoc/top_level.rb#201
  def marshal_dump; end

  # source://rdoc//lib/rdoc/top_level.rb#213
  def marshal_load(array); end

  # source://rdoc//lib/rdoc/top_level.rb#120
  def name; end

  # source://rdoc//lib/rdoc/top_level.rb#227
  def object_class; end

  # source://rdoc//lib/rdoc/top_level.rb#238
  def page_name; end

  # source://rdoc//lib/rdoc/top_level.rb#36
  def parser; end

  # source://rdoc//lib/rdoc/top_level.rb#58
  def parser=(val); end

  # source://rdoc//lib/rdoc/top_level.rb#248
  def path; end

  # source://rdoc//lib/rdoc/top_level.rb#252
  def pretty_print(q); end

  # source://rdoc//lib/rdoc/top_level.rb#17
  def relative_name; end

  # source://rdoc//lib/rdoc/top_level.rb#17
  def relative_name=(_arg0); end

  # source://rdoc//lib/rdoc/top_level.rb#266
  def search_record; end

  # source://rdoc//lib/rdoc/top_level.rb#283
  def text?; end

  # source://rdoc//lib/rdoc/top_level.rb#287
  def to_s; end
end

# source://rdoc//lib/rdoc/task.rb#347
module Rake
  extend ::FileUtils::StreamUtils_
  extend ::FileUtils
end

# source://rdoc//lib/rdoc/task.rb#352
Rake::RDocTask = RDoc::Task
