# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `zeitwerk` gem.
# Please instead update this file by running `bin/tapioca gem zeitwerk`.


# source://zeitwerk//lib/zeitwerk/kernel.rb#3
module Kernel
  private

  # source://zeitwerk//lib/zeitwerk/kernel.rb#23
  def require(path); end

  class << self
    # source://zeitwerk//lib/zeitwerk/kernel.rb#23
    def require(path); end
  end
end

# source://zeitwerk//lib/zeitwerk.rb#3
module Zeitwerk
  class << self
    # source://zeitwerk//lib/zeitwerk.rb#21
    def with_loader; end
  end
end

# source://zeitwerk//lib/zeitwerk/error.rb#4
class Zeitwerk::Error < ::StandardError; end

# source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#11
module Zeitwerk::ExplicitNamespace
  extend ::Zeitwerk::RealModName

  class << self
    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#35
    def __register(cpath, loader); end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#53
    def __registered?(cpath); end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#45
    def __unregister_loader(loader); end

    private

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#20
    def cpaths; end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#58
    def disable_tracer_if_unneeded; end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#24
    def mutex; end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#35
    def register(cpath, loader); end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#53
    def registered?(cpath); end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#65
    def tracepoint_class_callback(event); end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#28
    def tracer; end

    # source://zeitwerk//lib/zeitwerk/explicit_namespace.rb#45
    def unregister_loader(loader); end
  end
end

# source://zeitwerk//lib/zeitwerk/gem_inflector.rb#4
class Zeitwerk::GemInflector < ::Zeitwerk::Inflector
  # source://zeitwerk//lib/zeitwerk/gem_inflector.rb#6
  def initialize(root_file); end

  # source://zeitwerk//lib/zeitwerk/gem_inflector.rb#13
  def camelize(basename, abspath); end
end

# source://zeitwerk//lib/zeitwerk/gem_loader.rb#5
class Zeitwerk::GemLoader < ::Zeitwerk::Loader
  # source://zeitwerk//lib/zeitwerk/gem_loader.rb#19
  def initialize(root_file, namespace:, warn_on_extra_files:); end

  # source://zeitwerk//lib/zeitwerk/gem_loader.rb#34
  def setup; end

  private

  # source://zeitwerk//lib/zeitwerk/gem_loader.rb#42
  def warn_on_extra_files; end

  class << self
    # source://zeitwerk//lib/zeitwerk/gem_loader.rb#14
    def __new(root_file, namespace:, warn_on_extra_files:); end

    private

    def new(*_arg0); end
  end
end

# source://zeitwerk//lib/zeitwerk/inflector.rb#4
class Zeitwerk::Inflector
  # source://zeitwerk//lib/zeitwerk/inflector.rb#15
  def camelize(basename, _abspath); end

  # source://zeitwerk//lib/zeitwerk/inflector.rb#32
  def inflect(inflections); end

  private

  # source://zeitwerk//lib/zeitwerk/inflector.rb#42
  def overrides; end
end

# source://zeitwerk//lib/zeitwerk/internal.rb#4
module Zeitwerk::Internal
  # source://zeitwerk//lib/zeitwerk/internal.rb#5
  def internal(method_name); end
end

# source://zeitwerk//lib/zeitwerk/loader.rb#7
class Zeitwerk::Loader
  include ::Zeitwerk::RealModName
  include ::Zeitwerk::Loader::Callbacks
  include ::Zeitwerk::Loader::Helpers
  include ::Zeitwerk::Loader::Config
  include ::Zeitwerk::Loader::EagerLoad
  extend ::Zeitwerk::Internal
  extend ::Zeitwerk::RealModName

  # source://zeitwerk//lib/zeitwerk/loader.rb#99
  def initialize; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#43
  def __autoloaded_dirs; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#33
  def __autoloads; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#77
  def __namespace_dirs; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#344
  def __shadowed_file?(file); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#88
  def __shadowed_files; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#59
  def __to_unload; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#237
  def all_expected_cpaths; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#268
  def cpath_expected_at(path); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#223
  def reload; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#119
  def setup; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#145
  def unload; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#319
  def unloadable_cpath?(cpath); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#327
  def unloadable_cpaths; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#335
  def unregister; end

  private

  # source://zeitwerk//lib/zeitwerk/loader.rb#490
  def autoload_file(parent, cname, file); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#548
  def autoload_path_set_by_me_for?(parent, cname); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#460
  def autoload_subdir(parent, cname, subdir); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#43
  def autoloaded_dirs; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#33
  def autoloads; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#527
  def define_autoload(parent, cname, abspath); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#444
  def define_autoloads_for_dir(dir, parent); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#96
  def dirs_autoload_monitor; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#92
  def mutex; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#77
  def namespace_dirs; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#516
  def promote_namespace_from_implicit_to_explicit(dir:, file:, parent:, cname:); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#562
  def raise_if_conflicting_directory(dir); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#557
  def register_explicit_namespace(cpath); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#586
  def run_on_unload_callbacks(cpath, value, abspath); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#344
  def shadowed_file?(file); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#88
  def shadowed_files; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#59
  def to_unload; end

  # source://zeitwerk//lib/zeitwerk/loader.rb#593
  def unload_autoload(parent, cname); end

  # source://zeitwerk//lib/zeitwerk/loader.rb#599
  def unload_cref(parent, cname); end

  class << self
    # source://zeitwerk//lib/zeitwerk/loader.rb#438
    def all_dirs; end

    # source://zeitwerk//lib/zeitwerk/loader.rb#354
    def default_logger; end

    # source://zeitwerk//lib/zeitwerk/loader.rb#354
    def default_logger=(_arg0); end

    # source://zeitwerk//lib/zeitwerk/loader.rb#410
    def eager_load_all; end

    # source://zeitwerk//lib/zeitwerk/loader.rb#424
    def eager_load_namespace(mod); end

    # source://zeitwerk//lib/zeitwerk/loader.rb#372
    def for_gem(warn_on_extra_files: T.unsafe(nil)); end

    # source://zeitwerk//lib/zeitwerk/loader.rb#393
    def for_gem_extension(namespace); end
  end
end

# source://zeitwerk//lib/zeitwerk/loader/callbacks.rb#3
module Zeitwerk::Loader::Callbacks
  include ::Zeitwerk::RealModName
  extend ::Zeitwerk::Internal

  # source://zeitwerk//lib/zeitwerk/loader/callbacks.rb#41
  def __on_dir_autoloaded(dir); end

  # source://zeitwerk//lib/zeitwerk/loader/callbacks.rb#10
  def __on_file_autoloaded(file); end

  # source://zeitwerk//lib/zeitwerk/loader/callbacks.rb#81
  def on_namespace_loaded(namespace); end

  private

  # source://zeitwerk//lib/zeitwerk/loader/callbacks.rb#41
  def on_dir_autoloaded(dir); end

  # source://zeitwerk//lib/zeitwerk/loader/callbacks.rb#10
  def on_file_autoloaded(file); end

  # source://zeitwerk//lib/zeitwerk/loader/callbacks.rb#92
  def run_on_load_callbacks(cpath, value, abspath); end
end

# source://zeitwerk//lib/zeitwerk/loader/config.rb#6
module Zeitwerk::Loader::Config
  include ::Zeitwerk::RealModName
  extend ::Zeitwerk::Internal

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#86
  def initialize; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#296
  def __ignores?(abspath); end

  def __roots; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#216
  def collapse(*glob_patterns); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#156
  def dirs(namespaces: T.unsafe(nil), ignored: T.unsafe(nil)); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#198
  def do_not_eager_load(*paths); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#177
  def enable_reloading; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#205
  def ignore(*glob_patterns); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#11
  def inflector; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#11
  def inflector=(_arg0); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#288
  def log!; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#14
  def logger; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#14
  def logger=(_arg0); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#252
  def on_load(cpath = T.unsafe(nil), &block); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#228
  def on_setup(&block); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#277
  def on_unload(cpath = T.unsafe(nil), &block); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#111
  def push_dir(path, namespace: T.unsafe(nil)); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#190
  def reloading_enabled?; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#135
  def tag; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#142
  def tag=(tag); end

  private

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#314
  def actual_roots; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#339
  def collapse?(dir); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#57
  def collapse_dirs; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#50
  def collapse_glob_patterns; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#63
  def eager_load_exclusions; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#326
  def excluded_from_eager_load?(abspath); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#349
  def expand_glob_patterns(glob_patterns); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#344
  def expand_paths(paths); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#36
  def ignored_glob_patterns; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#309
  def ignored_path?(abspath); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#44
  def ignored_paths; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#296
  def ignores?(abspath); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#76
  def on_load_callbacks; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#69
  def on_setup_callbacks; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#83
  def on_unload_callbacks; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#361
  def recompute_collapse_dirs; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#356
  def recompute_ignored_paths; end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#321
  def root_dir?(dir); end

  # source://zeitwerk//lib/zeitwerk/loader/config.rb#29
  def roots; end
end

# source://zeitwerk//lib/zeitwerk/loader/eager_load.rb#1
module Zeitwerk::Loader::EagerLoad
  # source://zeitwerk//lib/zeitwerk/loader/eager_load.rb#9
  def eager_load(force: T.unsafe(nil)); end

  # source://zeitwerk//lib/zeitwerk/loader/eager_load.rb#32
  def eager_load_dir(path); end

  # source://zeitwerk//lib/zeitwerk/loader/eager_load.rb#74
  def eager_load_namespace(mod); end

  # source://zeitwerk//lib/zeitwerk/loader/eager_load.rb#116
  def load_file(path); end

  private

  # source://zeitwerk//lib/zeitwerk/loader/eager_load.rb#160
  def actual_eager_load_dir(dir, namespace, force: T.unsafe(nil)); end

  # source://zeitwerk//lib/zeitwerk/loader/eager_load.rb#195
  def eager_load_child_namespace(child, child_name, root_dir, root_namespace); end
end

# source://zeitwerk//lib/zeitwerk/loader/helpers.rb#3
module Zeitwerk::Loader::Helpers
  private

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#132
  def cdef?(parent, cname); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#138
  def cget(parent, cname); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#153
  def cname_for(basename, abspath); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#122
  def cpath(parent, cname); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#144
  def crem(parent, cname); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#71
  def dir?(path); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#47
  def has_at_least_one_ruby_file?(dir); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#76
  def hidden?(basename); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#7
  def log(message); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#15
  def ls(dir); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#66
  def ruby?(path); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#113
  def strict_autoload_path(parent, cname); end

  # source://zeitwerk//lib/zeitwerk/loader/helpers.rb#81
  def walk_up(abspath); end
end

# source://zeitwerk//lib/zeitwerk/loader/helpers.rb#148
module Zeitwerk::Loader::Helpers::CNAME_VALIDATOR; end

# source://zeitwerk//lib/zeitwerk/loader.rb#21
Zeitwerk::Loader::MUTEX = T.let(T.unsafe(nil), Thread::Mutex)

# source://zeitwerk//lib/zeitwerk/error.rb#13
class Zeitwerk::NameError < ::NameError; end

# source://zeitwerk//lib/zeitwerk/null_inflector.rb#1
class Zeitwerk::NullInflector
  # source://zeitwerk//lib/zeitwerk/null_inflector.rb#2
  def camelize(basename, _abspath); end
end

# source://zeitwerk//lib/zeitwerk/real_mod_name.rb#3
module Zeitwerk::RealModName
  # source://zeitwerk//lib/zeitwerk/real_mod_name.rb#14
  def real_mod_name(mod); end
end

# source://zeitwerk//lib/zeitwerk/real_mod_name.rb#4
Zeitwerk::RealModName::UNBOUND_METHOD_MODULE_NAME = T.let(T.unsafe(nil), UnboundMethod)

# source://zeitwerk//lib/zeitwerk/registry.rb#4
module Zeitwerk::Registry
  class << self
    # source://zeitwerk//lib/zeitwerk/registry.rb#26
    def autoloads; end

    # source://zeitwerk//lib/zeitwerk/registry.rb#17
    def gem_loaders_by_root_file; end

    # source://zeitwerk//lib/zeitwerk/registry.rb#113
    def inception?(cpath); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#65
    def inceptions; end

    # source://zeitwerk//lib/zeitwerk/registry.rb#121
    def loader_for(path); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#89
    def loader_for_gem(root_file, namespace:, warn_on_extra_files:); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#11
    def loaders; end

    # source://zeitwerk//lib/zeitwerk/registry.rb#127
    def on_unload(loader); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#95
    def register_autoload(loader, abspath); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#107
    def register_inception(cpath, abspath, loader); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#71
    def register_loader(loader); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#101
    def unregister_autoload(abspath); end

    # source://zeitwerk//lib/zeitwerk/registry.rb#77
    def unregister_loader(loader); end
  end
end

# source://zeitwerk//lib/zeitwerk/error.rb#7
class Zeitwerk::ReloadingDisabledError < ::Zeitwerk::Error
  # source://zeitwerk//lib/zeitwerk/error.rb#8
  def initialize; end
end

# source://zeitwerk//lib/zeitwerk/error.rb#16
class Zeitwerk::SetupRequired < ::Zeitwerk::Error
  # source://zeitwerk//lib/zeitwerk/error.rb#17
  def initialize; end
end

# source://zeitwerk//lib/zeitwerk/version.rb#4
Zeitwerk::VERSION = T.let(T.unsafe(nil), String)
