# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `json` gem.
# Please instead update this file by running `bin/tapioca gem json`.


# source://json//lib/json/common.rb#868
class Class < ::Module
  # source://json//lib/json/common.rb#873
  def json_creatable?; end
end

# source://json//lib/json/version.rb#3
module JSON
  private

  # source://json//lib/json/common.rb#772
  def dump(obj, anIO = T.unsafe(nil), limit = T.unsafe(nil), kwargs = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#313
  def fast_generate(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#313
  def fast_unparse(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#285
  def generate(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#691
  def load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#234
  def load_file(filespec, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#245
  def load_file!(filespec, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#816
  def merge_dump_options(opts, strict: T.unsafe(nil)); end

  # source://json//lib/json/common.rb#204
  def parse(source, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#219
  def parse!(source, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#358
  def pretty_generate(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#358
  def pretty_unparse(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#717
  def recurse_proc(result, &proc); end

  # source://json//lib/json/common.rb#691
  def restore(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#285
  def unparse(obj, opts = T.unsafe(nil)); end

  # source://json//lib/json/common.rb#537
  def unsafe_load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

  class << self
    # source://json//lib/json/common.rb#23
    def [](object, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#80
    def create_fast_state; end

    # source://json//lib/json/common.rb#115
    def create_id; end

    # source://json//lib/json/common.rb#109
    def create_id=(new_value); end

    # source://json//lib/json/common.rb#90
    def create_pretty_state; end

    # source://json//lib/json/common.rb#50
    def deep_const_get(path); end

    # source://json//lib/json/common.rb#772
    def dump(obj, anIO = T.unsafe(nil), limit = T.unsafe(nil), kwargs = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#738
    def dump_default_options; end

    # source://json//lib/json/common.rb#738
    def dump_default_options=(_arg0); end

    # source://json//lib/json/common.rb#313
    def fast_generate(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#313
    def fast_unparse(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#285
    def generate(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#100
    def generator; end

    # source://json//lib/json/common.rb#57
    def generator=(generator); end

    # source://json//lib/json/common.rb#812
    def iconv(to, from, string); end

    # source://json//lib/json/common.rb#691
    def load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#402
    def load_default_options; end

    # source://json//lib/json/common.rb#402
    def load_default_options=(_arg0); end

    # source://json//lib/json/common.rb#234
    def load_file(filespec, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#245
    def load_file!(filespec, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#204
    def parse(source, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#219
    def parse!(source, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#37
    def parser; end

    # source://json//lib/json/common.rb#40
    def parser=(parser); end

    # source://json//lib/json/common.rb#358
    def pretty_generate(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#358
    def pretty_unparse(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#717
    def recurse_proc(result, &proc); end

    # source://json//lib/json/common.rb#691
    def restore(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#103
    def state; end

    # source://json//lib/json/common.rb#103
    def state=(_arg0); end

    # source://json//lib/json/common.rb#285
    def unparse(obj, opts = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#537
    def unsafe_load(source, proc = T.unsafe(nil), options = T.unsafe(nil)); end

    # source://json//lib/json/common.rb#388
    def unsafe_load_default_options; end

    # source://json//lib/json/common.rb#388
    def unsafe_load_default_options=(_arg0); end

    private

    # source://json//lib/json/common.rb#816
    def merge_dump_options(opts, strict: T.unsafe(nil)); end
  end
end

# source://json//lib/json/ext/generator/state.rb#6
class JSON::Ext::Generator::State
  # source://json//lib/json/ext/generator/state.rb#25
  def initialize(opts = T.unsafe(nil)); end

  # source://json//lib/json/ext/generator/state.rb#83
  def [](name); end

  # source://json//lib/json/ext/generator/state.rb#95
  def []=(name, value); end

  # source://json//lib/json/ext/generator/state.rb#35
  def configure(opts); end

  # source://json//lib/json/ext/generator/state.rb#35
  def merge(opts); end

  # source://json//lib/json/ext/generator/state.rb#54
  def to_h; end

  # source://json//lib/json/ext/generator/state.rb#54
  def to_hash; end
end

# source://json//lib/json/generic_object.rb#9
class JSON::GenericObject < ::OpenStruct
  # source://json//lib/json/generic_object.rb#67
  def as_json(*_arg0); end

  # source://json//lib/json/generic_object.rb#51
  def to_hash; end

  # source://json//lib/json/generic_object.rb#71
  def to_json(*a); end

  # source://json//lib/json/generic_object.rb#63
  def |(other); end

  class << self
    # source://json//lib/json/generic_object.rb#45
    def dump(obj, *args); end

    # source://json//lib/json/generic_object.rb#25
    def from_hash(object); end

    # source://json//lib/json/generic_object.rb#17
    def json_creatable=(_arg0); end

    # source://json//lib/json/generic_object.rb#13
    def json_creatable?; end

    # source://json//lib/json/generic_object.rb#19
    def json_create(data); end

    # source://json//lib/json/generic_object.rb#40
    def load(source, proc = T.unsafe(nil), opts = T.unsafe(nil)); end
  end
end

# source://json//lib/json/common.rb#126
class JSON::JSONError < ::StandardError
  class << self
    # source://json//lib/json/common.rb#127
    def wrap(exception); end
  end
end

# source://json//lib/json/common.rb#8
JSON::NOT_SET = T.let(T.unsafe(nil), Object)

# source://json//lib/json/common.rb#43
JSON::Parser = JSON::Ext::Parser

# source://json//lib/json/common.rb#72
JSON::State = JSON::Ext::Generator::State

# source://json//lib/json/common.rb#148
JSON::UnparserError = JSON::GeneratorError

# source://json//lib/json/common.rb#826
module Kernel
  private

  # source://json//lib/json/common.rb#853
  def JSON(object, *args); end

  # source://json//lib/json/common.rb#831
  def j(*objs); end

  # source://json//lib/json/common.rb#840
  def jj(*objs); end
end
