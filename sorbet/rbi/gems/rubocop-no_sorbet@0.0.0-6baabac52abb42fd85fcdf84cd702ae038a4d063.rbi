# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rubocop-no_sorbet` gem.
# Please instead update this file by running `bin/tapioca gem rubocop-no_sorbet`.


# source://rubocop-no_sorbet//lib/rubocop/no_sorbet/version.rb#3
module RuboCop; end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_abstract_bang.rb#4
module RuboCop::Cop; end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_abstract_bang.rb#5
module RuboCop::Cop::NoSorbet; end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_abstract_bang.rb#6
class RuboCop::Cop::NoSorbet::NoAbstractBang < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_abstract_bang.rb#14
  def abstract?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_abstract_bang.rb#18
  def on_send(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_abstract_bang.rb#9
RuboCop::Cop::NoSorbet::NoAbstractBang::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_abstract_bang.rb#11
RuboCop::Cop::NoSorbet::NoAbstractBang::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_helpers.rb#6
class RuboCop::Cop::NoSorbet::NoExtendTHelpers < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_helpers.rb#13
  def extend_t_helpers?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_helpers.rb#17
  def on_send(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_helpers.rb#9
RuboCop::Cop::NoSorbet::NoExtendTHelpers::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_helpers.rb#10
RuboCop::Cop::NoSorbet::NoExtendTHelpers::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_sig.rb#21
class RuboCop::Cop::NoSorbet::NoExtendTSig < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_sig.rb#28
  def extend_t_sig?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_sig.rb#32
  def on_send(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_sig.rb#24
RuboCop::Cop::NoSorbet::NoExtendTSig::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_extend_t_sig.rb#25
RuboCop::Cop::NoSorbet::NoExtendTSig::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_interface_bang.rb#6
class RuboCop::Cop::NoSorbet::NoInterfaceBang < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_interface_bang.rb#14
  def interface?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_interface_bang.rb#18
  def on_send(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_interface_bang.rb#9
RuboCop::Cop::NoSorbet::NoInterfaceBang::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_interface_bang.rb#11
RuboCop::Cop::NoSorbet::NoInterfaceBang::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_require_sorbet_runtime.rb#6
class RuboCop::Cop::NoSorbet::NoRequireSorbetRuntime < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_require_sorbet_runtime.rb#20
  def on_send(node); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_require_sorbet_runtime.rb#16
  def require_sorbet_runtime?(param0 = T.unsafe(nil)); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_require_sorbet_runtime.rb#9
RuboCop::Cop::NoSorbet::NoRequireSorbetRuntime::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_require_sorbet_runtime.rb#13
RuboCop::Cop::NoSorbet::NoRequireSorbetRuntime::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_sig.rb#42
class RuboCop::Cop::NoSorbet::NoSig < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_sig.rb#52
  def on_block(node); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_sig.rb#48
  def sig?(param0 = T.unsafe(nil)); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_sig.rb#45
RuboCop::Cop::NoSorbet::NoSig::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_absurd.rb#13
class RuboCop::Cop::NoSorbet::NoTAbsurd < ::RuboCop::Cop::Base
  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_absurd.rb#18
  def bad_method?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_absurd.rb#22
  def on_send(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_absurd.rb#14
RuboCop::Cop::NoSorbet::NoTAbsurd::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_absurd.rb#15
RuboCop::Cop::NoSorbet::NoTAbsurd::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_enum.rb#15
class RuboCop::Cop::NoSorbet::NoTEnum < ::RuboCop::Cop::Base
  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_enum.rb#19
  def inheriting_t_enum?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_enum.rb#23
  def on_class(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_enum.rb#16
RuboCop::Cop::NoSorbet::NoTEnum::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_struct.rb#24
class RuboCop::Cop::NoSorbet::NoTStruct < ::RuboCop::Cop::Base
  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_struct.rb#28
  def inheriting_t_struct?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_struct.rb#32
  def on_class(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_t_struct.rb#25
RuboCop::Cop::NoSorbet::NoTStruct::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_aliases.rb#18
class RuboCop::Cop::NoSorbet::NoTypeAliases < ::RuboCop::Cop::Base
  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_aliases.rb#22
  def define_type_alias?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_aliases.rb#26
  def on_casgn(node); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_aliases.rb#19
RuboCop::Cop::NoSorbet::NoTypeAliases::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_assertions.rb#27
class RuboCop::Cop::NoSorbet::NoTypeAssertions < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_assertions.rb#43
  def on_send(node); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_assertions.rb#34
  def t_let_cast_assert_type_bind?(param0 = T.unsafe(nil)); end

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_assertions.rb#39
  def t_must_unsafe?(param0 = T.unsafe(nil)); end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_assertions.rb#30
RuboCop::Cop::NoSorbet::NoTypeAssertions::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_type_assertions.rb#31
RuboCop::Cop::NoSorbet::NoTypeAssertions::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_typed_sigil.rb#27
class RuboCop::Cop::NoSorbet::NoTypedSigil < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_typed_sigil.rb#32
  def on_new_investigation; end
end

# source://rubocop-no_sorbet//lib/rubocop/cop/no_sorbet/no_typed_sigil.rb#30
RuboCop::Cop::NoSorbet::NoTypedSigil::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet/version.rb#4
module RuboCop::NoSorbet; end

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet.rb#11
RuboCop::NoSorbet::CONFIG = T.let(T.unsafe(nil), Hash)

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet.rb#10
RuboCop::NoSorbet::CONFIG_DEFAULT = T.let(T.unsafe(nil), Pathname)

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet.rb#13
RuboCop::NoSorbet::CONST_T = T.let(T.unsafe(nil), String)

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet.rb#7
class RuboCop::NoSorbet::Error < ::StandardError; end

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet/inject.rb#9
module RuboCop::NoSorbet::Inject
  class << self
    # source://rubocop-no_sorbet//lib/rubocop/no_sorbet/inject.rb#10
    def defaults!; end
  end
end

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet.rb#9
RuboCop::NoSorbet::PROJECT_ROOT = T.let(T.unsafe(nil), Pathname)

# source://rubocop-no_sorbet//lib/rubocop/no_sorbet/version.rb#5
RuboCop::NoSorbet::VERSION = T.let(T.unsafe(nil), String)
