# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `actionview` gem.
# Please instead update this file by running `bin/tapioca gem actionview`.


class ActionController::Base < ::ActionController::Metal
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionController::Head
  include ::AbstractController::Caching::ConfigMethods
  include ::ActionController::BasicImplicitRender
  extend ::AbstractController::Helpers::Resolution

  # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
  def _helper_methods; end

  # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
  def _helper_methods=(_arg0); end

  # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
  def _helper_methods?; end

  # source://actionview//lib/action_view/layouts.rb#216
  def _layout_conditions(&block); end

  # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#963
  def _process_action_callbacks; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/renderers.rb#31
  def _renderers; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/renderers.rb#31
  def _renderers=(_arg0); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/renderers.rb#31
  def _renderers?; end

  # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#951
  def _run_process_action_callbacks(&block); end

  # source://actionpack/7.1.3.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies; end

  # source://actionpack/7.1.3.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies=(_arg0); end

  # source://actionpack/7.1.3.3/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies?; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/params_wrapper.rb#187
  def _wrapper_options; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/params_wrapper.rb#187
  def _wrapper_options=(_arg0); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/params_wrapper.rb#187
  def _wrapper_options?; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/flash.rb#36
  def alert; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def allow_forgery_protection; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def allow_forgery_protection=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def asset_host; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def asset_host=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def assets_dir; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def assets_dir=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def csrf_token_storage_strategy; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def csrf_token_storage_strategy=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def default_asset_host_protocol; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def default_asset_host_protocol=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def default_protect_from_forgery; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def default_protect_from_forgery=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def default_static_extension; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def default_static_extension=(value); end

  # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#97
  def default_url_options; end

  # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#97
  def default_url_options=(_arg0); end

  # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#97
  def default_url_options?; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def enable_fragment_cache_logging; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def enable_fragment_cache_logging=(value); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/etag_with_template_digest.rb#29
  def etag_with_template_digest; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/etag_with_template_digest.rb#29
  def etag_with_template_digest=(_arg0); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/etag_with_template_digest.rb#29
  def etag_with_template_digest?; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/conditional_get.rb#13
  def etaggers; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/conditional_get.rb#13
  def etaggers=(_arg0); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/conditional_get.rb#13
  def etaggers?; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/flash.rb#10
  def flash(*_arg0, **_arg1, &_arg2); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def forgery_protection_origin_check; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def forgery_protection_origin_check=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def forgery_protection_strategy; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def forgery_protection_strategy=(value); end

  # source://actionpack/7.1.3.3/lib/abstract_controller/caching/fragments.rb#25
  def fragment_cache_keys; end

  # source://actionpack/7.1.3.3/lib/abstract_controller/caching/fragments.rb#25
  def fragment_cache_keys=(_arg0); end

  # source://actionpack/7.1.3.3/lib/abstract_controller/caching/fragments.rb#25
  def fragment_cache_keys?; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#65
  def helpers_path; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#65
  def helpers_path=(_arg0); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#65
  def helpers_path?; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#66
  def include_all_helpers; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#66
  def include_all_helpers=(_arg0); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#66
  def include_all_helpers?; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def javascripts_dir; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def javascripts_dir=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def log_warning_on_csrf_failure; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def log_warning_on_csrf_failure=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def logger; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def logger=(value); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/flash.rb#36
  def notice; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def per_form_csrf_tokens; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def per_form_csrf_tokens=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def perform_caching; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def perform_caching=(value); end

  # source://actionpack/7.1.3.3/lib/abstract_controller/callbacks.rb#36
  def raise_on_missing_callback_actions; end

  # source://actionpack/7.1.3.3/lib/abstract_controller/callbacks.rb#36
  def raise_on_missing_callback_actions=(val); end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/redirecting.rb#15
  def raise_on_open_redirects; end

  # source://actionpack/7.1.3.3/lib/action_controller/metal/redirecting.rb#15
  def raise_on_open_redirects=(val); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def relative_url_root; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def relative_url_root=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def request_forgery_protection_token; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def request_forgery_protection_token=(value); end

  # source://activesupport/7.1.3.3/lib/active_support/rescuable.rb#15
  def rescue_handlers; end

  # source://activesupport/7.1.3.3/lib/active_support/rescuable.rb#15
  def rescue_handlers=(_arg0); end

  # source://activesupport/7.1.3.3/lib/active_support/rescuable.rb#15
  def rescue_handlers?; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
  def stylesheets_dir; end

  # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
  def stylesheets_dir=(value); end

  private

  # source://actionview//lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  # source://actionpack/7.1.3.3/lib/action_controller/base.rb#252
  def _protected_ivars; end

  class << self
    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://actionpack/7.1.3.3/lib/action_controller/form_builder.rb#33
    def _default_form_builder; end

    # source://actionpack/7.1.3.3/lib/action_controller/form_builder.rb#33
    def _default_form_builder=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/form_builder.rb#33
    def _default_form_builder?; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/flash.rb#8
    def _flash_types; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/flash.rb#8
    def _flash_types=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/flash.rb#8
    def _flash_types?; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
    def _helper_methods; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
    def _helper_methods=(value); end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
    def _helper_methods?; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#16
    def _helpers; end

    # source://actionview//lib/action_view/layouts.rb#211
    def _layout; end

    # source://actionview//lib/action_view/layouts.rb#211
    def _layout=(value); end

    # source://actionview//lib/action_view/layouts.rb#211
    def _layout?; end

    # source://actionview//lib/action_view/layouts.rb#212
    def _layout_conditions; end

    # source://actionview//lib/action_view/layouts.rb#212
    def _layout_conditions=(value); end

    # source://actionview//lib/action_view/layouts.rb#212
    def _layout_conditions?; end

    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#955
    def _process_action_callbacks; end

    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#959
    def _process_action_callbacks=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/renderers.rb#31
    def _renderers; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/renderers.rb#31
    def _renderers=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/renderers.rb#31
    def _renderers?; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies=(value); end

    # source://actionpack/7.1.3.3/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies?; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/params_wrapper.rb#187
    def _wrapper_options; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/params_wrapper.rb#187
    def _wrapper_options=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/params_wrapper.rb#187
    def _wrapper_options?; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def allow_forgery_protection; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def allow_forgery_protection=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def asset_host; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def asset_host=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def assets_dir; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def assets_dir=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def csrf_token_storage_strategy; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def csrf_token_storage_strategy=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def default_asset_host_protocol; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def default_asset_host_protocol=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def default_protect_from_forgery; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def default_protect_from_forgery=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def default_static_extension; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def default_static_extension=(value); end

    # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options; end

    # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options=(value); end

    # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options?; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def enable_fragment_cache_logging; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def enable_fragment_cache_logging=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/etag_with_template_digest.rb#29
    def etag_with_template_digest; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/etag_with_template_digest.rb#29
    def etag_with_template_digest=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/etag_with_template_digest.rb#29
    def etag_with_template_digest?; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/conditional_get.rb#13
    def etaggers; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/conditional_get.rb#13
    def etaggers=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/conditional_get.rb#13
    def etaggers?; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def forgery_protection_origin_check; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def forgery_protection_origin_check=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def forgery_protection_strategy; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def forgery_protection_strategy=(value); end

    # source://actionpack/7.1.3.3/lib/abstract_controller/caching/fragments.rb#25
    def fragment_cache_keys; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/caching/fragments.rb#25
    def fragment_cache_keys=(value); end

    # source://actionpack/7.1.3.3/lib/abstract_controller/caching/fragments.rb#25
    def fragment_cache_keys?; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#65
    def helpers_path; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#65
    def helpers_path=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#65
    def helpers_path?; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#66
    def include_all_helpers; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#66
    def include_all_helpers=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/helpers.rb#66
    def include_all_helpers?; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def javascripts_dir; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def javascripts_dir=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def log_warning_on_csrf_failure; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def log_warning_on_csrf_failure=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def logger; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def logger=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal.rb#262
    def middleware_stack; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def per_form_csrf_tokens; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def per_form_csrf_tokens=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def perform_caching; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def perform_caching=(value); end

    # source://actionpack/7.1.3.3/lib/abstract_controller/callbacks.rb#36
    def raise_on_missing_callback_actions; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/callbacks.rb#36
    def raise_on_missing_callback_actions=(val); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/redirecting.rb#15
    def raise_on_open_redirects; end

    # source://actionpack/7.1.3.3/lib/action_controller/metal/redirecting.rb#15
    def raise_on_open_redirects=(val); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def relative_url_root; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def relative_url_root=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def request_forgery_protection_token; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def request_forgery_protection_token=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/rescuable.rb#15
    def rescue_handlers; end

    # source://activesupport/7.1.3.3/lib/active_support/rescuable.rb#15
    def rescue_handlers=(value); end

    # source://activesupport/7.1.3.3/lib/active_support/rescuable.rb#15
    def rescue_handlers?; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#115
    def stylesheets_dir; end

    # source://activesupport/7.1.3.3/lib/active_support/configurable.rb#116
    def stylesheets_dir=(value); end

    # source://actionpack/7.1.3.3/lib/action_controller/base.rb#184
    def without_modules(*modules); end
  end
end

# source://actionview//lib/action_view/gem_version.rb#3
module ActionView
  extend ::ActiveSupport::Autoload

  class << self
    # source://actionview//lib/action_view/deprecator.rb#4
    def deprecator; end

    # source://actionview//lib/action_view.rb#93
    def eager_load!; end

    # source://actionview//lib/action_view/gem_version.rb#5
    def gem_version; end

    # source://actionview//lib/action_view/version.rb#7
    def version; end
  end
end

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#21
class ActionView::AbstractRenderer
  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#24
  def initialize(lookup_context); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#22
  def any_templates?(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#22
  def formats(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#28
  def render; end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#22
  def template_exists?(*_arg0, **_arg1, &_arg2); end

  private

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#182
  def build_rendered_collection(templates, spacer); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#178
  def build_rendered_template(content, template); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#159
  def extract_details(options); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#171
  def prepend_formats(formats); end
end

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#157
ActionView::AbstractRenderer::NO_DETAILS = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#32
module ActionView::AbstractRenderer::ObjectRendering
  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#37
  def initialize(lookup_context, options); end

  private

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#43
  def local_variable(path); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#92
  def merge_prefix_into_object_path(prefix, object_path); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#76
  def partial_path(object, view); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#61
  def raise_invalid_identifier(path); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#65
  def raise_invalid_option_as(as); end
end

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#54
ActionView::AbstractRenderer::ObjectRendering::IDENTIFIER_ERROR_MESSAGE = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#57
ActionView::AbstractRenderer::ObjectRendering::OPTION_AS_ERROR_MESSAGE = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#33
ActionView::AbstractRenderer::ObjectRendering::PREFIXED_PARTIAL_NAMES = T.let(T.unsafe(nil), Concurrent::Map)

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#110
class ActionView::AbstractRenderer::RenderedCollection
  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#117
  def initialize(rendered_templates, spacer); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#122
  def body; end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#126
  def format; end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#115
  def rendered_templates; end

  class << self
    # source://actionview//lib/action_view/renderer/abstract_renderer.rb#111
    def empty(format); end
  end
end

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#130
class ActionView::AbstractRenderer::RenderedCollection::EmptyCollection
  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#133
  def initialize(format); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#137
  def body; end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#131
  def format; end
end

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#141
class ActionView::AbstractRenderer::RenderedTemplate
  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#144
  def initialize(body, template); end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#142
  def body; end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#149
  def format; end

  # source://actionview//lib/action_view/renderer/abstract_renderer.rb#142
  def template; end
end

# source://actionview//lib/action_view/renderer/abstract_renderer.rb#153
ActionView::AbstractRenderer::RenderedTemplate::EMPTY_SPACER = T.let(T.unsafe(nil), T.untyped)

# source://actionview//lib/action_view/template/error.rb#8
class ActionView::ActionViewError < ::StandardError; end

# source://actionview//lib/action_view/base.rb#141
class ActionView::Base
  include ::ActionView::Context
  include ::ERB::Escape
  include ::ERB::Util
  include ::ActiveSupport::CoreExt::ERBUtil
  include ::ActiveSupport::CoreExt::ERBUtilPrivate
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::ActionView::Helpers
  include ::ActionCable::Helpers::ActionCableHelper
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview//lib/action_view/base.rb#228
  def initialize(lookup_context, assigns, controller); end

  # source://actionview//lib/action_view/base.rb#165
  def _routes; end

  # source://actionview//lib/action_view/base.rb#165
  def _routes=(_arg0); end

  # source://actionview//lib/action_view/base.rb#165
  def _routes?; end

  # source://actionview//lib/action_view/base.rb#245
  def _run(method, template, locals, buffer, add_to_stack: T.unsafe(nil), has_strict_locals: T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/base.rb#163
  def annotate_rendered_view_with_filenames; end

  # source://actionview//lib/action_view/base.rb#163
  def annotate_rendered_view_with_filenames=(val); end

  # source://actionview//lib/action_view/base.rb#207
  def assign(new_assigns); end

  # source://activesupport/7.1.3.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns; end

  # source://activesupport/7.1.3.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns=(_arg0); end

  # source://actionview//lib/action_view/base.rb#160
  def automatically_disable_submit_tag; end

  # source://actionview//lib/action_view/base.rb#160
  def automatically_disable_submit_tag=(val); end

  # source://actionview//lib/action_view/base.rb#270
  def compiled_method_container; end

  # source://activesupport/7.1.3.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def config; end

  # source://activesupport/7.1.3.3/lib/active_support/core_ext/module/attr_internal.rb#33
  def config=(_arg0); end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation; end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation=(val); end

  # source://actionview//lib/action_view/base.rb#157
  def default_formats; end

  # source://actionview//lib/action_view/base.rb#157
  def default_formats=(val); end

  # source://actionview//lib/action_view/base.rb#145
  def field_error_proc; end

  # source://actionview//lib/action_view/base.rb#145
  def field_error_proc=(val); end

  # source://actionview//lib/action_view/base.rb#205
  def formats(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/base.rb#205
  def formats=(arg); end

  # source://actionview//lib/action_view/base.rb#278
  def in_rendering_context(options); end

  # source://actionview//lib/action_view/base.rb#205
  def locale(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/base.rb#205
  def locale=(arg); end

  # source://actionview//lib/action_view/base.rb#166
  def logger; end

  # source://actionview//lib/action_view/base.rb#166
  def logger=(_arg0); end

  # source://actionview//lib/action_view/base.rb#166
  def logger?; end

  # source://actionview//lib/action_view/base.rb#202
  def lookup_context; end

  # source://actionview//lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace; end

  # source://actionview//lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace=(_arg0); end

  # source://actionview//lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace?; end

  # source://actionview//lib/action_view/base.rb#149
  def streaming_completion_on_exception; end

  # source://actionview//lib/action_view/base.rb#149
  def streaming_completion_on_exception=(val); end

  # source://actionview//lib/action_view/base.rb#205
  def view_paths(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/base.rb#205
  def view_paths=(arg); end

  # source://actionview//lib/action_view/base.rb#202
  def view_renderer; end

  class << self
    # source://actionview//lib/action_view/base.rb#165
    def _routes; end

    # source://actionview//lib/action_view/base.rb#165
    def _routes=(value); end

    # source://actionview//lib/action_view/base.rb#165
    def _routes?; end

    # source://actionview//lib/action_view/base.rb#163
    def annotate_rendered_view_with_filenames; end

    # source://actionview//lib/action_view/base.rb#163
    def annotate_rendered_view_with_filenames=(val); end

    # source://actionview//lib/action_view/base.rb#160
    def automatically_disable_submit_tag; end

    # source://actionview//lib/action_view/base.rb#160
    def automatically_disable_submit_tag=(val); end

    # source://actionview//lib/action_view/base.rb#171
    def cache_template_loading; end

    # source://actionview//lib/action_view/base.rb#175
    def cache_template_loading=(value); end

    # source://actionview//lib/action_view/base.rb#197
    def changed?(other); end

    # source://actionview//lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation; end

    # source://actionview//lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation=(val); end

    # source://actionview//lib/action_view/helpers/form_helper.rb#2759
    def default_form_builder; end

    # source://actionview//lib/action_view/helpers/form_helper.rb#2759
    def default_form_builder=(val); end

    # source://actionview//lib/action_view/base.rb#157
    def default_formats; end

    # source://actionview//lib/action_view/base.rb#157
    def default_formats=(val); end

    # source://actionview//lib/action_view/base.rb#214
    def empty; end

    # source://actionview//lib/action_view/base.rb#169
    def erb_trim_mode=(arg); end

    # source://actionview//lib/action_view/base.rb#145
    def field_error_proc; end

    # source://actionview//lib/action_view/base.rb#145
    def field_error_proc=(val); end

    # source://actionview//lib/action_view/base.rb#166
    def logger; end

    # source://actionview//lib/action_view/base.rb#166
    def logger=(value); end

    # source://actionview//lib/action_view/base.rb#166
    def logger?; end

    # source://actionview//lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace; end

    # source://actionview//lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace=(value); end

    # source://actionview//lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace?; end

    # source://actionview//lib/action_view/base.rb#149
    def streaming_completion_on_exception; end

    # source://actionview//lib/action_view/base.rb#149
    def streaming_completion_on_exception=(val); end

    # source://actionview//lib/action_view/base.rb#222
    def with_context(context, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview//lib/action_view/base.rb#183
    def with_empty_template_cache; end

    # source://actionview//lib/action_view/base.rb#218
    def with_view_paths(view_paths, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview//lib/action_view/base.rb#179
    def xss_safe?; end
  end
end

# source://actionview//lib/action_view/cache_expiry.rb#4
module ActionView::CacheExpiry; end

# source://actionview//lib/action_view/cache_expiry.rb#5
class ActionView::CacheExpiry::ViewReloader
  # source://actionview//lib/action_view/cache_expiry.rb#6
  def initialize(watcher:, &block); end

  # source://actionview//lib/action_view/cache_expiry.rb#22
  def execute; end

  # source://actionview//lib/action_view/cache_expiry.rb#18
  def updated?; end

  private

  # source://actionview//lib/action_view/cache_expiry.rb#58
  def all_view_paths; end

  # source://actionview//lib/action_view/cache_expiry.rb#54
  def dirs_to_watch; end

  # source://actionview//lib/action_view/cache_expiry.rb#36
  def rebuild_watcher; end

  # source://actionview//lib/action_view/cache_expiry.rb#32
  def reload!; end
end

# source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#6
module ActionView::CollectionCaching
  extend ::ActiveSupport::Concern

  private

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#20
  def cache_collection_render(instrumentation_payload, view, template, collection); end

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#54
  def callable_cache_key?; end

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#58
  def collection_by_cache_keys(view, template, collection); end

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#71
  def expanded_cache_key(key, view, template, digest_path); end

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#91
  def fetch_or_cache_partial(cached_partials, template, order_by:); end

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#16
  def will_cache?(options, view); end
end

# source://actionview//lib/action_view/renderer/collection_renderer.rb#33
class ActionView::CollectionRenderer < ::ActionView::PartialRenderer
  include ::ActionView::AbstractRenderer::ObjectRendering

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#130
  def render_collection_derive_partial(collection, context, block); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#112
  def render_collection_with_partial(collection, partial, context, block); end

  private

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#182
  def collection_with_template(view, template, layout, collection); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#153
  def render_collection(collection, view, path, template, layout, block); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#148
  def retrieve_variable(path); end
end

# source://actionview//lib/action_view/renderer/collection_renderer.rb#36
class ActionView::CollectionRenderer::CollectionIterator
  include ::Enumerable

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#39
  def initialize(collection); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#43
  def each(&blk); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#51
  def length; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#55
  def preload!; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#47
  def size; end
end

# source://actionview//lib/action_view/renderer/collection_renderer.rb#100
class ActionView::CollectionRenderer::MixedCollectionIterator < ::ActionView::CollectionRenderer::CollectionIterator
  # source://actionview//lib/action_view/renderer/collection_renderer.rb#101
  def initialize(collection, paths); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#106
  def each_with_info; end
end

# source://actionview//lib/action_view/renderer/collection_renderer.rb#78
class ActionView::CollectionRenderer::PreloadCollectionIterator < ::ActionView::CollectionRenderer::SameCollectionIterator
  # source://actionview//lib/action_view/renderer/collection_renderer.rb#79
  def initialize(collection, path, variables, relation); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#89
  def each_with_info; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#85
  def from_collection(collection); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#95
  def preload!; end
end

# source://actionview//lib/action_view/renderer/collection_renderer.rb#60
class ActionView::CollectionRenderer::SameCollectionIterator < ::ActionView::CollectionRenderer::CollectionIterator
  # source://actionview//lib/action_view/renderer/collection_renderer.rb#61
  def initialize(collection, path, variables); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#71
  def each_with_info; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#67
  def from_collection(collection); end
end

# source://actionview//lib/action_view/context.rb#14
module ActionView::Context
  # source://actionview//lib/action_view/context.rb#27
  def _layout_for(name = T.unsafe(nil)); end

  # source://actionview//lib/action_view/context.rb#18
  def _prepare_context; end

  # source://actionview//lib/action_view/context.rb#15
  def output_buffer; end

  # source://actionview//lib/action_view/context.rb#15
  def output_buffer=(_arg0); end

  # source://actionview//lib/action_view/context.rb#15
  def view_flow; end

  # source://actionview//lib/action_view/context.rb#15
  def view_flow=(_arg0); end
end

# source://actionview//lib/action_view/dependency_tracker.rb#8
class ActionView::DependencyTracker
  extend ::ActiveSupport::Autoload

  class << self
    # source://actionview//lib/action_view/dependency_tracker.rb#16
    def find_dependencies(name, template, view_paths = T.unsafe(nil)); end

    # source://actionview//lib/action_view/dependency_tracker.rb#23
    def register_tracker(extension, tracker); end

    # source://actionview//lib/action_view/dependency_tracker.rb#34
    def remove_tracker(handler); end
  end
end

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#5
class ActionView::DependencyTracker::ERBTracker
  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#72
  def initialize(name, template, view_paths = T.unsafe(nil)); end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#76
  def dependencies; end

  private

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#104
  def add_dependencies(render_dependencies, arguments, pattern); end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#112
  def add_dynamic_dependency(dependencies, dependency); end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#118
  def add_static_dependency(dependencies, dependency, quote_type); end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#88
  def directory; end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#145
  def explicit_dependencies; end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#80
  def name; end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#92
  def render_dependencies; end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#133
  def resolve_directories(wildcard_dependencies); end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#84
  def source; end

  # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#80
  def template; end

  class << self
    # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#68
    def call(name, template, view_paths = T.unsafe(nil)); end

    # source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#64
    def supports_view_paths?; end
  end
end

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#6
ActionView::DependencyTracker::ERBTracker::EXPLICIT_DEPENDENCY = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#9
ActionView::DependencyTracker::ERBTracker::IDENTIFIER = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#58
ActionView::DependencyTracker::ERBTracker::LAYOUT_DEPENDENCY = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#36
ActionView::DependencyTracker::ERBTracker::LAYOUT_HASH_KEY = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#30
ActionView::DependencyTracker::ERBTracker::PARTIAL_HASH_KEY = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#52
ActionView::DependencyTracker::ERBTracker::RENDER_ARGUMENTS = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#23
ActionView::DependencyTracker::ERBTracker::STRING = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/erb_tracker.rb#16
ActionView::DependencyTracker::ERBTracker::VARIABLE_OR_METHOD_CHAIN = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#5
class ActionView::DependencyTracker::RipperTracker
  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#20
  def initialize(name, template, view_paths = T.unsafe(nil)); end

  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#12
  def dependencies; end

  private

  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#38
  def explicit_dependencies; end

  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#25
  def name; end

  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#27
  def render_dependencies; end

  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#46
  def resolve_directories(wildcard_dependencies); end

  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#25
  def template; end

  # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#25
  def view_paths; end

  class << self
    # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#8
    def call(name, template, view_paths = T.unsafe(nil)); end

    # source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#16
    def supports_view_paths?; end
  end
end

# source://actionview//lib/action_view/dependency_tracker/ripper_tracker.rb#6
ActionView::DependencyTracker::RipperTracker::EXPLICIT_DEPENDENCY = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/digestor.rb#6
class ActionView::Digestor
  class << self
    # source://actionview//lib/action_view/digestor.rb#16
    def digest(name:, finder:, format: T.unsafe(nil), dependencies: T.unsafe(nil)); end

    # source://actionview//lib/action_view/digestor.rb#38
    def logger; end

    # source://actionview//lib/action_view/digestor.rb#43
    def tree(name, finder, partial = T.unsafe(nil), seen = T.unsafe(nil)); end

    private

    # source://actionview//lib/action_view/digestor.rb#71
    def find_template(finder, name, prefixes, partial, keys); end
  end
end

# source://actionview//lib/action_view/digestor.rb#121
class ActionView::Digestor::Injected < ::ActionView::Digestor::Node
  # source://actionview//lib/action_view/digestor.rb#122
  def digest(finder, _ = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/digestor.rb#117
class ActionView::Digestor::Missing < ::ActionView::Digestor::Node
  # source://actionview//lib/action_view/digestor.rb#118
  def digest(finder, _ = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/digestor.rb#78
class ActionView::Digestor::Node
  # source://actionview//lib/action_view/digestor.rb#86
  def initialize(name, logical_name, template, children = T.unsafe(nil)); end

  # source://actionview//lib/action_view/digestor.rb#79
  def children; end

  # source://actionview//lib/action_view/digestor.rb#97
  def dependency_digest(finder, stack); end

  # source://actionview//lib/action_view/digestor.rb#93
  def digest(finder, stack = T.unsafe(nil)); end

  # source://actionview//lib/action_view/digestor.rb#79
  def logical_name; end

  # source://actionview//lib/action_view/digestor.rb#79
  def name; end

  # source://actionview//lib/action_view/digestor.rb#79
  def template; end

  # source://actionview//lib/action_view/digestor.rb#110
  def to_dep_map; end

  class << self
    # source://actionview//lib/action_view/digestor.rb#81
    def create(name, logical_name, template, partial); end
  end
end

# source://actionview//lib/action_view/digestor.rb#125
class ActionView::Digestor::NullLogger
  class << self
    # source://actionview//lib/action_view/digestor.rb#126
    def debug(_); end

    # source://actionview//lib/action_view/digestor.rb#127
    def error(_); end
  end
end

# source://actionview//lib/action_view/digestor.rb#115
class ActionView::Digestor::Partial < ::ActionView::Digestor::Node; end

# source://actionview//lib/action_view.rb#35
ActionView::ENCODING_FLAG = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/template/error.rb#11
class ActionView::EncodingError < ::StandardError; end

# source://actionview//lib/action_view/template/resolver.rb#93
class ActionView::FileSystemResolver < ::ActionView::Resolver
  # source://actionview//lib/action_view/template/resolver.rb#96
  def initialize(path); end

  # source://actionview//lib/action_view/template/resolver.rb#115
  def ==(resolver); end

  # source://actionview//lib/action_view/template/resolver.rb#120
  def all_template_paths; end

  # source://actionview//lib/action_view/template/resolver.rb#129
  def built_templates; end

  # source://actionview//lib/action_view/template/resolver.rb#104
  def clear_cache; end

  # source://actionview//lib/action_view/template/resolver.rb#115
  def eql?(resolver); end

  # source://actionview//lib/action_view/template/resolver.rb#94
  def path; end

  # source://actionview//lib/action_view/template/resolver.rb#110
  def to_path; end

  # source://actionview//lib/action_view/template/resolver.rb#110
  def to_s; end

  private

  # source://actionview//lib/action_view/template/resolver.rb#134
  def _find_all(name, prefix, partial, details, key, locals); end

  # source://actionview//lib/action_view/template/resolver.rb#153
  def build_unbound_template(template); end

  # source://actionview//lib/action_view/template/resolver.rb#211
  def escape_entry(entry); end

  # source://actionview//lib/action_view/template/resolver.rb#183
  def filter_and_sort_by_details(templates, requested_details); end

  # source://actionview//lib/action_view/template/resolver.rb#149
  def source_for_template(template); end

  # source://actionview//lib/action_view/template/resolver.rb#198
  def template_glob(glob); end

  # source://actionview//lib/action_view/template/resolver.rb#166
  def unbound_templates_from_path(path); end
end

# source://actionview//lib/action_view/helpers/capture_helper.rb#6
module ActionView::Helpers
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  class << self
    # source://actionview//lib/action_view/helpers.rb#35
    def eager_load!; end
  end
end

# source://actionview//lib/action_view/helpers/active_model_helper.rb#8
module ActionView::Helpers::ActiveModelHelper; end

# source://actionview//lib/action_view/helpers/active_model_helper.rb#12
module ActionView::Helpers::ActiveModelInstanceTag
  # source://actionview//lib/action_view/helpers/active_model_helper.rb#20
  def content_tag(type, options, *_arg2); end

  # source://actionview//lib/action_view/helpers/active_model_helper.rb#36
  def error_message; end

  # source://actionview//lib/action_view/helpers/active_model_helper.rb#28
  def error_wrapping(html_tag); end

  # source://actionview//lib/action_view/helpers/active_model_helper.rb#13
  def object; end

  # source://actionview//lib/action_view/helpers/active_model_helper.rb#24
  def tag(type, options, *_arg2); end

  private

  # source://actionview//lib/action_view/helpers/active_model_helper.rb#41
  def object_has_errors?; end

  # source://actionview//lib/action_view/helpers/active_model_helper.rb#45
  def select_markup_helper?(type); end

  # source://actionview//lib/action_view/helpers/active_model_helper.rb#49
  def tag_generate_errors?(options); end
end

# source://actionview//lib/action_view/helpers/asset_tag_helper.rb#21
module ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#28
  def apply_stylesheet_media_default; end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#28
  def apply_stylesheet_media_default=(val); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#581
  def audio_tag(*sources); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#259
  def auto_discovery_link_tag(type = T.unsafe(nil), url_options = T.unsafe(nil), tag_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#300
  def favicon_link_tag(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#26
  def image_decoding; end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#26
  def image_decoding=(val); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#25
  def image_loading; end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#25
  def image_loading=(val); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#418
  def image_tag(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#111
  def javascript_include_tag(*sources); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#479
  def picture_tag(*sources, &block); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#343
  def preload_link_tag(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#27
  def preload_links_header; end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#27
  def preload_links_header=(val); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#193
  def stylesheet_link_tag(*sources); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#549
  def video_tag(*sources); end

  private

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#622
  def check_for_image_tag_errors(options); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#613
  def extract_dimensions(size); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#586
  def multiple_sources_tag_builder(type, sources); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#603
  def resolve_asset_source(asset_type, source, skip_pipeline); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#628
  def resolve_link_as(extname, mime_type); end

  # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#642
  def send_preload_links_header(preload_links, max_header_size: T.unsafe(nil)); end

  class << self
    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#28
    def apply_stylesheet_media_default; end

    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#28
    def apply_stylesheet_media_default=(val); end

    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#26
    def image_decoding; end

    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#26
    def image_decoding=(val); end

    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#25
    def image_loading; end

    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#25
    def image_loading=(val); end

    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#27
    def preload_links_header; end

    # source://actionview//lib/action_view/helpers/asset_tag_helper.rb#27
    def preload_links_header=(val); end
  end
end

# source://actionview//lib/action_view/helpers/asset_tag_helper.rb#640
ActionView::Helpers::AssetTagHelper::MAX_HEADER_SIZE = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/helpers/asset_url_helper.rb#121
module ActionView::Helpers::AssetUrlHelper
  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#187
  def asset_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#231
  def asset_url(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#430
  def audio_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#442
  def audio_url(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#243
  def compute_asset_extname(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#277
  def compute_asset_host(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#266
  def compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#455
  def font_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#467
  def font_url(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#378
  def image_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#390
  def image_url(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#321
  def javascript_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#333
  def javascript_url(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#187
  def path_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#430
  def path_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#455
  def path_to_font(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#378
  def path_to_image(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#321
  def path_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#348
  def path_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#404
  def path_to_video(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#266
  def public_compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#348
  def stylesheet_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#360
  def stylesheet_url(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#231
  def url_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#442
  def url_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#467
  def url_to_font(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#390
  def url_to_image(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#333
  def url_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#360
  def url_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#416
  def url_to_video(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#404
  def video_path(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/asset_url_helper.rb#416
  def video_url(source, options = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/helpers/asset_url_helper.rb#236
ActionView::Helpers::AssetUrlHelper::ASSET_EXTENSIONS = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/helpers/asset_url_helper.rb#254
ActionView::Helpers::AssetUrlHelper::ASSET_PUBLIC_DIRECTORIES = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/helpers/asset_url_helper.rb#122
ActionView::Helpers::AssetUrlHelper::URI_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/helpers/atom_feed_helper.rb#8
module ActionView::Helpers::AtomFeedHelper
  # source://actionview//lib/action_view/helpers/atom_feed_helper.rb#98
  def atom_feed(options = T.unsafe(nil), &block); end
end

# source://actionview//lib/action_view/helpers/atom_feed_helper.rb#129
class ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview//lib/action_view/helpers/atom_feed_helper.rb#132
  def initialize(xml); end

  private

  # source://actionview//lib/action_view/helpers/atom_feed_helper.rb#140
  def method_missing(method, *arguments, &block); end

  # source://actionview//lib/action_view/helpers/atom_feed_helper.rb#155
  def xhtml_block?(method, arguments); end
end

# source://actionview//lib/action_view/helpers/atom_feed_helper.rb#130
ActionView::Helpers::AtomFeedHelper::AtomBuilder::XHTML_TAG_NAMES = T.let(T.unsafe(nil), Set)

# source://actionview//lib/action_view/helpers/atom_feed_helper.rb#163
class ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder < ::ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview//lib/action_view/helpers/atom_feed_helper.rb#164
  def initialize(xml, view, feed_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/atom_feed_helper.rb#182
  def entry(record, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/atom_feed_helper.rb#169
  def updated(date_or_time = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/helpers/cache_helper.rb#6
module ActionView::Helpers::CacheHelper
  # source://actionview//lib/action_view/helpers/cache_helper.rb#168
  def cache(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#240
  def cache_fragment_name(name = T.unsafe(nil), skip_digest: T.unsafe(nil), digest_path: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#215
  def cache_if(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#231
  def cache_unless(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#188
  def caching?; end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#248
  def digest_path_from_template(template); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#205
  def uncacheable!; end

  private

  # source://actionview//lib/action_view/helpers/cache_helper.rb#270
  def fragment_for(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#259
  def fragment_name_with_digest(name, digest_path); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#280
  def read_fragment_for(name, options); end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#284
  def write_fragment_for(name, options, &block); end
end

# source://actionview//lib/action_view/helpers/cache_helper.rb#289
module ActionView::Helpers::CacheHelper::CachingRegistry
  extend ::ActionView::Helpers::CacheHelper::CachingRegistry

  # source://actionview//lib/action_view/helpers/cache_helper.rb#292
  def caching?; end

  # source://actionview//lib/action_view/helpers/cache_helper.rb#296
  def track_caching; end
end

# source://actionview//lib/action_view/helpers/cache_helper.rb#7
class ActionView::Helpers::CacheHelper::UncacheableFragmentError < ::StandardError; end

# source://actionview//lib/action_view/helpers/capture_helper.rb#17
module ActionView::Helpers::CaptureHelper
  # source://actionview//lib/action_view/helpers/capture_helper.rb#47
  def capture(*args, &block); end

  # source://actionview//lib/action_view/helpers/capture_helper.rb#172
  def content_for(name, content = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/capture_helper.rb#215
  def content_for?(name); end

  # source://actionview//lib/action_view/helpers/capture_helper.rb#194
  def provide(name, content = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/capture_helper.rb#221
  def with_output_buffer(buf = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#5
module ActionView::Helpers::ContentExfiltrationPreventionHelper
  # source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
  def prepend_content_exfiltration_prevention; end

  # source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
  def prepend_content_exfiltration_prevention=(val); end

  # source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#61
  def prevent_content_exfiltration(html); end

  class << self
    # source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
    def prepend_content_exfiltration_prevention; end

    # source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
    def prepend_content_exfiltration_prevention=(val); end
  end
end

# source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#32
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_CDATA_COMMENT = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#57
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_FORM_TAG = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#45
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_OPTION_TAG = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#18
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_QUOTES_COMMENT = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview//lib/action_view/helpers/content_exfiltration_prevention_helper.rb#59
ActionView::Helpers::ContentExfiltrationPreventionHelper::CONTENT_EXFILTRATION_PREVENTION_MARKUP = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview//lib/action_view/helpers/controller_helper.rb#11
module ActionView::Helpers::ControllerHelper
  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def action_name(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#20
  def assign_controller(controller); end

  def controller; end
  def controller=(_arg0); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def controller_name(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def controller_path(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def cookies(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def flash(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def headers(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#32
  def logger; end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def params(*_arg0, **_arg1, &_arg2); end

  def request; end
  def request=(_arg0); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def request_forgery_protection_token(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#36
  def respond_to?(method_name, include_private = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def response(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/helpers/controller_helper.rb#18
  def session(*_arg0, **_arg1, &_arg2); end
end

# source://actionview//lib/action_view/helpers/controller_helper.rb#14
ActionView::Helpers::ControllerHelper::CONTROLLER_DELEGATES = T.let(T.unsafe(nil), Array)

# source://actionview//lib/action_view/helpers/csp_helper.rb#6
module ActionView::Helpers::CspHelper
  # source://actionview//lib/action_view/helpers/csp_helper.rb#17
  def csp_meta_tag(**options); end
end

# source://actionview//lib/action_view/helpers/csrf_helper.rb#6
module ActionView::Helpers::CsrfHelper
  # source://actionview//lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tag; end

  # source://actionview//lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tags; end
end

# source://actionview//lib/action_view/helpers/date_helper.rb#24
module ActionView::Helpers::DateHelper
  # source://actionview//lib/action_view/helpers/date_helper.rb#290
  def date_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#366
  def datetime_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#95
  def distance_of_time_in_words(from_time, to_time = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#176
  def distance_of_time_in_words_to_now(from_time, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#454
  def select_date(date = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#415
  def select_datetime(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#597
  def select_day(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#570
  def select_hour(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#541
  def select_minute(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#642
  def select_month(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#517
  def select_second(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#494
  def select_time(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#671
  def select_year(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#176
  def time_ago_in_words(from_time, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#331
  def time_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#690
  def time_tag(date_or_time, *args, &block); end

  private

  # source://actionview//lib/action_view/helpers/date_helper.rb#699
  def normalize_distance_of_time_argument_to_time(value); end
end

# source://actionview//lib/action_view/helpers/date_helper.rb#26
ActionView::Helpers::DateHelper::MINUTES_IN_QUARTER_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/helpers/date_helper.rb#27
ActionView::Helpers::DateHelper::MINUTES_IN_THREE_QUARTERS_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/helpers/date_helper.rb#25
ActionView::Helpers::DateHelper::MINUTES_IN_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/helpers/date_helper.rb#710
class ActionView::Helpers::DateTimeSelector
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview//lib/action_view/helpers/date_helper.rb#727
  def initialize(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#756
  def select_date; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#735
  def select_datetime; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#818
  def select_day; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#806
  def select_hour; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#798
  def select_minute; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#826
  def select_month; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#790
  def select_second; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#774
  def select_time; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#840
  def select_year; end

  private

  # source://actionview//lib/action_view/helpers/date_helper.rb#1070
  def build_day_options(selected); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1165
  def build_hidden(type, value); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1027
  def build_options(selected, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1003
  def build_options_and_select(type, selected, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1110
  def build_select(type, select_options_as_html); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1203
  def build_selects_from_types(order); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1088
  def build_year_options(selected, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1130
  def css_class_attribute(type, html_options_class, options); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#985
  def date_order; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#868
  def day; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#925
  def day_name(number); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#868
  def hour; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1194
  def input_id_from_type(type); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1180
  def input_name_from_type(type); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#868
  def min; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#868
  def month; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#956
  def month_name(number); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#892
  def month_names; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1146
  def prompt_option_tag(type, options); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#878
  def prompt_text(prompt, type); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#868
  def sec; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1214
  def separator(type); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#884
  def set_day_if_discarded; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#989
  def translated_date_order; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#909
  def translated_month_names; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#868
  def year; end

  # source://actionview//lib/action_view/helpers/date_helper.rb#977
  def year_name(number); end
end

# source://actionview//lib/action_view/helpers/date_helper.rb#718
ActionView::Helpers::DateTimeSelector::AMPM_TRANSLATION = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/helpers/date_helper.rb#713
ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/helpers/date_helper.rb#714
ActionView::Helpers::DateTimeSelector::POSITION = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/helpers/debug_helper.rb#10
module ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview//lib/action_view/helpers/debug_helper.rb#28
  def debug(object); end
end

# source://actionview//lib/action_view/helpers/date_helper.rb#1228
class ActionView::Helpers::FormBuilder
  include ::ActionView::ModelNaming

  # source://actionview//lib/action_view/helpers/form_helper.rb#1715
  def initialize(object_name, object, template, options); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2644
  def button(value = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2468
  def check_box(method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#908
  def collection_check_boxes(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#920
  def collection_radio_buttons(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#860
  def collection_select(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def color_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def date_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1237
  def date_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def datetime_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def datetime_local_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1261
  def datetime_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def email_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2665
  def emitted_hidden_id?; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1680
  def field_helpers; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1680
  def field_helpers=(_arg0); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1680
  def field_helpers?; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1772
  def field_id(method, *suffixes, namespace: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1792
  def field_name(method, *methods, multiple: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2322
  def fields(scope = T.unsafe(nil), model: T.unsafe(nil), **options, &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2284
  def fields_for(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2551
  def file_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#872
  def grouped_collection_select(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2512
  def hidden_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1752
  def id; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1692
  def index; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2399
  def label(method, text = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def month_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1692
  def multipart; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1695
  def multipart=(multipart); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1692
  def multipart?; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def number_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1690
  def object; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1690
  def object=(_arg0); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1690
  def object_name; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1690
  def object_name=(_arg0); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1690
  def options; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1690
  def options=(_arg0); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def password_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def phone_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2490
  def radio_button(method, tag_value, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def range_field(method, options = T.unsafe(nil)); end

  def rich_text_area(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def search_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#848
  def select(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2583
  def submit(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def telephone_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def text_area(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def text_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def time_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/date_helper.rb#1249
  def time_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#884
  def time_zone_select(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1711
  def to_model; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1707
  def to_partial_path; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def url_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2021
  def week_field(method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#896
  def weekday_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/form_helper.rb#2750
  def convert_to_legacy_options(options); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2732
  def fields_for_nested_model(name, object, fields_options, block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2703
  def fields_for_with_nested_attributes(association_name, association, options, block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2699
  def nested_attributes_association?(association_name); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2745
  def nested_child_index(name); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2670
  def objectify_options(options); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#2676
  def submit_default_value; end

  class << self
    # source://actionview//lib/action_view/helpers/form_helper.rb#1703
    def _to_partial_path; end

    # source://actionview//lib/action_view/helpers/form_helper.rb#1680
    def field_helpers; end

    # source://actionview//lib/action_view/helpers/form_helper.rb#1680
    def field_helpers=(value); end

    # source://actionview//lib/action_view/helpers/form_helper.rb#1680
    def field_helpers?; end
  end
end

# source://actionview//lib/action_view/helpers/form_helper.rb#112
module ActionView::Helpers::FormHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview//lib/action_view/helpers/form_helper.rb#1586
  def _object_for_form_builder(object); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1343
  def check_box(object_name, method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1373
  def color_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1437
  def date_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1510
  def datetime_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1510
  def datetime_local_field(object_name, method, options = T.unsafe(nil)); end

  def default_form_builder; end
  def default_form_builder=(_arg0); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1564
  def email_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1077
  def fields(scope = T.unsafe(nil), model: T.unsafe(nil), **options, &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1026
  def fields_for(record_name, record_object = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1245
  def file_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#434
  def form_for(record, options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#755
  def form_with(model: T.unsafe(nil), scope: T.unsafe(nil), url: T.unsafe(nil), format: T.unsafe(nil), **options, &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#480
  def form_with_generates_ids; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#480
  def form_with_generates_ids=(val); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#478
  def form_with_generates_remote_forms; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#478
  def form_with_generates_remote_forms=(val); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1212
  def hidden_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1149
  def label(object_name, method, content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1529
  def month_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#482
  def multiple_file_field_include_hidden; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#482
  def multiple_file_field_include_hidden=(val); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1573
  def number_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1194
  def password_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1405
  def phone_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1365
  def radio_button(object_name, method, tag_value, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1582
  def range_field(object_name, method, options = T.unsafe(nil)); end

  def rich_text_area(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1396
  def search_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1405
  def telephone_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1275
  def text_area(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1173
  def text_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1475
  def time_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1555
  def url_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1546
  def week_field(object_name, method, options = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/form_helper.rb#464
  def apply_form_for_options!(object, options); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1620
  def default_form_builder_class; end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1591
  def html_options_for_form_with(url_for_options = T.unsafe(nil), model = T.unsafe(nil), html: T.unsafe(nil), local: T.unsafe(nil), skip_enforcing_utf8: T.unsafe(nil), **options); end

  # source://actionview//lib/action_view/helpers/form_helper.rb#1606
  def instantiate_builder(record_name, record_object, options); end

  class << self
    # source://actionview//lib/action_view/helpers/form_helper.rb#480
    def form_with_generates_ids; end

    # source://actionview//lib/action_view/helpers/form_helper.rb#480
    def form_with_generates_ids=(val); end

    # source://actionview//lib/action_view/helpers/form_helper.rb#478
    def form_with_generates_remote_forms; end

    # source://actionview//lib/action_view/helpers/form_helper.rb#478
    def form_with_generates_remote_forms=(val); end

    # source://actionview//lib/action_view/helpers/form_helper.rb#482
    def multiple_file_field_include_hidden; end

    # source://actionview//lib/action_view/helpers/form_helper.rb#482
    def multiple_file_field_include_hidden=(val); end
  end
end

# source://actionview//lib/action_view/helpers/form_options_helper.rb#94
module ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::TextHelper
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#782
  def collection_check_boxes(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#698
  def collection_radio_buttons(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#199
  def collection_select(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#258
  def grouped_collection_select(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#534
  def grouped_options_for_select(grouped_options, selected_key = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#462
  def option_groups_from_collection_for_select(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#358
  def options_for_select(container, selected = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#401
  def options_from_collection_for_select(collection, value_method, text_method, selected = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#159
  def select(object, method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#579
  def time_zone_options_for_select(selected = T.unsafe(nil), priority_zones = T.unsafe(nil), model = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#292
  def time_zone_select(object, method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#611
  def weekday_options_for_select(selected = T.unsafe(nil), index_as_value: T.unsafe(nil), day_format: T.unsafe(nil), beginning_of_week: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#298
  def weekday_select(object, method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  private

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#809
  def extract_selected_and_disabled(selected); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#820
  def extract_values_from_collection(collection, value_method, selected); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#787
  def option_html_attributes(element); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#795
  def option_text_and_value(option); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#805
  def option_value_selected?(value, selected); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#834
  def prompt_text(prompt); end

  # source://actionview//lib/action_view/helpers/form_options_helper.rb#830
  def value_for_collection(item, value); end
end

# source://actionview//lib/action_view/helpers/form_tag_helper.rb#19
module ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#605
  def button_tag(content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#455
  def check_box_tag(name, *args); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#703
  def color_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#773
  def date_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#801
  def datetime_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#801
  def datetime_local_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#29
  def default_enforce_utf8; end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#29
  def default_enforce_utf8=(val); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#875
  def email_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#26
  def embed_authenticity_token_in_remote_forms; end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#26
  def embed_authenticity_token_in_remote_forms=(val); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#102
  def field_id(object_name, method_name, *suffixes, index: T.unsafe(nil), namespace: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#132
  def field_name(object_name, method_name, *method_names, multiple: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#677
  def field_set_tag(legend = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#347
  def file_field_tag(name, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#78
  def form_tag(url_for_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#308
  def hidden_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#651
  def image_submit_tag(source, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#281
  def label_tag(name = T.unsafe(nil), content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#816
  def month_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#923
  def number_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#380
  def password_field_tag(name = T.unsafe(nil), value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#749
  def phone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#491
  def radio_button_tag(name, value, *args); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#937
  def range_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#726
  def search_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#201
  def select_tag(name, option_tags = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#544
  def submit_tag(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#749
  def telephone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#413
  def text_area_tag(name, content = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#263
  def text_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#787
  def time_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#852
  def url_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#943
  def utf8_enforcer_tag; end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#829
  def week_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#1040
  def convert_direct_upload_option_to_url(options); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#978
  def extra_tags_for_form(html_options); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#1008
  def form_tag_html(html_options); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#1014
  def form_tag_with_body(html_options, content); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#951
  def html_options_for_form(url_for_options, options); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#1021
  def sanitize_to_id(name); end

  # source://actionview//lib/action_view/helpers/form_tag_helper.rb#1025
  def set_default_disable_with(value, tag_options); end

  class << self
    # source://actionview//lib/action_view/helpers/form_tag_helper.rb#29
    def default_enforce_utf8; end

    # source://actionview//lib/action_view/helpers/form_tag_helper.rb#29
    def default_enforce_utf8=(val); end

    # source://actionview//lib/action_view/helpers/form_tag_helper.rb#26
    def embed_authenticity_token_in_remote_forms; end

    # source://actionview//lib/action_view/helpers/form_tag_helper.rb#26
    def embed_authenticity_token_in_remote_forms=(val); end
  end
end

# source://actionview//lib/action_view/helpers/javascript_helper.rb#6
module ActionView::Helpers::JavaScriptHelper
  # source://actionview//lib/action_view/helpers/javascript_helper.rb#28
  def escape_javascript(javascript); end

  # source://actionview//lib/action_view/helpers/javascript_helper.rb#28
  def j(javascript); end

  # source://actionview//lib/action_view/helpers/javascript_helper.rb#91
  def javascript_cdata_section(content); end

  # source://actionview//lib/action_view/helpers/javascript_helper.rb#75
  def javascript_tag(content_or_options_with_block = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
end

# source://actionview//lib/action_view/helpers/javascript_helper.rb#7
ActionView::Helpers::JavaScriptHelper::JS_ESCAPE_MAP = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/helpers/number_helper.rb#17
module ActionView::Helpers::NumberHelper
  # source://actionview//lib/action_view/helpers/number_helper.rb#51
  def number_to_currency(number, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#111
  def number_to_human(number, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#99
  def number_to_human_size(number, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#63
  def number_to_percentage(number, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#35
  def number_to_phone(number, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#75
  def number_with_delimiter(number, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#87
  def number_with_precision(number, options = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/number_helper.rb#116
  def delegate_number_helper_method(method, number, options); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#135
  def escape_units(units); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#125
  def escape_unsafe_options(options); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#158
  def parse_float(number, raise_error); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#154
  def valid_float?(number); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#141
  def wrap_with_output_safety_handling(number, raise_on_invalid, &block); end
end

# source://actionview//lib/action_view/helpers/number_helper.rb#20
class ActionView::Helpers::NumberHelper::InvalidNumberError < ::StandardError
  # source://actionview//lib/action_view/helpers/number_helper.rb#22
  def initialize(number); end

  # source://actionview//lib/action_view/helpers/number_helper.rb#21
  def number; end

  # source://actionview//lib/action_view/helpers/number_helper.rb#21
  def number=(_arg0); end
end

# source://actionview//lib/action_view/helpers/output_safety_helper.rb#8
module ActionView::Helpers::OutputSafetyHelper
  # source://actionview//lib/action_view/helpers/output_safety_helper.rb#18
  def raw(stringish); end

  # source://actionview//lib/action_view/helpers/output_safety_helper.rb#33
  def safe_join(array, sep = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/output_safety_helper.rb#43
  def to_sentence(array, options = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/helpers/rendering_helper.rb#10
module ActionView::Helpers::RenderingHelper
  # source://actionview//lib/action_view/helpers/rendering_helper.rb#97
  def _layout_for(*args, &block); end

  # source://actionview//lib/action_view/helpers/rendering_helper.rb#30
  def render(options = T.unsafe(nil), locals = T.unsafe(nil), &block); end
end

# source://actionview//lib/action_view/helpers/sanitize_helper.rb#11
module ActionView::Helpers::SanitizeHelper
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#111
  def sanitize(html, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#116
  def sanitize_css(style); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#12
  def sanitizer_vendor; end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#12
  def sanitizer_vendor=(val); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#150
  def strip_links(html); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#133
  def strip_tags(html); end

  class << self
    # source://actionview//lib/action_view/helpers/sanitize_helper.rb#12
    def sanitizer_vendor; end

    # source://actionview//lib/action_view/helpers/sanitize_helper.rb#12
    def sanitizer_vendor=(val); end
  end
end

# source://actionview//lib/action_view/helpers/sanitize_helper.rb#154
module ActionView::Helpers::SanitizeHelper::ClassMethods
  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#175
  def full_sanitizer; end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#155
  def full_sanitizer=(_arg0); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#185
  def link_sanitizer; end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#155
  def link_sanitizer=(_arg0); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#195
  def safe_list_sanitizer; end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#155
  def safe_list_sanitizer=(_arg0); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#165
  def sanitized_allowed_attributes; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#34
  def sanitized_allowed_attributes=(attributes); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_allowed_css_keywords; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_allowed_css_keywords=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_allowed_css_properties; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_allowed_css_properties=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_allowed_protocols; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_allowed_protocols=(_); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#161
  def sanitized_allowed_tags; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#24
  def sanitized_allowed_tags=(tags); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_bad_tags; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_bad_tags=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_protocol_separator; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_protocol_separator=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_shorthand_css_properties; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_shorthand_css_properties=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_uri_attributes; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_uri_attributes=(_); end

  # source://actionview//lib/action_view/helpers/sanitize_helper.rb#157
  def sanitizer_vendor; end

  private

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#52
  def deprecate_option(name); end
end

# source://actionview//lib/action_view/helpers/tag_helper.rb#15
module ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper

  # source://actionview//lib/action_view/helpers/tag_helper.rb#386
  def cdata_section(content); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#366
  def class_names(*args); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#346
  def content_tag(name, content_or_options_with_block = T.unsafe(nil), options = T.unsafe(nil), escape = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#398
  def escape_once(html); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#309
  def tag(name = T.unsafe(nil), options = T.unsafe(nil), open = T.unsafe(nil), escape = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#366
  def token_list(*args); end

  private

  # source://actionview//lib/action_view/helpers/tag_helper.rb#403
  def build_tag_values(*args); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#423
  def tag_builder; end

  class << self
    # source://actionview//lib/action_view/helpers/tag_helper.rb#403
    def build_tag_values(*args); end
  end
end

# source://actionview//lib/action_view/helpers/tag_helper.rb#32
ActionView::Helpers::TagHelper::ARIA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview//lib/action_view/helpers/tag_helper.rb#19
ActionView::Helpers::TagHelper::BOOLEAN_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://actionview//lib/action_view/helpers/tag_helper.rb#33
ActionView::Helpers::TagHelper::DATA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview//lib/action_view/helpers/tag_helper.rb#41
ActionView::Helpers::TagHelper::PRE_CONTENT_STRINGS = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/helpers/tag_helper.rb#35
ActionView::Helpers::TagHelper::TAG_TYPES = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/helpers/tag_helper.rb#45
class ActionView::Helpers::TagHelper::TagBuilder
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper

  # source://actionview//lib/action_view/helpers/tag_helper.rb#52
  def initialize(view_context); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#61
  def attributes(attributes); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#132
  def boolean_tag_option(key); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#79
  def content_tag_string(name, content, options, escape = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#65
  def p(*arguments, **options, &block); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#136
  def tag_option(key, value, escape); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#90
  def tag_options(options, escape = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#69
  def tag_string(name, content = T.unsafe(nil), escape: T.unsafe(nil), **options, &block); end

  private

  # source://actionview//lib/action_view/helpers/tag_helper.rb#166
  def method_missing(called, *args, **options, &block); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#154
  def prefix_tag_option(prefix, key, value, escape); end

  # source://actionview//lib/action_view/helpers/tag_helper.rb#162
  def respond_to_missing?(*args); end
end

# source://actionview//lib/action_view/helpers/tag_helper.rb#49
ActionView::Helpers::TagHelper::TagBuilder::HTML_VOID_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://actionview//lib/action_view/helpers/tag_helper.rb#50
ActionView::Helpers::TagHelper::TagBuilder::SVG_SELF_CLOSING_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://actionview//lib/action_view/helpers/tags.rb#5
module ActionView::Helpers::Tags
  extend ::ActiveSupport::Autoload
end

# source://actionview//lib/action_view/helpers/tags/base.rb#6
class ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::ActiveModelInstanceTag
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview//lib/action_view/helpers/tags/base.rb#11
  def initialize(object_name, method_name, template_object, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#9
  def object; end

  # source://actionview//lib/action_view/helpers/tags/base.rb#31
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/base.rb#96
  def add_default_name_and_id(options); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#83
  def add_default_name_and_id_for_value(tag_value, options); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#132
  def generate_ids?; end

  # source://actionview//lib/action_view/helpers/tags/base.rb#124
  def name_and_id_index(options); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#74
  def retrieve_autoindex(pre_match); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#63
  def retrieve_object(object); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#116
  def sanitized_method_name; end

  # source://actionview//lib/action_view/helpers/tags/base.rb#120
  def sanitized_value(value); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#112
  def tag_id(index = T.unsafe(nil), namespace = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#108
  def tag_name(multiple = T.unsafe(nil), index = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tags/base.rb#36
  def value; end

  # source://actionview//lib/action_view/helpers/tags/base.rb#46
  def value_before_type_cast; end

  # source://actionview//lib/action_view/helpers/tags/base.rb#58
  def value_came_from_user?; end
end

# source://actionview//lib/action_view/helpers/tags/check_box.rb#8
class ActionView::Helpers::Tags::CheckBox < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Checkable

  # source://actionview//lib/action_view/helpers/tags/check_box.rb#11
  def initialize(object_name, method_name, template_object, checked_value, unchecked_value, options); end

  # source://actionview//lib/action_view/helpers/tags/check_box.rb#17
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/check_box.rb#42
  def checked?(value); end

  # source://actionview//lib/action_view/helpers/tags/check_box.rb#59
  def hidden_field_for_checkbox(options); end
end

# source://actionview//lib/action_view/helpers/tags/checkable.rb#6
module ActionView::Helpers::Tags::Checkable
  # source://actionview//lib/action_view/helpers/tags/checkable.rb#7
  def input_checked?(options); end
end

# source://actionview//lib/action_view/helpers/tags/collection_check_boxes.rb#8
class ActionView::Helpers::Tags::CollectionCheckBoxes < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers
  include ::ActionView::Helpers::FormOptionsHelper

  # source://actionview//lib/action_view/helpers/tags/collection_check_boxes.rb#21
  def render(&block); end

  private

  # source://actionview//lib/action_view/helpers/tags/collection_check_boxes.rb#30
  def hidden_field_name; end

  # source://actionview//lib/action_view/helpers/tags/collection_check_boxes.rb#26
  def render_component(builder); end
end

# source://actionview//lib/action_view/helpers/tags/collection_check_boxes.rb#12
class ActionView::Helpers::Tags::CollectionCheckBoxes::CheckBoxBuilder < ::ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview//lib/action_view/helpers/tags/collection_check_boxes.rb#13
  def check_box(extra_html_options = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#6
module ActionView::Helpers::Tags::CollectionHelpers
  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#30
  def initialize(object_name, method_name, template_object, collection, value_method, text_method, options, html_options); end

  private

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#47
  def default_html_options_for_collection(item, value); end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#107
  def hidden_field; end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#112
  def hidden_field_name; end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#40
  def instantiate_builder(builder_class, item, value, text, html_options); end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#75
  def render_collection; end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#86
  def render_collection_for(builder_class, &block); end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#71
  def sanitize_attribute_name(value); end
end

# source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#7
class ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#10
  def initialize(template_object, object_name, method_name, object, sanitized_attribute_name, text, value, input_html_options); end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#22
  def label(label_html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#8
  def object; end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#8
  def text; end

  # source://actionview//lib/action_view/helpers/tags/collection_helpers.rb#8
  def value; end
end

# source://actionview//lib/action_view/helpers/tags/collection_radio_buttons.rb#8
class ActionView::Helpers::Tags::CollectionRadioButtons < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers
  include ::ActionView::Helpers::FormOptionsHelper

  # source://actionview//lib/action_view/helpers/tags/collection_radio_buttons.rb#20
  def render(&block); end

  private

  # source://actionview//lib/action_view/helpers/tags/collection_radio_buttons.rb#25
  def render_component(builder); end
end

# source://actionview//lib/action_view/helpers/tags/collection_radio_buttons.rb#12
class ActionView::Helpers::Tags::CollectionRadioButtons::RadioButtonBuilder < ::ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview//lib/action_view/helpers/tags/collection_radio_buttons.rb#13
  def radio_button(extra_html_options = T.unsafe(nil)); end
end

# source://actionview//lib/action_view/helpers/tags/collection_select.rb#6
class ActionView::Helpers::Tags::CollectionSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper

  # source://actionview//lib/action_view/helpers/tags/collection_select.rb#10
  def initialize(object_name, method_name, template_object, collection, value_method, text_method, options, html_options); end

  # source://actionview//lib/action_view/helpers/tags/collection_select.rb#19
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/color_field.rb#6
class ActionView::Helpers::Tags::ColorField < ::ActionView::Helpers::Tags::TextField
  # source://actionview//lib/action_view/helpers/tags/color_field.rb#7
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/color_field.rb#15
  def validate_color_string(string); end
end

# source://actionview//lib/action_view/helpers/tags/date_field.rb#6
class ActionView::Helpers::Tags::DateField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview//lib/action_view/helpers/tags/date_field.rb#8
  def format_datetime(value); end
end

# source://actionview//lib/action_view/helpers/tags/date_select.rb#8
class ActionView::Helpers::Tags::DateSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer

  # source://actionview//lib/action_view/helpers/tags/date_select.rb#11
  def initialize(object_name, method_name, template_object, options, html_options); end

  # source://actionview//lib/action_view/helpers/tags/date_select.rb#17
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/date_select.rb#32
  def datetime_selector(options, html_options); end

  # source://actionview//lib/action_view/helpers/tags/date_select.rb#45
  def default_datetime(options); end

  # source://actionview//lib/action_view/helpers/tags/date_select.rb#28
  def select_type; end

  class << self
    # source://actionview//lib/action_view/helpers/tags/date_select.rb#22
    def select_type; end
  end
end

# source://actionview//lib/action_view/helpers/tags/datetime_field.rb#6
class ActionView::Helpers::Tags::DatetimeField < ::ActionView::Helpers::Tags::TextField
  # source://actionview//lib/action_view/helpers/tags/datetime_field.rb#7
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/datetime_field.rb#17
  def datetime_value(value); end

  # source://actionview//lib/action_view/helpers/tags/datetime_field.rb#25
  def format_datetime(value); end

  # source://actionview//lib/action_view/helpers/tags/datetime_field.rb#29
  def parse_datetime(value); end
end

# source://actionview//lib/action_view/helpers/tags/datetime_local_field.rb#6
class ActionView::Helpers::Tags::DatetimeLocalField < ::ActionView::Helpers::Tags::DatetimeField
  # source://actionview//lib/action_view/helpers/tags/datetime_local_field.rb#7
  def initialize(object_name, method_name, template_object, options = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/tags/datetime_local_field.rb#19
  def format_datetime(value); end

  class << self
    # source://actionview//lib/action_view/helpers/tags/datetime_local_field.rb#13
    def field_type; end
  end
end

# source://actionview//lib/action_view/helpers/tags/datetime_select.rb#6
class ActionView::Helpers::Tags::DatetimeSelect < ::ActionView::Helpers::Tags::DateSelect; end

# source://actionview//lib/action_view/helpers/tags/email_field.rb#6
class ActionView::Helpers::Tags::EmailField < ::ActionView::Helpers::Tags::TextField; end

# source://actionview//lib/action_view/helpers/tags/file_field.rb#6
class ActionView::Helpers::Tags::FileField < ::ActionView::Helpers::Tags::TextField
  # source://actionview//lib/action_view/helpers/tags/file_field.rb#7
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/file_field.rb#20
  def hidden_field_for_multiple_file(options); end
end

# source://actionview//lib/action_view/helpers/tags/grouped_collection_select.rb#6
class ActionView::Helpers::Tags::GroupedCollectionSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper

  # source://actionview//lib/action_view/helpers/tags/grouped_collection_select.rb#10
  def initialize(object_name, method_name, template_object, collection, group_method, group_label_method, option_key_method, option_value_method, options, html_options); end

  # source://actionview//lib/action_view/helpers/tags/grouped_collection_select.rb#21
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/hidden_field.rb#6
class ActionView::Helpers::Tags::HiddenField < ::ActionView::Helpers::Tags::TextField
  # source://actionview//lib/action_view/helpers/tags/hidden_field.rb#7
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/label.rb#6
class ActionView::Helpers::Tags::Label < ::ActionView::Helpers::Tags::Base
  # source://actionview//lib/action_view/helpers/tags/label.rb#34
  def initialize(object_name, method_name, template_object, content_or_options = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tags/label.rb#48
  def render(&block); end

  private

  # source://actionview//lib/action_view/helpers/tags/label.rb#78
  def render_component(builder); end
end

# source://actionview//lib/action_view/helpers/tags/label.rb#7
class ActionView::Helpers::Tags::Label::LabelBuilder
  # source://actionview//lib/action_view/helpers/tags/label.rb#10
  def initialize(template_object, object_name, method_name, object, tag_value); end

  # source://actionview//lib/action_view/helpers/tags/label.rb#8
  def object; end

  # source://actionview//lib/action_view/helpers/tags/label.rb#29
  def to_s; end

  # source://actionview//lib/action_view/helpers/tags/label.rb#18
  def translation; end
end

# source://actionview//lib/action_view/helpers/tags/month_field.rb#6
class ActionView::Helpers::Tags::MonthField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview//lib/action_view/helpers/tags/month_field.rb#8
  def format_datetime(value); end
end

# source://actionview//lib/action_view/helpers/tags/number_field.rb#6
class ActionView::Helpers::Tags::NumberField < ::ActionView::Helpers::Tags::TextField
  # source://actionview//lib/action_view/helpers/tags/number_field.rb#7
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/password_field.rb#6
class ActionView::Helpers::Tags::PasswordField < ::ActionView::Helpers::Tags::TextField
  # source://actionview//lib/action_view/helpers/tags/password_field.rb#7
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/placeholderable.rb#6
module ActionView::Helpers::Tags::Placeholderable
  # source://actionview//lib/action_view/helpers/tags/placeholderable.rb#7
  def initialize(*_arg0); end
end

# source://actionview//lib/action_view/helpers/tags/radio_button.rb#8
class ActionView::Helpers::Tags::RadioButton < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Checkable

  # source://actionview//lib/action_view/helpers/tags/radio_button.rb#11
  def initialize(object_name, method_name, template_object, tag_value, options); end

  # source://actionview//lib/action_view/helpers/tags/radio_button.rb#16
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/radio_button.rb#26
  def checked?(value); end
end

# source://actionview//lib/action_view/helpers/tags/range_field.rb#6
class ActionView::Helpers::Tags::RangeField < ::ActionView::Helpers::Tags::NumberField; end

# source://actionview//lib/action_view/helpers/tags/search_field.rb#6
class ActionView::Helpers::Tags::SearchField < ::ActionView::Helpers::Tags::TextField
  # source://actionview//lib/action_view/helpers/tags/search_field.rb#7
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/select.rb#6
class ActionView::Helpers::Tags::Select < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper

  # source://actionview//lib/action_view/helpers/tags/select.rb#10
  def initialize(object_name, method_name, template_object, choices, options, html_options); end

  # source://actionview//lib/action_view/helpers/tags/select.rb#19
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/select.rb#39
  def grouped_choices?; end
end

# source://actionview//lib/action_view/helpers/tags/select_renderer.rb#6
module ActionView::Helpers::Tags::SelectRenderer
  private

  # source://actionview//lib/action_view/helpers/tags/select_renderer.rb#36
  def add_options(option_tags, options, value = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/tags/select_renderer.rb#31
  def placeholder_required?(html_options); end

  # source://actionview//lib/action_view/helpers/tags/select_renderer.rb#8
  def select_content_tag(option_tags, options, html_options); end
end

# source://actionview//lib/action_view/helpers/tags/tel_field.rb#6
class ActionView::Helpers::Tags::TelField < ::ActionView::Helpers::Tags::TextField; end

# source://actionview//lib/action_view/helpers/tags/text_area.rb#8
class ActionView::Helpers::Tags::TextArea < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  # source://actionview//lib/action_view/helpers/tags/text_area.rb#11
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/text_field.rb#8
class ActionView::Helpers::Tags::TextField < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  # source://actionview//lib/action_view/helpers/tags/text_field.rb#11
  def render; end

  private

  # source://actionview//lib/action_view/helpers/tags/text_field.rb#27
  def field_type; end

  class << self
    # source://actionview//lib/action_view/helpers/tags/text_field.rb#21
    def field_type; end
  end
end

# source://actionview//lib/action_view/helpers/tags/time_field.rb#6
class ActionView::Helpers::Tags::TimeField < ::ActionView::Helpers::Tags::DatetimeField
  # source://actionview//lib/action_view/helpers/tags/time_field.rb#7
  def initialize(object_name, method_name, template_object, options = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/tags/time_field.rb#13
  def format_datetime(value); end
end

# source://actionview//lib/action_view/helpers/tags/time_select.rb#6
class ActionView::Helpers::Tags::TimeSelect < ::ActionView::Helpers::Tags::DateSelect; end

# source://actionview//lib/action_view/helpers/tags/time_zone_select.rb#6
class ActionView::Helpers::Tags::TimeZoneSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper

  # source://actionview//lib/action_view/helpers/tags/time_zone_select.rb#10
  def initialize(object_name, method_name, template_object, priority_zones, options, html_options); end

  # source://actionview//lib/action_view/helpers/tags/time_zone_select.rb#17
  def render; end
end

# source://actionview//lib/action_view/helpers/tags/translator.rb#6
class ActionView::Helpers::Tags::Translator
  # source://actionview//lib/action_view/helpers/tags/translator.rb#7
  def initialize(object, object_name, method_and_value, scope:); end

  # source://actionview//lib/action_view/helpers/tags/translator.rb#14
  def translate; end

  private

  # source://actionview//lib/action_view/helpers/tags/translator.rb#31
  def human_attribute_name; end

  # source://actionview//lib/action_view/helpers/tags/translator.rb#22
  def i18n_default; end

  # source://actionview//lib/action_view/helpers/tags/translator.rb#20
  def method_and_value; end

  # source://actionview//lib/action_view/helpers/tags/translator.rb#20
  def model; end

  # source://actionview//lib/action_view/helpers/tags/translator.rb#20
  def object_name; end

  # source://actionview//lib/action_view/helpers/tags/translator.rb#20
  def scope; end
end

# source://actionview//lib/action_view/helpers/tags/url_field.rb#6
class ActionView::Helpers::Tags::UrlField < ::ActionView::Helpers::Tags::TextField; end

# source://actionview//lib/action_view/helpers/tags/week_field.rb#6
class ActionView::Helpers::Tags::WeekField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview//lib/action_view/helpers/tags/week_field.rb#8
  def format_datetime(value); end
end

# source://actionview//lib/action_view/helpers/tags/weekday_select.rb#6
class ActionView::Helpers::Tags::WeekdaySelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper

  # source://actionview//lib/action_view/helpers/tags/weekday_select.rb#10
  def initialize(object_name, method_name, template_object, options, html_options); end

  # source://actionview//lib/action_view/helpers/tags/weekday_select.rb#16
  def render; end
end

# source://actionview//lib/action_view/helpers/text_helper.rb#36
module ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::SanitizeHelper

  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview//lib/action_view/helpers/text_helper.rb#63
  def concat(string); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#454
  def current_cycle(name = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#430
  def cycle(first_value, *values); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#235
  def excerpt(text, phrase, options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#174
  def highlight(text, phrases, options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#290
  def pluralize(count, singular, plural_arg = T.unsafe(nil), plural: T.unsafe(nil), locale: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#477
  def reset_cycle(name = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#67
  def safe_concat(string); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#376
  def simple_format(text, html_options = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#122
  def truncate(text, options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#320
  def word_wrap(text, line_width: T.unsafe(nil), break_sequence: T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/text_helper.rb#540
  def cut_excerpt_part(part_position, part, separator, options); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#522
  def get_cycle(name); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#527
  def set_cycle(name, cycle_object); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#532
  def split_paragraphs(text); end
end

# source://actionview//lib/action_view/helpers/text_helper.rb#482
class ActionView::Helpers::TextHelper::Cycle
  # source://actionview//lib/action_view/helpers/text_helper.rb#485
  def initialize(first_value, *values); end

  # source://actionview//lib/action_view/helpers/text_helper.rb#494
  def current_value; end

  # source://actionview//lib/action_view/helpers/text_helper.rb#490
  def reset; end

  # source://actionview//lib/action_view/helpers/text_helper.rb#498
  def to_s; end

  # source://actionview//lib/action_view/helpers/text_helper.rb#483
  def values; end

  private

  # source://actionview//lib/action_view/helpers/text_helper.rb#505
  def next_index; end

  # source://actionview//lib/action_view/helpers/text_helper.rb#509
  def previous_index; end

  # source://actionview//lib/action_view/helpers/text_helper.rb#513
  def step_index(n); end
end

# source://actionview//lib/action_view/helpers/translation_helper.rb#9
module ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  extend ::ActiveSupport::Concern

  # source://actionview//lib/action_view/helpers/translation_helper.rb#116
  def l(object, **options); end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#116
  def localize(object, **options); end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#73
  def t(key, **options); end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#73
  def translate(key, **options); end

  private

  # source://actionview//lib/action_view/helpers/translation_helper.rb#142
  def missing_translation(key, options); end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#128
  def scope_key_by_partial(key); end

  class << self
    # source://actionview//lib/action_view/helpers/translation_helper.rb#15
    def raise_on_missing_translations; end

    # source://actionview//lib/action_view/helpers/translation_helper.rb#15
    def raise_on_missing_translations=(_arg0); end
  end
end

# source://actionview//lib/action_view/helpers/translation_helper.rb#122
ActionView::Helpers::TranslationHelper::MISSING_TRANSLATION = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/helpers/translation_helper.rb#125
ActionView::Helpers::TranslationHelper::NO_DEFAULT = T.let(T.unsafe(nil), Array)

# source://actionview//lib/action_view/helpers/url_helper.rb#17
module ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods

  # source://actionview//lib/action_view/helpers/url_helper.rb#357
  def button_to(name = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#35
  def button_to_generates_button_tag; end

  # source://actionview//lib/action_view/helpers/url_helper.rb#35
  def button_to_generates_button_tag=(val); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#609
  def current_page?(options = T.unsafe(nil), check_parameters: T.unsafe(nil), **options_as_kwargs); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#234
  def link_to(name = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#498
  def link_to_if(condition, name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#475
  def link_to_unless(condition, name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#451
  def link_to_unless_current(name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#548
  def mail_to(email_address, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#743
  def phone_to(phone_number, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#692
  def sms_to(phone_number, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#38
  def url_for(options = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/helpers/url_helper.rb#50
  def _back_url; end

  # source://actionview//lib/action_view/helpers/url_helper.rb#55
  def _filtered_referrer; end

  # source://actionview//lib/action_view/helpers/url_helper.rb#786
  def add_method_to_attributes!(html_options, method); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#757
  def convert_options_to_data_attributes(options, html_options); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#780
  def link_to_remote_options?(options); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#797
  def method_for_options(options); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#815
  def method_not_get_method?(method); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#834
  def method_tag(method); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#880
  def remove_trailing_slash!(url_string); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#854
  def to_form_params(attribute, namespace = T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#820
  def token_tag(token = T.unsafe(nil), form_options: T.unsafe(nil)); end

  # source://actionview//lib/action_view/helpers/url_helper.rb#772
  def url_target(name, options); end

  class << self
    # source://actionview//lib/action_view/helpers/url_helper.rb#35
    def button_to_generates_button_tag; end

    # source://actionview//lib/action_view/helpers/url_helper.rb#35
    def button_to_generates_button_tag=(val); end
  end
end

# source://actionview//lib/action_view/helpers/url_helper.rb#23
ActionView::Helpers::UrlHelper::BUTTON_TAG_METHOD_VERBS = T.let(T.unsafe(nil), Array)

# source://actionview//lib/action_view/helpers/url_helper.rb#29
module ActionView::Helpers::UrlHelper::ClassMethods
  # source://actionview//lib/action_view/helpers/url_helper.rb#30
  def _url_for_modules; end
end

# source://actionview//lib/action_view/helpers/url_helper.rb#807
ActionView::Helpers::UrlHelper::STRINGIFIED_COMMON_METHODS = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/rendering.rb#8
class ActionView::I18nProxy < ::I18n::Config
  # source://actionview//lib/action_view/rendering.rb#11
  def initialize(original_config, lookup_context); end

  # source://actionview//lib/action_view/rendering.rb#17
  def locale; end

  # source://actionview//lib/action_view/rendering.rb#21
  def locale=(value); end

  # source://actionview//lib/action_view/rendering.rb#9
  def lookup_context; end

  # source://actionview//lib/action_view/rendering.rb#9
  def original_config; end
end

# source://actionview//lib/action_view/layouts.rb#205
module ActionView::Layouts
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionView::ViewPaths
  include ::ActionView::Rendering

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods
  mixes_in_class_methods ::ActionView::Rendering::ClassMethods
  mixes_in_class_methods ::ActionView::Layouts::ClassMethods

  # source://actionview//lib/action_view/layouts.rb#363
  def initialize(*_arg0); end

  # source://actionview//lib/action_view/layouts.rb#352
  def _normalize_options(options); end

  def action_has_layout=(_arg0); end

  # source://actionview//lib/action_view/layouts.rb#374
  def action_has_layout?; end

  private

  # source://actionview//lib/action_view/layouts.rb#379
  def _conditional_layout?; end

  # source://actionview//lib/action_view/layouts.rb#417
  def _default_layout(lookup_context, formats, require_layout = T.unsafe(nil)); end

  # source://actionview//lib/action_view/layouts.rb#432
  def _include_layout?(options); end

  # source://actionview//lib/action_view/layouts.rb#384
  def _layout(*_arg0); end

  # source://actionview//lib/action_view/layouts.rb#390
  def _layout_for_option(name); end

  # source://actionview//lib/action_view/layouts.rb#403
  def _normalize_layout(value); end

  module GeneratedClassMethods
    def _layout; end
    def _layout=(value); end
    def _layout?; end
    def _layout_conditions; end
    def _layout_conditions=(value); end
    def _layout_conditions?; end
  end

  module GeneratedInstanceMethods; end
end

# source://actionview//lib/action_view/layouts.rb#219
module ActionView::Layouts::ClassMethods
  # source://actionview//lib/action_view/layouts.rb#285
  def _write_layout_method; end

  # source://actionview//lib/action_view/layouts.rb#220
  def inherited(klass); end

  # source://actionview//lib/action_view/layouts.rb#271
  def layout(layout, conditions = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/layouts.rb#347
  def _implied_layout_name; end
end

# source://actionview//lib/action_view/layouts.rb#227
module ActionView::Layouts::ClassMethods::LayoutConditions
  private

  # source://actionview//lib/action_view/layouts.rb#235
  def _conditional_layout?; end
end

# source://actionview//lib/action_view/log_subscriber.rb#9
class ActionView::LogSubscriber < ::ActiveSupport::LogSubscriber
  include ::ActionView::LogSubscriber::Utils

  # source://actionview//lib/action_view/log_subscriber.rb#12
  def initialize; end

  # source://actionview//lib/action_view/log_subscriber.rb#45
  def render_collection(event); end

  # source://actionview//lib/action_view/log_subscriber.rb#37
  def render_layout(event); end

  # source://actionview//lib/action_view/log_subscriber.rb#26
  def render_partial(event); end

  # source://actionview//lib/action_view/log_subscriber.rb#17
  def render_template(event); end

  private

  # source://actionview//lib/action_view/log_subscriber.rb#117
  def cache_message(payload); end

  # source://actionview//lib/action_view/log_subscriber.rb#109
  def render_count(payload); end

  class << self
    # source://actionview//lib/action_view/log_subscriber.rb#101
    def attach_to(*_arg0); end

    # source://activesupport/7.1.3.3/lib/active_support/log_subscriber.rb#87
    def log_levels; end
  end
end

# source://actionview//lib/action_view/log_subscriber.rb#76
class ActionView::LogSubscriber::Start
  include ::ActionView::LogSubscriber::Utils

  # source://actionview//lib/action_view/log_subscriber.rb#97
  def finish(name, id, payload); end

  # source://actionview//lib/action_view/log_subscriber.rb#79
  def start(name, id, payload); end
end

# source://actionview//lib/action_view/log_subscriber.rb#57
module ActionView::LogSubscriber::Utils
  # source://actionview//lib/action_view/log_subscriber.rb#58
  def logger; end

  private

  # source://actionview//lib/action_view/log_subscriber.rb#63
  def from_rails_root(string); end

  # source://actionview//lib/action_view/log_subscriber.rb#69
  def rails_root; end
end

# source://actionview//lib/action_view/log_subscriber.rb#10
ActionView::LogSubscriber::VIEWS_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/lookup_context.rb#15
class ActionView::LookupContext
  include ::ActionView::LookupContext::Accessors
  include ::ActionView::LookupContext::DetailsCache
  include ::ActionView::LookupContext::ViewPaths

  # source://actionview//lib/action_view/lookup_context.rb#232
  def initialize(view_paths, details = T.unsafe(nil), prefixes = T.unsafe(nil)); end

  # source://actionview//lib/action_view/lookup_context.rb#242
  def digest_cache; end

  # source://actionview//lib/action_view/lookup_context.rb#263
  def formats=(values); end

  # source://actionview//lib/action_view/lookup_context.rb#283
  def locale; end

  # source://actionview//lib/action_view/lookup_context.rb#290
  def locale=(value); end

  # source://actionview//lib/action_view/lookup_context.rb#16
  def prefixes; end

  # source://actionview//lib/action_view/lookup_context.rb#16
  def prefixes=(_arg0); end

  # source://actionview//lib/action_view/lookup_context.rb#246
  def with_prepended_formats(formats); end

  private

  # source://actionview//lib/action_view/lookup_context.rb#253
  def initialize_details(target, details); end

  class << self
    # source://actionview//lib/action_view/lookup_context.rb#21
    def register_detail(name, &block); end

    # source://actionview//lib/action_view/lookup_context.rb#18
    def registered_details; end

    # source://actionview//lib/action_view/lookup_context.rb#18
    def registered_details=(_arg0); end
  end
end

# source://actionview//lib/action_view/lookup_context.rb#39
module ActionView::LookupContext::Accessors
  # source://actionview//lib/action_view/lookup_context.rb#50
  def default_formats; end

  # source://actionview//lib/action_view/lookup_context.rb#52
  def default_handlers; end

  # source://actionview//lib/action_view/lookup_context.rb#43
  def default_locale; end

  # source://actionview//lib/action_view/lookup_context.rb#51
  def default_variants; end

  # source://actionview//lib/action_view/lookup_context.rb#27
  def formats; end

  # source://actionview//lib/action_view/lookup_context.rb#31
  def formats=(value); end

  # source://actionview//lib/action_view/lookup_context.rb#27
  def handlers; end

  # source://actionview//lib/action_view/lookup_context.rb#31
  def handlers=(value); end

  # source://actionview//lib/action_view/lookup_context.rb#27
  def locale; end

  # source://actionview//lib/action_view/lookup_context.rb#31
  def locale=(value); end

  # source://actionview//lib/action_view/lookup_context.rb#27
  def variants; end

  # source://actionview//lib/action_view/lookup_context.rb#31
  def variants=(value); end
end

# source://actionview//lib/action_view/lookup_context.rb#40
ActionView::LookupContext::Accessors::DEFAULT_PROCS = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/lookup_context.rb#98
module ActionView::LookupContext::DetailsCache
  # source://actionview//lib/action_view/lookup_context.rb#99
  def cache; end

  # source://actionview//lib/action_view/lookup_context.rb#99
  def cache=(_arg0); end

  # source://actionview//lib/action_view/lookup_context.rb#103
  def details_key; end

  # source://actionview//lib/action_view/lookup_context.rb#108
  def disable_cache; end

  private

  # source://actionview//lib/action_view/lookup_context.rb#116
  def _set_detail(key, value); end
end

# source://actionview//lib/action_view/lookup_context.rb#54
class ActionView::LookupContext::DetailsKey
  def eql?(_arg0); end

  class << self
    # source://actionview//lib/action_view/lookup_context.rb#77
    def clear; end

    # source://actionview//lib/action_view/lookup_context.rb#65
    def details_cache_key(details); end

    # source://actionview//lib/action_view/lookup_context.rb#61
    def digest_cache(details); end

    # source://actionview//lib/action_view/lookup_context.rb#86
    def digest_caches; end

    # source://actionview//lib/action_view/lookup_context.rb#90
    def view_context_class; end
  end
end

# source://actionview//lib/action_view/lookup_context.rb#125
module ActionView::LookupContext::ViewPaths
  # source://actionview//lib/action_view/lookup_context.rb#148
  def any?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil)); end

  # source://actionview//lib/action_view/lookup_context.rb#148
  def any_templates?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil)); end

  # source://actionview//lib/action_view/lookup_context.rb#155
  def append_view_paths(paths); end

  # source://actionview//lib/action_view/lookup_context.rb#141
  def exists?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), **options); end

  # source://actionview//lib/action_view/lookup_context.rb#128
  def find(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/lookup_context.rb#135
  def find_all(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/lookup_context.rb#128
  def find_template(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/lookup_context.rb#126
  def html_fallback_for_js; end

  # source://actionview//lib/action_view/lookup_context.rb#159
  def prepend_view_paths(paths); end

  # source://actionview//lib/action_view/lookup_context.rb#141
  def template_exists?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), **options); end

  # source://actionview//lib/action_view/lookup_context.rb#126
  def view_paths; end

  private

  # source://actionview//lib/action_view/lookup_context.rb#166
  def build_view_paths(paths); end

  # source://actionview//lib/action_view/lookup_context.rb#175
  def detail_args_for(options); end

  # source://actionview//lib/action_view/lookup_context.rb#188
  def detail_args_for_any; end

  # source://actionview//lib/action_view/lookup_context.rb#209
  def normalize_name(name, prefixes); end
end

# source://actionview//lib/action_view/template/error.rb#30
class ActionView::MissingTemplate < ::ActionView::ActionViewError
  include ::DidYouMean::Correctable

  # source://actionview//lib/action_view/template/error.rb#33
  def initialize(paths, path, prefixes, partial, details, *_arg5); end

  # source://actionview//lib/action_view/template/error.rb#93
  def corrections; end

  # source://actionview//lib/action_view/template/error.rb#31
  def partial; end

  # source://actionview//lib/action_view/template/error.rb#31
  def path; end

  # source://actionview//lib/action_view/template/error.rb#31
  def paths; end

  # source://actionview//lib/action_view/template/error.rb#31
  def prefixes; end
end

# source://actionview//lib/action_view/template/error.rb#60
class ActionView::MissingTemplate::Results
  # source://actionview//lib/action_view/template/error.rb#63
  def initialize(size); end

  # source://actionview//lib/action_view/template/error.rb#80
  def add(path, score); end

  # source://actionview//lib/action_view/template/error.rb#72
  def should_record?(score); end

  # source://actionview//lib/action_view/template/error.rb#68
  def to_a; end
end

# source://actionview//lib/action_view/template/error.rb#61
class ActionView::MissingTemplate::Results::Result < ::Struct
  def path; end
  def path=(_); end
  def score; end
  def score=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://actionview//lib/action_view/model_naming.rb#4
module ActionView::ModelNaming
  # source://actionview//lib/action_view/model_naming.rb#6
  def convert_to_model(object); end

  # source://actionview//lib/action_view/model_naming.rb#10
  def model_name_from_record_or_class(record_or_class); end
end

# source://actionview//lib/action_view/renderer/object_renderer.rb#4
class ActionView::ObjectRenderer < ::ActionView::PartialRenderer
  include ::ActionView::AbstractRenderer::ObjectRendering

  # source://actionview//lib/action_view/renderer/object_renderer.rb#7
  def initialize(lookup_context, options); end

  # source://actionview//lib/action_view/renderer/object_renderer.rb#19
  def render_object_derive_partial(object, context, block); end

  # source://actionview//lib/action_view/renderer/object_renderer.rb#13
  def render_object_with_partial(object, partial, context, block); end

  private

  # source://actionview//lib/action_view/renderer/object_renderer.rb#29
  def render_partial_template(view, locals, template, layout, block); end

  # source://actionview//lib/action_view/renderer/object_renderer.rb#25
  def template_keys(path); end
end

# source://actionview//lib/action_view/buffers.rb#21
class ActionView::OutputBuffer
  # source://actionview//lib/action_view/buffers.rb#22
  def initialize(buffer = T.unsafe(nil)); end

  # source://actionview//lib/action_view/buffers.rb#42
  def <<(value); end

  # source://actionview//lib/action_view/buffers.rb#81
  def ==(other); end

  # source://actionview//lib/action_view/buffers.rb#42
  def append=(value); end

  # source://actionview//lib/action_view/buffers.rb#27
  def blank?(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/buffers.rb#72
  def capture(*args); end

  # source://actionview//lib/action_view/buffers.rb#42
  def concat(value); end

  # source://actionview//lib/action_view/buffers.rb#27
  def empty?(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/buffers.rb#27
  def encode!(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/buffers.rb#27
  def encoding(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/buffers.rb#27
  def force_encoding(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/buffers.rb#29
  def html_safe; end

  # source://actionview//lib/action_view/buffers.rb#38
  def html_safe?; end

  # source://actionview//lib/action_view/buffers.rb#27
  def length(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/buffers.rb#85
  def raw; end

  # source://actionview//lib/action_view/buffers.rb#89
  def raw_buffer; end

  # source://actionview//lib/action_view/buffers.rb#56
  def safe_append=(value); end

  # source://actionview//lib/action_view/buffers.rb#56
  def safe_concat(value); end

  # source://actionview//lib/action_view/buffers.rb#62
  def safe_expr_append=(val); end

  # source://actionview//lib/action_view/buffers.rb#29
  def to_s; end

  # source://actionview//lib/action_view/buffers.rb#34
  def to_str; end

  private

  # source://actionview//lib/action_view/buffers.rb#68
  def initialize_copy(other); end
end

# source://actionview//lib/action_view/flows.rb#6
class ActionView::OutputFlow
  # source://actionview//lib/action_view/flows.rb#9
  def initialize; end

  # source://actionview//lib/action_view/flows.rb#24
  def append(key, value); end

  # source://actionview//lib/action_view/flows.rb#24
  def append!(key, value); end

  # source://actionview//lib/action_view/flows.rb#7
  def content; end

  # source://actionview//lib/action_view/flows.rb#14
  def get(key); end

  # source://actionview//lib/action_view/flows.rb#19
  def set(key, value); end
end

# source://actionview//lib/action_view/renderer/collection_renderer.rb#6
class ActionView::PartialIteration
  # source://actionview//lib/action_view/renderer/collection_renderer.rb#13
  def initialize(size); end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#19
  def first?; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#11
  def index; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#28
  def iterate!; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#24
  def last?; end

  # source://actionview//lib/action_view/renderer/collection_renderer.rb#8
  def size; end
end

# source://actionview//lib/action_view/renderer/partial_renderer.rb#220
class ActionView::PartialRenderer < ::ActionView::AbstractRenderer
  include ::ActionView::CollectionCaching

  # source://actionview//lib/action_view/renderer/partial_renderer.rb#223
  def initialize(lookup_context, options); end

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#12
  def collection_cache; end

  # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#12
  def collection_cache=(val); end

  # source://actionview//lib/action_view/renderer/partial_renderer.rb#230
  def render(partial, context, block); end

  private

  # source://actionview//lib/action_view/renderer/partial_renderer.rb#262
  def find_template(path, locals); end

  # source://actionview//lib/action_view/renderer/partial_renderer.rb#245
  def render_partial_template(view, locals, template, layout, block); end

  # source://actionview//lib/action_view/renderer/partial_renderer.rb#241
  def template_keys(_); end

  class << self
    # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#12
    def collection_cache; end

    # source://actionview//lib/action_view/renderer/partial_renderer/collection_caching.rb#12
    def collection_cache=(val); end
  end
end

# source://actionview//lib/action_view/path_registry.rb#4
module ActionView::PathRegistry
  class << self
    # source://actionview//lib/action_view/path_registry.rb#53
    def all_file_system_resolvers; end

    # source://actionview//lib/action_view/path_registry.rb#47
    def all_resolvers; end

    # source://actionview//lib/action_view/path_registry.rb#22
    def cast_file_system_resolvers(paths); end

    # source://actionview//lib/action_view/path_registry.rb#11
    def file_system_resolver_hooks; end

    # source://actionview//lib/action_view/path_registry.rb#14
    def get_view_paths(klass); end

    # source://actionview//lib/action_view/path_registry.rb#18
    def set_view_paths(klass, paths); end
  end
end

# source://actionview//lib/action_view/path_set.rb#11
class ActionView::PathSet
  include ::Enumerable

  # source://actionview//lib/action_view/path_set.rb#18
  def initialize(paths = T.unsafe(nil)); end

  # source://actionview//lib/action_view/path_set.rb#35
  def +(other); end

  # source://actionview//lib/action_view/path_set.rb#16
  def [](*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/path_set.rb#31
  def compact; end

  # source://actionview//lib/action_view/path_set.rb#16
  def each(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/path_set.rb#53
  def exists?(path, prefixes, partial, details, details_key, locals); end

  # source://actionview//lib/action_view/path_set.rb#40
  def find(path, prefixes, partial, details, details_key, locals); end

  # source://actionview//lib/action_view/path_set.rb#45
  def find_all(path, prefixes, partial, details, details_key, locals); end

  # source://actionview//lib/action_view/path_set.rb#16
  def include?(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/path_set.rb#14
  def paths; end

  # source://actionview//lib/action_view/path_set.rb#16
  def size(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/path_set.rb#27
  def to_ary; end

  private

  # source://actionview//lib/action_view/path_set.rb#22
  def initialize_copy(other); end

  # source://actionview//lib/action_view/path_set.rb#58
  def search_combinations(prefixes); end

  # source://actionview//lib/action_view/path_set.rb#67
  def typecast(paths); end
end

# source://actionview//lib/action_view/railtie.rb#8
class ActionView::Railtie < ::Rails::Engine
  class << self
    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
    def __callbacks; end
  end
end

# source://actionview//lib/action_view/buffers.rb#92
class ActionView::RawOutputBuffer
  # source://actionview//lib/action_view/buffers.rb#93
  def initialize(buffer); end

  # source://actionview//lib/action_view/buffers.rb#97
  def <<(value); end

  # source://actionview//lib/action_view/buffers.rb#103
  def raw; end
end

# source://actionview//lib/action_view/buffers.rb#150
class ActionView::RawStreamingBuffer
  # source://actionview//lib/action_view/buffers.rb#151
  def initialize(buffer); end

  # source://actionview//lib/action_view/buffers.rb#155
  def <<(value); end

  # source://actionview//lib/action_view/buffers.rb#161
  def raw; end
end

# source://actionview//lib/action_view/record_identifier.rb#60
module ActionView::RecordIdentifier
  include ::ActionView::ModelNaming
  extend ::ActionView::RecordIdentifier
  extend ::ActionView::ModelNaming

  # source://actionview//lib/action_view/record_identifier.rb#78
  def dom_class(record_or_class, prefix = T.unsafe(nil)); end

  # source://actionview//lib/action_view/record_identifier.rb#93
  def dom_id(record_or_class, prefix = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/record_identifier.rb#113
  def record_key_for_dom_id(record); end
end

# source://actionview//lib/action_view/record_identifier.rb#66
ActionView::RecordIdentifier::JOIN = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/record_identifier.rb#67
ActionView::RecordIdentifier::NEW = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/ripper_ast_parser.rb#6
class ActionView::RenderParser
  # source://actionview//lib/action_view/render_parser.rb#7
  def initialize(name, code); end

  # source://actionview//lib/action_view/render_parser.rb#13
  def render_calls; end

  private

  # source://actionview//lib/action_view/render_parser.rb#22
  def directory; end

  # source://actionview//lib/action_view/render_parser.rb#184
  def layout_to_virtual_path(layout_path); end

  # source://actionview//lib/action_view/render_parser.rb#40
  def normalize_args(string, options_hash); end

  # source://actionview//lib/action_view/render_parser.rb#72
  def parse_hash(node); end

  # source://actionview//lib/action_view/render_parser.rb#76
  def parse_hash_to_symbols(node); end

  # source://actionview//lib/action_view/render_parser.rb#48
  def parse_render(node); end

  # source://actionview//lib/action_view/render_parser.rb#95
  def parse_render_from_options(options_hash); end

  # source://actionview//lib/action_view/render_parser.rb#155
  def parse_str(node); end

  # source://actionview//lib/action_view/render_parser.rb#159
  def parse_sym(node); end

  # source://actionview//lib/action_view/render_parser.rb#176
  def partial_to_virtual_path(render_type, partial_path); end

  # source://actionview//lib/action_view/render_parser.rb#164
  def render_template_with_layout?(render_type, options_hash); end

  # source://actionview//lib/action_view/render_parser.rb#170
  def render_template_with_spacer?(options_hash); end

  # source://actionview//lib/action_view/render_parser.rb#26
  def resolve_path_directory(path); end
end

# source://actionview//lib/action_view/render_parser.rb#90
ActionView::RenderParser::ALL_KNOWN_KEYS = T.let(T.unsafe(nil), Array)

# source://actionview//lib/action_view/render_parser.rb#92
ActionView::RenderParser::RENDER_TYPE_KEYS = T.let(T.unsafe(nil), Array)

# source://actionview//lib/action_view/ripper_ast_parser.rb#7
module ActionView::RenderParser::RipperASTParser
  extend ::ActionView::RenderParser::RipperASTParser

  # source://actionview//lib/action_view/ripper_ast_parser.rb#188
  def parse_render_nodes(code); end
end

# source://actionview//lib/action_view/ripper_ast_parser.rb#8
class ActionView::RenderParser::RipperASTParser::Node < ::Array
  # source://actionview//lib/action_view/ripper_ast_parser.rb#11
  def initialize(type, arr, opts = T.unsafe(nil)); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#35
  def argument_nodes; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#57
  def call?; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#65
  def call_method_name; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#16
  def children; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#25
  def fcall?; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#29
  def fcall_named?(name); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#74
  def hash?; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#88
  def hash_from_body(body); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#20
  def inspect; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#45
  def string?; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#96
  def symbol?; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#78
  def to_hash; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#69
  def to_string; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#100
  def to_symbol; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#9
  def type; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#61
  def variable_name; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#49
  def variable_reference?; end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#53
  def vcall?; end
end

# source://actionview//lib/action_view/ripper_ast_parser.rb#111
class ActionView::RenderParser::RipperASTParser::NodeParser < ::Ripper
  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_BEGIN(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_CHAR(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_END(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on___end__(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_alias(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_alias_error(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_aref(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_aref_field(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_arg_ambiguous(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_arg_paren(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_args_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_args_add_block(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_args_add_star(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_args_forward(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_args_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_array(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_aryptn(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_assign(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_assign_error(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_assoc_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_assoc_splat(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_assoclist_from_args(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_backref(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_backtick(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_bare_assoc_hash(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_begin(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_binary(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_block_var(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_blockarg(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_bodystmt(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_brace_block(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_break(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_call(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_case(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_class(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_class_name_error(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_comma(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_command(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_command_call(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_comment(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_const(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_const_path_field(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_const_path_ref(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_const_ref(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_cvar(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_def(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_defined(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_defs(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_do_block(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_dot2(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_dot3(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_dyna_symbol(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_else(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_elsif(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_embdoc(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_embdoc_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_embdoc_end(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_embexpr_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_embexpr_end(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_embvar(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_ensure(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_excessed_comma(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_fcall(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_field(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_float(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_fndptn(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_for(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_gvar(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_hash(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_heredoc_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_heredoc_dedent(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_heredoc_end(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_hshptn(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_ident(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_if(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_if_mod(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_ifop(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_ignored_nl(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_ignored_sp(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_imaginary(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_in(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_int(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_ivar(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_kw(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_kwrest_param(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_label(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_label_end(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_lambda(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_lbrace(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_lbracket(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_lparen(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_magic_comment(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_massign(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_method_add_arg(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_method_add_block(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_mlhs_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_mlhs_add_post(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_mlhs_add_star(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_mlhs_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_mlhs_paren(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_module(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_mrhs_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_mrhs_add_star(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_mrhs_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_mrhs_new_from_args(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_next(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_nl(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_nokw_param(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_op(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_opassign(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_operator_ambiguous(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_param_error(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_params(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_paren(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_parse_error(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_period(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_program(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_qsymbols_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_qsymbols_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_qsymbols_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_qwords_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_qwords_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_qwords_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_rational(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_rbrace(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_rbracket(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_redo(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_regexp_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_regexp_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_regexp_end(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_regexp_literal(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_regexp_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_rescue(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_rescue_mod(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_rest_param(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_retry(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_return(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_return0(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_rparen(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_sclass(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_semicolon(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_sp(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_stmts_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_stmts_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_string_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_string_concat(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_string_content(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_string_dvar(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_string_embexpr(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_string_literal(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_super(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_symbeg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_symbol(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_symbol_literal(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_symbols_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_symbols_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_symbols_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_tlambda(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_tlambeg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_top_const_field(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_top_const_ref(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_tstring_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_tstring_content(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_tstring_end(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_unary(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_undef(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_unless(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_unless_mod(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_until(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_until_mod(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_var_alias(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_var_field(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_var_ref(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_vcall(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_void_stmt(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_when(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_while(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_while_mod(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_word_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_word_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_words_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_words_beg(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_words_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#140
  def on_words_sep(tok); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#123
  def on_xstring_add(list, item); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_xstring_literal(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#116
  def on_xstring_new(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_yield(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_yield0(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#131
  def on_zsuper(*args); end
end

# source://actionview//lib/action_view/ripper_ast_parser.rb#147
class ActionView::RenderParser::RipperASTParser::RenderCallExtractor < ::ActionView::RenderParser::RipperASTParser::NodeParser
  # source://actionview//lib/action_view/ripper_ast_parser.rb#152
  def initialize(*args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#148
  def render_calls; end

  private

  # source://actionview//lib/action_view/ripper_ast_parser.rb#177
  def on_arg_paren(content); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#163
  def on_command(name, *args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#159
  def on_fcall(name, *args); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#181
  def on_paren(content); end

  # source://actionview//lib/action_view/ripper_ast_parser.rb#167
  def on_render_call(node); end
end

# source://actionview//lib/action_view/ripper_ast_parser.rb#150
ActionView::RenderParser::RipperASTParser::RenderCallExtractor::METHODS_TO_PARSE = T.let(T.unsafe(nil), Array)

# source://actionview//lib/action_view/renderer/renderer.rb#15
class ActionView::Renderer
  # source://actionview//lib/action_view/renderer/renderer.rb#18
  def initialize(lookup_context); end

  # source://actionview//lib/action_view/renderer/renderer.rb#58
  def cache_hits; end

  # source://actionview//lib/action_view/renderer/renderer.rb#16
  def lookup_context; end

  # source://actionview//lib/action_view/renderer/renderer.rb#16
  def lookup_context=(_arg0); end

  # source://actionview//lib/action_view/renderer/renderer.rb#23
  def render(context, options); end

  # source://actionview//lib/action_view/renderer/renderer.rb#40
  def render_body(context, options); end

  # source://actionview//lib/action_view/renderer/renderer.rb#54
  def render_partial(context, options, &block); end

  # source://actionview//lib/action_view/renderer/renderer.rb#66
  def render_partial_to_object(context, options, &block); end

  # source://actionview//lib/action_view/renderer/renderer.rb#49
  def render_template(context, options); end

  # source://actionview//lib/action_view/renderer/renderer.rb#62
  def render_template_to_object(context, options); end

  # source://actionview//lib/action_view/renderer/renderer.rb#27
  def render_to_object(context, options); end

  private

  # source://actionview//lib/action_view/renderer/renderer.rb#109
  def collection_from_object(object); end

  # source://actionview//lib/action_view/renderer/renderer.rb#102
  def collection_from_options(options); end
end

# source://actionview//lib/action_view/rendering.rb#26
module ActionView::Rendering
  extend ::ActiveSupport::Concern
  include ::ActionView::ViewPaths

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods
  mixes_in_class_methods ::ActionView::Rendering::ClassMethods

  # source://actionview//lib/action_view/rendering.rb#32
  def initialize; end

  # source://actionview//lib/action_view/rendering.rb#38
  def process(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/rendering.rb#119
  def render_to_body(options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/rendering.rb#30
  def rendered_format; end

  # source://actionview//lib/action_view/rendering.rb#109
  def view_context; end

  # source://actionview//lib/action_view/rendering.rb#95
  def view_context_class; end

  # source://actionview//lib/action_view/rendering.rb#114
  def view_renderer; end

  private

  # source://actionview//lib/action_view/rendering.rb#152
  def _normalize_args(action = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/rendering.rb#176
  def _normalize_options(options); end

  # source://actionview//lib/action_view/rendering.rb#145
  def _process_format(format); end

  # source://actionview//lib/action_view/rendering.rb#126
  def _render_template(options); end
end

# source://actionview//lib/action_view/rendering.rb#45
module ActionView::Rendering::ClassMethods
  # source://actionview//lib/action_view/rendering.rb#49
  def _helpers; end

  # source://actionview//lib/action_view/rendering.rb#46
  def _routes; end

  # source://actionview//lib/action_view/rendering.rb#59
  def build_view_context_class(klass, supports_path, routes, helpers); end

  # source://actionview//lib/action_view/rendering.rb#76
  def eager_load!; end

  # source://actionview//lib/action_view/rendering.rb#52
  def inherit_view_context_class?; end

  # source://actionview//lib/action_view/rendering.rb#82
  def view_context_class; end
end

# source://actionview//lib/action_view/template/resolver.rb#12
class ActionView::Resolver
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor

  # source://actionview//lib/action_view/template/resolver.rb#72
  def all_template_paths; end

  # source://actionview//lib/action_view/template/resolver.rb#67
  def built_templates; end

  # source://actionview//lib/action_view/template/resolver.rb#53
  def caching; end

  # source://actionview//lib/action_view/template/resolver.rb#53
  def caching=(val); end

  # source://actionview//lib/action_view/template/resolver.rb#82
  def caching?(&block); end

  # source://actionview//lib/action_view/template/resolver.rb#59
  def clear_cache; end

  # source://actionview//lib/action_view/template/resolver.rb#63
  def find_all(name, prefix = T.unsafe(nil), partial = T.unsafe(nil), details = T.unsafe(nil), key = T.unsafe(nil), locals = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/template/resolver.rb#78
  def _find_all(name, prefix, partial, details, key, locals); end

  # source://actionview//lib/action_view/template/resolver.rb#87
  def find_templates(name, prefix, partial, details, locals = T.unsafe(nil)); end

  class << self
    # source://actionview//lib/action_view/template/resolver.rb#53
    def caching; end

    # source://actionview//lib/action_view/template/resolver.rb#53
    def caching=(val); end

    # source://actionview//lib/action_view/template/resolver.rb#53
    def caching?; end
  end
end

# source://actionview//lib/action_view/template/resolver.rb#15
class ActionView::Resolver::PathParser
  # source://actionview//lib/action_view/template/resolver.rb#18
  def build_path_regex; end

  # source://actionview//lib/action_view/template/resolver.rb#39
  def parse(path); end
end

# source://actionview//lib/action_view/template/resolver.rb#16
class ActionView::Resolver::PathParser::ParsedPath < ::Struct
  def details; end
  def details=(_); end
  def path; end
  def path=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://actionview//lib/action_view/routing_url_for.rb#6
module ActionView::RoutingUrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#99
  def default_url_options=(val); end

  # source://actionview//lib/action_view/routing_url_for.rb#82
  def url_for(options = T.unsafe(nil)); end

  # source://actionview//lib/action_view/routing_url_for.rb#124
  def url_options; end

  private

  # source://actionview//lib/action_view/routing_url_for.rb#139
  def _generate_paths_by_default; end

  # source://actionview//lib/action_view/routing_url_for.rb#130
  def _routes_context; end

  # source://actionview//lib/action_view/routing_url_for.rb#143
  def ensure_only_path_option(options); end

  # source://actionview//lib/action_view/routing_url_for.rb#134
  def optimize_routes_generation?; end

  class << self
    # source://actionpack/7.1.3.3/lib/action_dispatch/routing/url_for.rb#99
    def default_url_options=(val); end
  end
end

# source://actionview//lib/action_view/buffers.rb#108
class ActionView::StreamingBuffer
  # source://actionview//lib/action_view/buffers.rb#109
  def initialize(block); end

  # source://actionview//lib/action_view/buffers.rb#113
  def <<(value); end

  # source://actionview//lib/action_view/buffers.rb#113
  def append=(value); end

  # source://actionview//lib/action_view/buffers.rb#147
  def block; end

  # source://actionview//lib/action_view/buffers.rb#126
  def capture; end

  # source://actionview//lib/action_view/buffers.rb#113
  def concat(value); end

  # source://actionview//lib/action_view/buffers.rb#139
  def html_safe; end

  # source://actionview//lib/action_view/buffers.rb#135
  def html_safe?; end

  # source://actionview//lib/action_view/buffers.rb#143
  def raw; end

  # source://actionview//lib/action_view/buffers.rb#121
  def safe_append=(value); end

  # source://actionview//lib/action_view/buffers.rb#121
  def safe_concat(value); end
end

# source://actionview//lib/action_view/flows.rb#30
class ActionView::StreamingFlow < ::ActionView::OutputFlow
  # source://actionview//lib/action_view/flows.rb#31
  def initialize(view, fiber); end

  # source://actionview//lib/action_view/flows.rb#65
  def append!(key, value); end

  # source://actionview//lib/action_view/flows.rb#43
  def get(key); end

  private

  # source://actionview//lib/action_view/flows.rb#71
  def inside_fiber?; end
end

# source://actionview//lib/action_view/renderer/streaming_template_renderer.rb#13
class ActionView::StreamingTemplateRenderer < ::ActionView::TemplateRenderer
  # source://actionview//lib/action_view/renderer/streaming_template_renderer.rb#45
  def render_template(view, template, layout_name = T.unsafe(nil), locals = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/renderer/streaming_template_renderer.rb#57
  def delayed_render(buffer, template, layout, view, locals); end
end

# source://actionview//lib/action_view/renderer/streaming_template_renderer.rb#14
class ActionView::StreamingTemplateRenderer::Body
  # source://actionview//lib/action_view/renderer/streaming_template_renderer.rb#15
  def initialize(&start); end

  # source://actionview//lib/action_view/renderer/streaming_template_renderer.rb#19
  def each(&block); end

  private

  # source://actionview//lib/action_view/renderer/streaming_template_renderer.rb#31
  def log_error(exception); end
end

# source://actionview//lib/action_view/template/error.rb#245
class ActionView::SyntaxErrorInTemplate < ::ActionView::Template::Error
  # source://actionview//lib/action_view/template/error.rb#246
  def initialize(template, offending_code_string); end

  # source://actionview//lib/action_view/template/error.rb#257
  def annotated_source_code; end

  # source://actionview//lib/action_view/template/error.rb#251
  def message; end
end

# source://actionview//lib/action_view/template.rb#8
class ActionView::Template
  extend ::ActiveSupport::Autoload
  extend ::ActionView::Template::Handlers

  # source://actionview//lib/action_view/template.rb#186
  def initialize(source, identifier, handler, locals:, format: T.unsafe(nil), variant: T.unsafe(nil), virtual_path: T.unsafe(nil)); end

  # source://actionview//lib/action_view/template.rb#297
  def encode!; end

  # source://actionview//lib/action_view/template.rb#182
  def format; end

  # source://actionview//lib/action_view/template.rb#181
  def handler; end

  # source://actionview//lib/action_view/template.rb#181
  def identifier; end

  # source://actionview//lib/action_view/template.rb#276
  def inspect; end

  # source://actionview//lib/action_view/template.rb#210
  def locals; end

  # source://actionview//lib/action_view/template.rb#363
  def marshal_dump; end

  # source://actionview//lib/action_view/template.rb#367
  def marshal_load(array); end

  # source://actionview//lib/action_view/template.rb#372
  def method_name; end

  # source://actionview//lib/action_view/template.rb#248
  def render(view, locals, buffer = T.unsafe(nil), implicit_locals: T.unsafe(nil), add_to_stack: T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/template.rb#272
  def short_identifier; end

  # source://actionview//lib/action_view/template.rb#280
  def source; end

  # source://actionview//lib/action_view/template.rb#218
  def spot(location); end

  # source://actionview//lib/action_view/template.rb#342
  def strict_locals!; end

  # source://actionview//lib/action_view/template.rb#356
  def strict_locals?; end

  # source://actionview//lib/action_view/template.rb#238
  def supports_streaming?; end

  # source://actionview//lib/action_view/template.rb#228
  def translate_location(backtrace_location, spot); end

  # source://actionview//lib/action_view/template.rb#268
  def type; end

  # source://actionview//lib/action_view/template.rb#182
  def variable; end

  # source://actionview//lib/action_view/template.rb#182
  def variant; end

  # source://actionview//lib/action_view/template.rb#182
  def virtual_path; end

  private

  # source://actionview//lib/action_view/template.rb#472
  def compile(mod); end

  # source://actionview//lib/action_view/template.rb#394
  def compile!(view); end

  # source://actionview//lib/action_view/template.rb#419
  def compiled_source; end

  # source://actionview//lib/action_view/template.rb#381
  def find_node_by_id(node, node_id); end

  # source://actionview//lib/action_view/template.rb#518
  def handle_render_error(view, e); end

  # source://actionview//lib/action_view/template.rb#540
  def identifier_method_name; end

  # source://actionview//lib/action_view/template.rb#544
  def instrument(action, &block); end

  # source://actionview//lib/action_view/template.rb#552
  def instrument_payload; end

  # source://actionview//lib/action_view/template.rb#548
  def instrument_render_template(&block); end

  # source://actionview//lib/action_view/template.rb#527
  def locals_code; end

  # source://actionview//lib/action_view/template.rb#510
  def offset; end

  class << self
    # source://actionview//lib/action_view/template.rb#167
    def frozen_string_literal; end

    # source://actionview//lib/action_view/template.rb#167
    def frozen_string_literal=(_arg0); end

    # source://actionview//lib/action_view/template.rb#171
    def mime_types_implementation=(implementation); end
  end
end

# source://actionview//lib/action_view/template/error.rb#154
class ActionView::Template::Error < ::ActionView::ActionViewError
  # source://actionview//lib/action_view/template/error.rb#162
  def initialize(template); end

  # source://actionview//lib/action_view/template/error.rb#220
  def annotated_source_code; end

  # source://actionview//lib/action_view/template/error.rb#171
  def backtrace; end

  # source://actionview//lib/action_view/template/error.rb#175
  def backtrace_locations; end

  # source://actionview//lib/action_view/template/error.rb#158
  def cause; end

  # source://actionview//lib/action_view/template/error.rb#179
  def file_name; end

  # source://actionview//lib/action_view/template/error.rb#212
  def line_number; end

  # source://actionview//lib/action_view/template/error.rb#192
  def source_extract(indentation = T.unsafe(nil)); end

  # source://actionview//lib/action_view/template/error.rb#183
  def sub_template_message; end

  # source://actionview//lib/action_view/template/error.rb#207
  def sub_template_of(template_path); end

  # source://actionview//lib/action_view/template/error.rb#160
  def template; end

  private

  # source://actionview//lib/action_view/template/error.rb#233
  def formatted_code_for(source_code, line_counter, indent); end

  # source://actionview//lib/action_view/template/error.rb#225
  def source_location; end
end

# source://actionview//lib/action_view/template/error.rb#155
ActionView::Template::Error::SOURCE_CODE_RADIUS = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/template/html.rb#6
class ActionView::Template::HTML
  # source://actionview//lib/action_view/template/html.rb#9
  def initialize(string, type); end

  # source://actionview//lib/action_view/template/html.rb#28
  def format; end

  # source://actionview//lib/action_view/template/html.rb#14
  def identifier; end

  # source://actionview//lib/action_view/template/html.rb#14
  def inspect; end

  # source://actionview//lib/action_view/template/html.rb#24
  def render(*args); end

  # source://actionview//lib/action_view/template/html.rb#20
  def to_str; end

  # source://actionview//lib/action_view/template/html.rb#7
  def type; end
end

# source://actionview//lib/action_view/template/handlers.rb#6
module ActionView::Template::Handlers
  # source://actionview//lib/action_view/template/handlers.rb#61
  def handler_for_extension(extension); end

  # source://actionview//lib/action_view/template/handlers.rb#56
  def register_default_template_handler(extension, klass); end

  # source://actionview//lib/action_view/template/handlers.rb#31
  def register_template_handler(*extensions, handler); end

  # source://actionview//lib/action_view/template/handlers.rb#52
  def registered_template_handler(extension); end

  # source://actionview//lib/action_view/template/handlers.rb#48
  def template_handler_extensions; end

  # source://actionview//lib/action_view/template/handlers.rb#40
  def unregister_template_handler(*extensions); end

  class << self
    # source://actionview//lib/action_view/template/handlers.rb#12
    def extended(base); end

    # source://actionview//lib/action_view/template/handlers.rb#23
    def extensions; end
  end
end

# source://actionview//lib/action_view/template/handlers/builder.rb#5
class ActionView::Template::Handlers::Builder
  # source://actionview//lib/action_view/template/handlers/builder.rb#8
  def call(template, source); end

  # source://actionview//lib/action_view/template/handlers/builder.rb#6
  def default_format; end

  # source://actionview//lib/action_view/template/handlers/builder.rb#6
  def default_format=(_arg0); end

  # source://actionview//lib/action_view/template/handlers/builder.rb#6
  def default_format?; end

  private

  # source://actionview//lib/action_view/template/handlers/builder.rb#17
  def require_engine; end

  class << self
    # source://actionview//lib/action_view/template/handlers/builder.rb#6
    def default_format; end

    # source://actionview//lib/action_view/template/handlers/builder.rb#6
    def default_format=(value); end

    # source://actionview//lib/action_view/template/handlers/builder.rb#6
    def default_format?; end
  end
end

# source://actionview//lib/action_view/template/handlers/erb.rb#9
class ActionView::Template::Handlers::ERB
  # source://actionview//lib/action_view/template/handlers/erb.rb#61
  def call(template, source); end

  # source://actionview//lib/action_view/template/handlers/erb.rb#17
  def erb_implementation; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#17
  def erb_implementation=(_arg0); end

  # source://actionview//lib/action_view/template/handlers/erb.rb#17
  def erb_implementation?; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#14
  def erb_trim_mode; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#14
  def erb_trim_mode=(_arg0); end

  # source://actionview//lib/action_view/template/handlers/erb.rb#14
  def erb_trim_mode?; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#20
  def escape_ignore_list; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#20
  def escape_ignore_list=(_arg0); end

  # source://actionview//lib/action_view/template/handlers/erb.rb#20
  def escape_ignore_list?; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#37
  def handles_encoding?; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#23
  def strip_trailing_newlines; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#23
  def strip_trailing_newlines=(_arg0); end

  # source://actionview//lib/action_view/template/handlers/erb.rb#23
  def strip_trailing_newlines?; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#33
  def supports_streaming?; end

  # source://actionview//lib/action_view/template/handlers/erb.rb#43
  def translate_location(spot, backtrace_location, source); end

  private

  # source://actionview//lib/action_view/template/handlers/erb.rb#108
  def find_offset(compiled, source_tokens, error_column); end

  # source://actionview//lib/action_view/template/handlers/erb.rb#93
  def valid_encoding(string, encoding); end

  class << self
    # source://actionview//lib/action_view/template/handlers/erb.rb#29
    def call(template, source); end

    # source://actionview//lib/action_view/template/handlers/erb.rb#17
    def erb_implementation; end

    # source://actionview//lib/action_view/template/handlers/erb.rb#17
    def erb_implementation=(value); end

    # source://actionview//lib/action_view/template/handlers/erb.rb#17
    def erb_implementation?; end

    # source://actionview//lib/action_view/template/handlers/erb.rb#14
    def erb_trim_mode; end

    # source://actionview//lib/action_view/template/handlers/erb.rb#14
    def erb_trim_mode=(value); end

    # source://actionview//lib/action_view/template/handlers/erb.rb#14
    def erb_trim_mode?; end

    # source://actionview//lib/action_view/template/handlers/erb.rb#20
    def escape_ignore_list; end

    # source://actionview//lib/action_view/template/handlers/erb.rb#20
    def escape_ignore_list=(value); end

    # source://actionview//lib/action_view/template/handlers/erb.rb#20
    def escape_ignore_list?; end

    # source://actionview//lib/action_view/template/handlers/erb.rb#23
    def strip_trailing_newlines; end

    # source://actionview//lib/action_view/template/handlers/erb.rb#23
    def strip_trailing_newlines=(value); end

    # source://actionview//lib/action_view/template/handlers/erb.rb#23
    def strip_trailing_newlines?; end
  end
end

# source://actionview//lib/action_view/template/handlers/erb.rb#25
ActionView::Template::Handlers::ERB::ENCODING_TAG = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/template/handlers/erb/erubi.rb#9
class ActionView::Template::Handlers::ERB::Erubi < ::Erubi::Engine
  # source://actionview//lib/action_view/template/handlers/erb/erubi.rb#11
  def initialize(input, properties = T.unsafe(nil)); end

  private

  # source://actionview//lib/action_view/template/handlers/erb/erubi.rb#65
  def add_code(code); end

  # source://actionview//lib/action_view/template/handlers/erb/erubi.rb#47
  def add_expression(indicator, code); end

  # source://actionview//lib/action_view/template/handlers/erb/erubi.rb#70
  def add_postamble(_); end

  # source://actionview//lib/action_view/template/handlers/erb/erubi.rb#30
  def add_text(text); end

  # source://actionview//lib/action_view/template/handlers/erb/erubi.rb#75
  def flush_newline_if_pending(src); end
end

# source://actionview//lib/action_view/template/handlers/erb/erubi.rb#45
ActionView::Template::Handlers::ERB::Erubi::BLOCK_EXPR = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/template/handlers/erb.rb#27
class ActionView::Template::Handlers::ERB::LocationParsingError < ::StandardError; end

# source://actionview//lib/action_view/template/handlers/html.rb#5
class ActionView::Template::Handlers::Html < ::ActionView::Template::Handlers::Raw
  # source://actionview//lib/action_view/template/handlers/html.rb#6
  def call(template, source); end
end

# source://actionview//lib/action_view/template/handlers/raw.rb#5
class ActionView::Template::Handlers::Raw
  # source://actionview//lib/action_view/template/handlers/raw.rb#6
  def call(template, source); end
end

# source://actionview//lib/action_view/template/inline.rb#7
class ActionView::Template::Inline < ::ActionView::Template
  # source://actionview//lib/action_view/template/inline.rb#16
  def compile(mod); end
end

# source://actionview//lib/action_view/template/inline.rb#8
ActionView::Template::Inline::Finalizer = T.let(T.unsafe(nil), Proc)

# source://actionview//lib/action_view/template.rb#284
ActionView::Template::LEADING_ENCODING_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/template.rb#184
ActionView::Template::NONE = T.let(T.unsafe(nil), Object)

# source://actionview//lib/action_view/template/raw_file.rb#6
class ActionView::Template::RawFile
  # source://actionview//lib/action_view/template/raw_file.rb#9
  def initialize(filename); end

  # source://actionview//lib/action_view/template/raw_file.rb#7
  def format; end

  # source://actionview//lib/action_view/template/raw_file.rb#7
  def format=(_arg0); end

  # source://actionview//lib/action_view/template/raw_file.rb#16
  def identifier; end

  # source://actionview//lib/action_view/template/raw_file.rb#20
  def render(*args); end

  # source://actionview//lib/action_view/template/raw_file.rb#7
  def type; end

  # source://actionview//lib/action_view/template/raw_file.rb#7
  def type=(_arg0); end
end

# source://actionview//lib/action_view/template/renderable.rb#6
class ActionView::Template::Renderable
  # source://actionview//lib/action_view/template/renderable.rb#7
  def initialize(renderable); end

  # source://actionview//lib/action_view/template/renderable.rb#19
  def format; end

  # source://actionview//lib/action_view/template/renderable.rb#11
  def identifier; end

  # source://actionview//lib/action_view/template/renderable.rb#15
  def render(context, *args); end
end

# source://actionview//lib/action_view/template.rb#11
ActionView::Template::STRICT_LOCALS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://actionview//lib/action_view/template/types.rb#9
class ActionView::Template::SimpleType
  # source://actionview//lib/action_view/template/types.rb#29
  def initialize(symbol); end

  # source://actionview//lib/action_view/template/types.rb#43
  def ==(type); end

  # source://actionview//lib/action_view/template/types.rb#38
  def ref; end

  # source://actionview//lib/action_view/template/types.rb#27
  def symbol; end

  # source://actionview//lib/action_view/template/types.rb#33
  def to_s; end

  # source://actionview//lib/action_view/template/types.rb#33
  def to_str; end

  # source://actionview//lib/action_view/template/types.rb#38
  def to_sym; end

  class << self
    # source://actionview//lib/action_view/template/types.rb#14
    def [](type); end

    # source://actionview//lib/action_view/template/types.rb#12
    def symbols; end

    # source://actionview//lib/action_view/template/types.rb#22
    def valid_symbols?(symbols); end
  end
end

# source://actionview//lib/action_view/template/sources.rb#5
module ActionView::Template::Sources
  extend ::ActiveSupport::Autoload
end

# source://actionview//lib/action_view/template/sources/file.rb#6
class ActionView::Template::Sources::File
  # source://actionview//lib/action_view/template/sources/file.rb#7
  def initialize(filename); end

  # source://actionview//lib/action_view/template/sources/file.rb#11
  def to_s; end
end

# source://actionview//lib/action_view/template/text.rb#6
class ActionView::Template::Text
  # source://actionview//lib/action_view/template/text.rb#9
  def initialize(string); end

  # source://actionview//lib/action_view/template/text.rb#27
  def format; end

  # source://actionview//lib/action_view/template/text.rb#13
  def identifier; end

  # source://actionview//lib/action_view/template/text.rb#13
  def inspect; end

  # source://actionview//lib/action_view/template/text.rb#23
  def render(*args); end

  # source://actionview//lib/action_view/template/text.rb#19
  def to_str; end

  # source://actionview//lib/action_view/template/text.rb#7
  def type; end

  # source://actionview//lib/action_view/template/text.rb#7
  def type=(_arg0); end
end

# source://actionview//lib/action_view/template.rb#176
ActionView::Template::Types = Mime

# source://actionview//lib/action_view/template_details.rb#4
class ActionView::TemplateDetails
  # source://actionview//lib/action_view/template_details.rb#35
  def initialize(locale, handler, format, variant); end

  # source://actionview//lib/action_view/template_details.rb#33
  def format; end

  # source://actionview//lib/action_view/template_details.rb#62
  def format_or_default; end

  # source://actionview//lib/action_view/template_details.rb#33
  def handler; end

  # source://actionview//lib/action_view/template_details.rb#58
  def handler_class; end

  # source://actionview//lib/action_view/template_details.rb#33
  def locale; end

  # source://actionview//lib/action_view/template_details.rb#42
  def matches?(requested); end

  # source://actionview//lib/action_view/template_details.rb#49
  def sort_key_for(requested); end

  # source://actionview//lib/action_view/template_details.rb#33
  def variant; end
end

# source://actionview//lib/action_view/template_details.rb#5
class ActionView::TemplateDetails::Requested
  # source://actionview//lib/action_view/template_details.rb#11
  def initialize(locale:, handlers:, formats:, variants:); end

  # source://actionview//lib/action_view/template_details.rb#6
  def formats; end

  # source://actionview//lib/action_view/template_details.rb#7
  def formats_idx; end

  # source://actionview//lib/action_view/template_details.rb#6
  def handlers; end

  # source://actionview//lib/action_view/template_details.rb#7
  def handlers_idx; end

  # source://actionview//lib/action_view/template_details.rb#6
  def locale; end

  # source://actionview//lib/action_view/template_details.rb#7
  def locale_idx; end

  # source://actionview//lib/action_view/template_details.rb#6
  def variants; end

  # source://actionview//lib/action_view/template_details.rb#7
  def variants_idx; end

  private

  # source://actionview//lib/action_view/template_details.rb#28
  def build_idx_hash(arr); end
end

# source://actionview//lib/action_view/template_details.rb#9
ActionView::TemplateDetails::Requested::ANY_HASH = T.let(T.unsafe(nil), Hash)

# source://actionview//lib/action_view/template/error.rb#243
ActionView::TemplateError = ActionView::Template::Error

# source://actionview//lib/action_view/template_path.rb#11
class ActionView::TemplatePath
  # source://actionview//lib/action_view/template_path.rb#47
  def initialize(name, prefix, partial, virtual); end

  # source://actionview//lib/action_view/template_path.rb#61
  def ==(other); end

  # source://actionview//lib/action_view/template_path.rb#61
  def eql?(other); end

  # source://actionview//lib/action_view/template_path.rb#57
  def hash; end

  # source://actionview//lib/action_view/template_path.rb#12
  def name; end

  # source://actionview//lib/action_view/template_path.rb#12
  def partial; end

  # source://actionview//lib/action_view/template_path.rb#12
  def partial?; end

  # source://actionview//lib/action_view/template_path.rb#12
  def prefix; end

  # source://actionview//lib/action_view/template_path.rb#12
  def to_s; end

  # source://actionview//lib/action_view/template_path.rb#12
  def to_str; end

  # source://actionview//lib/action_view/template_path.rb#12
  def virtual; end

  # source://actionview//lib/action_view/template_path.rb#12
  def virtual_path; end

  class << self
    # source://actionview//lib/action_view/template_path.rb#43
    def build(name, prefix, partial); end

    # source://actionview//lib/action_view/template_path.rb#28
    def parse(virtual); end

    # source://actionview//lib/action_view/template_path.rb#17
    def virtual(name, prefix, partial); end
  end
end

# source://actionview//lib/action_view/renderer/template_renderer.rb#4
class ActionView::TemplateRenderer < ::ActionView::AbstractRenderer
  # source://actionview//lib/action_view/renderer/template_renderer.rb#5
  def render(context, options); end

  private

  # source://actionview//lib/action_view/renderer/template_renderer.rb#16
  def determine_template(options); end

  # source://actionview//lib/action_view/renderer/template_renderer.rb#88
  def find_layout(layout, keys, formats); end

  # source://actionview//lib/action_view/renderer/template_renderer.rb#58
  def render_template(view, template, layout_name, locals); end

  # source://actionview//lib/action_view/renderer/template_renderer.rb#71
  def render_with_layout(view, template, path, locals); end

  # source://actionview//lib/action_view/renderer/template_renderer.rb#92
  def resolve_layout(layout, keys, formats); end
end

# source://actionview//lib/action_view/test_case.rb#15
class ActionView::TestCase < ::ActiveSupport::TestCase
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionDispatch::Assertions
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
  include ::AbstractController::Helpers
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionController::TemplateAssertions
  include ::ActionView::Context
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::ActionView::Helpers
  include ::ActiveSupport::Testing::ConstantLookup
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::ActionView::TestCase::Behavior
  extend ::ActionDispatch::Assertions::RoutingAssertions::ClassMethods
  extend ::AbstractController::Helpers::Resolution
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods
  extend ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  extend ::ActionView::TestCase::Behavior::ClassMethods

  # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
  def _helper_methods; end

  # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
  def _helper_methods=(_arg0); end

  # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
  def _helper_methods?; end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation; end

  # source://actionview//lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation=(val); end

  class << self
    # source://activesupport/7.1.3.3/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
    def _helper_methods; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
    def _helper_methods=(value); end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#12
    def _helper_methods?; end

    # source://actionpack/7.1.3.3/lib/abstract_controller/helpers.rb#16
    def _helpers; end

    # source://actionview//lib/action_view/test_case.rb#201
    def content_class; end

    # source://actionview//lib/action_view/test_case.rb#201
    def content_class=(value); end

    # source://actionview//lib/action_view/test_case.rb#201
    def content_class?; end

    # source://actionview//lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation; end

    # source://actionview//lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation=(val); end
  end
end

# source://actionview//lib/action_view/test_case.rb#45
module ActionView::TestCase::Behavior
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionController::TemplateAssertions
  include ::ActionView::Context
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions
  include ::AbstractController::Helpers
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers
  include ::ActiveSupport::Testing::ConstantLookup

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionDispatch::Assertions::RoutingAssertions::ClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods
  mixes_in_class_methods ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  mixes_in_class_methods ::ActionView::TestCase::Behavior::ClassMethods

  # source://actionview//lib/action_view/test_case.rb#298
  def _routes; end

  # source://actionview//lib/action_view/test_case.rb#233
  def config; end

  # source://actionview//lib/action_view/test_case.rb#63
  def controller; end

  # source://actionview//lib/action_view/test_case.rb#63
  def controller=(_arg0); end

  # source://actionview//lib/action_view/test_case.rb#62
  def lookup_context(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/test_case.rb#63
  def output_buffer; end

  # source://actionview//lib/action_view/test_case.rb#63
  def output_buffer=(_arg0); end

  # source://actionview//lib/action_view/test_case.rb#237
  def render(options = T.unsafe(nil), local_assigns = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/test_case.rb#294
  def rendered; end

  # source://actionview//lib/action_view/test_case.rb#243
  def rendered_views; end

  # source://actionview//lib/action_view/test_case.rb#63
  def request; end

  # source://actionview//lib/action_view/test_case.rb#63
  def request=(_arg0); end

  # source://actionview//lib/action_view/test_case.rb#221
  def setup_with_controller; end

  private

  # source://actionview//lib/action_view/test_case.rb#405
  def _user_defined_ivars; end

  # source://actionview//lib/action_view/test_case.rb#357
  def _view; end

  # source://actionview//lib/action_view/test_case.rb#333
  def document_root_element; end

  # source://actionview//lib/action_view/test_case.rb#419
  def method_missing(selector, *args, **_arg2); end

  # source://actionview//lib/action_view/test_case.rb#436
  def respond_to_missing?(name, include_private = T.unsafe(nil)); end

  # source://actionview//lib/action_view/test_case.rb#357
  def view; end

  # source://actionview//lib/action_view/test_case.rb#413
  def view_assigns; end

  module GeneratedClassMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
    def content_class; end
    def content_class=(value); end
    def content_class?; end
  end

  module GeneratedInstanceMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

# source://actionview//lib/action_view/test_case.rb#65
module ActionView::TestCase::Behavior::ClassMethods
  # source://actionview//lib/action_view/test_case.rb#164
  def determine_default_helper_class(name); end

  # source://actionview//lib/action_view/test_case.rb#184
  def helper_class; end

  # source://actionview//lib/action_view/test_case.rb#182
  def helper_class=(_arg0); end

  # source://actionview//lib/action_view/test_case.rb#170
  def helper_method(*methods); end

  # source://actionview//lib/action_view/test_case.rb#66
  def inherited(descendant); end

  # source://actionview//lib/action_view/test_case.rb#188
  def new(*_arg0); end

  # source://actionview//lib/action_view/test_case.rb#148
  def register_parser(format, callable = T.unsafe(nil), &block); end

  # source://actionview//lib/action_view/test_case.rb#155
  def tests(helper_class); end

  private

  # source://actionview//lib/action_view/test_case.rb#194
  def include_helper_modules!; end
end

# source://actionview//lib/action_view/test_case.rb#370
ActionView::TestCase::Behavior::INTERNAL_IVARS = T.let(T.unsafe(nil), Array)

# source://actionview//lib/action_view/test_case.rb#337
module ActionView::TestCase::Behavior::Locals
  # source://actionview//lib/action_view/test_case.rb#340
  def render(options = T.unsafe(nil), local_assigns = T.unsafe(nil)); end

  # source://actionview//lib/action_view/test_case.rb#338
  def rendered_views; end

  # source://actionview//lib/action_view/test_case.rb#338
  def rendered_views=(_arg0); end
end

# source://actionview//lib/action_view/test_case.rb#302
class ActionView::TestCase::Behavior::RenderedViewContent < ::String
  # source://actionview//lib/action_view/test_case.rb#150
  def html; end

  # source://actionview//lib/action_view/test_case.rb#150
  def json; end
end

# source://actionview//lib/action_view/test_case.rb#306
class ActionView::TestCase::Behavior::RenderedViewsCollection
  # source://actionview//lib/action_view/test_case.rb#307
  def initialize; end

  # source://actionview//lib/action_view/test_case.rb#311
  def add(view, locals); end

  # source://actionview//lib/action_view/test_case.rb#316
  def locals_for(view); end

  # source://actionview//lib/action_view/test_case.rb#320
  def rendered_views; end

  # source://actionview//lib/action_view/test_case.rb#324
  def view_rendered?(view, expected_locals); end
end

# source://actionview//lib/action_view/test_case.rb#0
module ActionView::TestCase::HelperMethods
  # source://actionview//lib/action_view/test_case.rb#215
  def _test_case; end

  # source://actionview//lib/action_view/test_case.rb#211
  def protect_against_forgery?; end
end

# source://actionview//lib/action_view/test_case.rb#16
class ActionView::TestCase::TestController < ::ActionController::Base
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess

  # source://actionview//lib/action_view/test_case.rb#34
  def initialize; end

  # source://actionview//lib/action_view/test_case.rb#26
  def controller_path=(path); end

  # source://actionview//lib/action_view/test_case.rb#19
  def params; end

  # source://actionview//lib/action_view/test_case.rb#19
  def params=(_arg0); end

  # source://actionview//lib/action_view/test_case.rb#19
  def request; end

  # source://actionview//lib/action_view/test_case.rb#19
  def request=(_arg0); end

  # source://actionview//lib/action_view/test_case.rb#19
  def response; end

  # source://actionview//lib/action_view/test_case.rb#19
  def response=(_arg0); end

  private

  # source://actionview//lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  class << self
    # source://actionview//lib/action_view/test_case.rb#30
    def controller_name; end

    # source://actionview//lib/action_view/test_case.rb#23
    def controller_path; end

    # source://actionview//lib/action_view/test_case.rb#23
    def controller_path=(_arg0); end

    # source://actionpack/7.1.3.3/lib/action_controller/metal.rb#262
    def middleware_stack; end
  end
end

# source://actionview//lib/action_view/unbound_template.rb#6
class ActionView::UnboundTemplate
  # source://actionview//lib/action_view/unbound_template.rb#10
  def initialize(source, identifier, details:, virtual_path:); end

  # source://actionview//lib/action_view/unbound_template.rb#20
  def bind_locals(locals); end

  # source://actionview//lib/action_view/unbound_template.rb#44
  def built_templates; end

  # source://actionview//lib/action_view/unbound_template.rb#7
  def details; end

  # source://actionview//lib/action_view/unbound_template.rb#8
  def format(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/unbound_template.rb#8
  def handler(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/unbound_template.rb#8
  def locale(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/unbound_template.rb#8
  def variant(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/unbound_template.rb#7
  def virtual_path; end

  private

  # source://actionview//lib/action_view/unbound_template.rb#49
  def build_template(locals); end

  # source://actionview//lib/action_view/unbound_template.rb#63
  def normalize_locals(locals); end
end

# source://actionview//lib/action_view/gem_version.rb#9
module ActionView::VERSION; end

# source://actionview//lib/action_view/gem_version.rb#10
ActionView::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/gem_version.rb#11
ActionView::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/gem_version.rb#13
ActionView::VERSION::PRE = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/gem_version.rb#15
ActionView::VERSION::STRING = T.let(T.unsafe(nil), String)

# source://actionview//lib/action_view/gem_version.rb#12
ActionView::VERSION::TINY = T.let(T.unsafe(nil), Integer)

# source://actionview//lib/action_view/view_paths.rb#4
module ActionView::ViewPaths
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods

  # source://actionview//lib/action_view/view_paths.rb#81
  def _prefixes; end

  # source://actionview//lib/action_view/view_paths.rb#11
  def any_templates?(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/view_paths.rb#103
  def append_view_path(path); end

  # source://actionview//lib/action_view/view_paths.rb#93
  def details_for_lookup; end

  # source://actionview//lib/action_view/view_paths.rb#11
  def formats(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/view_paths.rb#11
  def formats=(arg); end

  # source://actionview//lib/action_view/view_paths.rb#11
  def locale(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/view_paths.rb#11
  def locale=(arg); end

  # source://actionview//lib/action_view/view_paths.rb#88
  def lookup_context; end

  # source://actionview//lib/action_view/view_paths.rb#113
  def prepend_view_path(path); end

  # source://actionview//lib/action_view/view_paths.rb#11
  def template_exists?(*_arg0, **_arg1, &_arg2); end

  # source://actionview//lib/action_view/view_paths.rb#11
  def view_paths(*_arg0, **_arg1, &_arg2); end
end

# source://actionview//lib/action_view/view_paths.rb#14
module ActionView::ViewPaths::ClassMethods
  # source://actionview//lib/action_view/view_paths.rb#31
  def _build_view_paths(paths); end

  # source://actionview//lib/action_view/view_paths.rb#23
  def _prefixes; end

  # source://actionview//lib/action_view/view_paths.rb#15
  def _view_paths; end

  # source://actionview//lib/action_view/view_paths.rb#19
  def _view_paths=(paths); end

  # source://actionview//lib/action_view/view_paths.rb#44
  def append_view_path(path); end

  # source://actionview//lib/action_view/view_paths.rb#54
  def prepend_view_path(path); end

  # source://actionview//lib/action_view/view_paths.rb#59
  def view_paths; end

  # source://actionview//lib/action_view/view_paths.rb#68
  def view_paths=(paths); end

  private

  # source://actionview//lib/action_view/view_paths.rb#75
  def local_prefixes; end
end

# source://actionview//lib/action_view/template/error.rb#14
class ActionView::WrongEncodingError < ::ActionView::EncodingError
  # source://actionview//lib/action_view/template/error.rb#15
  def initialize(string, encoding); end

  # source://actionview//lib/action_view/template/error.rb#19
  def message; end
end

module ERB::Escape
  private

  def html_escape(_arg0); end

  class << self
    def html_escape(_arg0); end
  end
end
